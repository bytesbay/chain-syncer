{"version":3,"file":"chain-syncer.umd.min.js","mappings":"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,EAAI,CACnCuE,cAAcvE,GAAK,OAAOj2B,GAAEi2B,EAAG,EAAI,CACnCuE,cAAcvE,GAAK,OAAOj2B,GAAEi2B,EAAG,EAAI,CACnCuE,cAAcvE,GAAK,OAAOj2B,GAAEi2B,EAAG,EAAI,CACnCuE,cAAcvE,GAAK,OAAOj2B,GAAEi2B,EAAG,EAAI,CACnCuE,eAAevE,GAAK,OAAOj2B,GAAEi2B,EAAG,GAAK,CACrCuE,eAAevE,GAAK,OAAOj2B,GAAEi2B,EAAG,GAAK,CACrCuE,eAAevE,GAAK,OAAOj2B,GAAEi2B,EAAG,GAAK,CACrCuE,eAAevE,GAAK,OAAOj2B,GAAEi2B,EAAG,GAAK,CACrCuE,eAAevE,GAAK,OAAOj2B,GAAEi2B,EAAG,GAAK,CACrCuE,eAAevE,GAAK,OAAOj2B,GAAEi2B,EAAG,GAAK,CACrCuE,eAAevE,GAAK,OAAOj2B,GAAEi2B,EAAG,GAAK,CACrCuE,eAAevE,GAAK,OAAOj2B,GAAEi2B,EAAG,GAAK,CACrCuE,eAAevE,GAAK,OAAOj2B,GAAEi2B,EAAG,GAAK,CACrCuE,eAAevE,GAAK,OAAOj2B,GAAEi2B,EAAG,GAAK,CACrCuE,eAAevE,GAAK,OAAOj2B,GAAEi2B,EAAG,GAAK,CACrCuE,eAAevE,GAAK,OAAOj2B,GAAEi2B,EAAG,GAAK,CACrCuE,eAAevE,GAAK,OAAOj2B,GAAEi2B,EAAG,GAAK,CACrCuE,eAAevE,GAAK,OAAOj2B,GAAEi2B,EAAG,GAAK,CACrCuE,eAAevE,GAAK,OAAOj2B,GAAEi2B,EAAG,GAAK,CACrCuE,eAAevE,GAAK,OAAOj2B,GAAEi2B,EAAG,GAAK,CACrCuE,eAAevE,GAAK,OAAOj2B,GAAEi2B,EAAG,GAAK,CACrCuE,eAAevE,GAAK,OAAOj2B,GAAEi2B,EAAG,GAAK,CACrCuE,eAAevE,GAAK,OAAOj2B,GAAEi2B,EAAG,GAAK,CACrCuE,eAAevE,GAAK,OAAOj2B,GAAEi2B,EAAG,GAAK,CACrCuE,eAAevE,GAAK,OAAOj2B,GAAEi2B,EAAG,GAAK,CACrCuE,eAAevE,GAAK,OAAOj2B,GAAEi2B,EAAG,GAA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","sources":["webpack://chain-syncer/webpack/universalModuleDefinition","webpack://chain-syncer/./node_modules/assert/build/assert.js","webpack://chain-syncer/./node_modules/assert/build/internal/assert/assertion_error.js","webpack://chain-syncer/./node_modules/assert/build/internal/errors.js","webpack://chain-syncer/./node_modules/assert/build/internal/util/comparisons.js","webpack://chain-syncer/./node_modules/call-bind/callBound.js","webpack://chain-syncer/./node_modules/call-bind/index.js","webpack://chain-syncer/./node_modules/console-browserify/index.js","webpack://chain-syncer/./node_modules/define-properties/index.js","webpack://chain-syncer/./node_modules/es6-object-assign/index.js","webpack://chain-syncer/./node_modules/for-each/index.js","webpack://chain-syncer/./node_modules/function-bind/implementation.js","webpack://chain-syncer/./node_modules/function-bind/index.js","webpack://chain-syncer/./node_modules/get-intrinsic/index.js","webpack://chain-syncer/./node_modules/gopd/index.js","webpack://chain-syncer/./node_modules/has-property-descriptors/index.js","webpack://chain-syncer/./node_modules/has-symbols/index.js","webpack://chain-syncer/./node_modules/has-symbols/shams.js","webpack://chain-syncer/./node_modules/has-tostringtag/shams.js","webpack://chain-syncer/./node_modules/has/src/index.js","webpack://chain-syncer/./node_modules/inherits/inherits_browser.js","webpack://chain-syncer/./node_modules/is-arguments/index.js","webpack://chain-syncer/./node_modules/is-callable/index.js","webpack://chain-syncer/./node_modules/is-generator-function/index.js","webpack://chain-syncer/./node_modules/is-nan/implementation.js","webpack://chain-syncer/./node_modules/is-nan/index.js","webpack://chain-syncer/./node_modules/is-nan/polyfill.js","webpack://chain-syncer/./node_modules/is-nan/shim.js","webpack://chain-syncer/./node_modules/is-typed-array/index.js","webpack://chain-syncer/./node_modules/object-is/implementation.js","webpack://chain-syncer/./node_modules/object-is/index.js","webpack://chain-syncer/./node_modules/object-is/polyfill.js","webpack://chain-syncer/./node_modules/object-is/shim.js","webpack://chain-syncer/./node_modules/object-keys/implementation.js","webpack://chain-syncer/./node_modules/object-keys/index.js","webpack://chain-syncer/./node_modules/object-keys/isArguments.js","webpack://chain-syncer/./node_modules/process/browser.js","webpack://chain-syncer/./node_modules/util/support/isBufferBrowser.js","webpack://chain-syncer/./node_modules/util/support/types.js","webpack://chain-syncer/./node_modules/util/util.js","webpack://chain-syncer/./node_modules/which-typed-array/index.js","webpack://chain-syncer/./node_modules/available-typed-arrays/index.js","webpack://chain-syncer/webpack/bootstrap","webpack://chain-syncer/webpack/runtime/create fake namespace object","webpack://chain-syncer/webpack/runtime/define property getters","webpack://chain-syncer/webpack/runtime/global","webpack://chain-syncer/webpack/runtime/hasOwnProperty shorthand","webpack://chain-syncer/webpack/runtime/make namespace object","webpack://chain-syncer/webpack/runtime/publicPath","webpack://chain-syncer/./node_modules/@vue/cli-service/lib/commands/build/setPublicPath.js","webpack://chain-syncer/./node_modules/tslib/tslib.es6.js","webpack://chain-syncer/./src/lib/chain-syncer/add-events.ts","webpack://chain-syncer/./src/lib/chain-syncer/add-listener.ts","webpack://chain-syncer/./src/lib/chain-syncer/update-subscriber.ts","webpack://chain-syncer/./src/lib/chain-syncer/resolve-block-ranges.ts","webpack://chain-syncer/./src/lib/chain-syncer/parse-event.ts","webpack://chain-syncer/./src/lib/chain-syncer/process-subscriber-events.ts","webpack://chain-syncer/./src/lib/chain-syncer/processing-tick.ts","webpack://chain-syncer/./src/lib/chain-syncer/safe-rescan.ts","webpack://chain-syncer/./src/lib/chain-syncer/save-latest-blocks.ts","webpack://chain-syncer/./src/lib/chain-syncer/scan-contract-blocks.ts","webpack://chain-syncer/./src/lib/chain-syncer/scan-contracts.ts","webpack://chain-syncer/./node_modules/ethers/lib.esm/_version.js","webpack://chain-syncer/./node_modules/ethers/lib.esm/utils/properties.js","webpack://chain-syncer/./node_modules/ethers/lib.esm/utils/errors.js","webpack://chain-syncer/./node_modules/ethers/lib.esm/utils/data.js","webpack://chain-syncer/./node_modules/ethers/lib.esm/utils/maths.js","webpack://chain-syncer/./node_modules/ethers/lib.esm/abi/coders/abstract-coder.js","webpack://chain-syncer/./node_modules/@noble/hashes/esm/_assert.js","webpack://chain-syncer/./node_modules/@noble/hashes/esm/_u64.js","webpack://chain-syncer/./node_modules/@noble/hashes/esm/cryptoBrowser.js","webpack://chain-syncer/./node_modules/@noble/hashes/esm/utils.js","webpack://chain-syncer/./node_modules/@noble/hashes/esm/sha3.js","webpack://chain-syncer/./node_modules/ethers/lib.esm/crypto/keccak.js","webpack://chain-syncer/./node_modules/ethers/lib.esm/address/address.js","webpack://chain-syncer/./node_modules/ethers/lib.esm/abi/typed.js","webpack://chain-syncer/./node_modules/ethers/lib.esm/abi/coders/address.js","webpack://chain-syncer/./node_modules/ethers/lib.esm/abi/coders/anonymous.js","webpack://chain-syncer/./node_modules/ethers/lib.esm/abi/coders/array.js","webpack://chain-syncer/./node_modules/ethers/lib.esm/abi/coders/boolean.js","webpack://chain-syncer/./node_modules/ethers/lib.esm/abi/coders/bytes.js","webpack://chain-syncer/./node_modules/ethers/lib.esm/abi/coders/fixed-bytes.js","webpack://chain-syncer/./node_modules/ethers/lib.esm/abi/coders/null.js","webpack://chain-syncer/./node_modules/ethers/lib.esm/abi/coders/number.js","webpack://chain-syncer/./node_modules/ethers/lib.esm/utils/utf8.js","webpack://chain-syncer/./node_modules/ethers/lib.esm/abi/coders/string.js","webpack://chain-syncer/./node_modules/ethers/lib.esm/abi/coders/tuple.js","webpack://chain-syncer/./node_modules/ethers/lib.esm/hash/id.js","webpack://chain-syncer/./node_modules/ethers/lib.esm/abi/fragments.js","webpack://chain-syncer/./node_modules/ethers/lib.esm/abi/abi-coder.js","webpack://chain-syncer/./node_modules/ethers/lib.esm/address/checks.js","webpack://chain-syncer/./node_modules/ethers/lib.esm/hash/typed-data.js","webpack://chain-syncer/./node_modules/ethers/lib.esm/transaction/accesslist.js","webpack://chain-syncer/./node_modules/ethers/lib.esm/utils/base64-browser.js","webpack://chain-syncer/./node_modules/ethers/lib.esm/utils/geturl-browser.js","webpack://chain-syncer/./node_modules/ethers/lib.esm/utils/fetch.js","webpack://chain-syncer/./node_modules/ethers/lib.esm/constants/hashes.js","webpack://chain-syncer/./node_modules/ethers/lib.esm/abi/interface.js","webpack://chain-syncer/./node_modules/ethers/lib.esm/providers/provider.js","webpack://chain-syncer/./node_modules/ethers/lib.esm/utils/events.js","webpack://chain-syncer/./node_modules/ethers/lib.esm/contract/wrappers.js","webpack://chain-syncer/./node_modules/ethers/lib.esm/contract/contract.js","webpack://chain-syncer/./node_modules/@adraffy/ens-normalize/dist/index-xnf.js","webpack://chain-syncer/./node_modules/ethers/lib.esm/hash/namehash.js","webpack://chain-syncer/./node_modules/ethers/lib.esm/crypto/signature.js","webpack://chain-syncer/./node_modules/@noble/secp256k1/lib/esm/index.js","webpack://chain-syncer/./node_modules/@noble/hashes/esm/hmac.js","webpack://chain-syncer/./node_modules/@noble/hashes/esm/_sha2.js","webpack://chain-syncer/./node_modules/@noble/hashes/esm/sha256.js","webpack://chain-syncer/./node_modules/@noble/hashes/esm/sha512.js","webpack://chain-syncer/./node_modules/ethers/lib.esm/crypto/crypto-browser.js","webpack://chain-syncer/./node_modules/ethers/lib.esm/crypto/hmac.js","webpack://chain-syncer/./node_modules/ethers/lib.esm/crypto/signing-key.js","webpack://chain-syncer/./node_modules/ethers/lib.esm/utils/rlp-decode.js","webpack://chain-syncer/./node_modules/ethers/lib.esm/utils/rlp-encode.js","webpack://chain-syncer/./node_modules/ethers/lib.esm/transaction/address.js","webpack://chain-syncer/./node_modules/ethers/lib.esm/transaction/transaction.js","webpack://chain-syncer/./node_modules/ethers/lib.esm/constants/addresses.js","webpack://chain-syncer/./node_modules/ethers/lib.esm/utils/base58.js","webpack://chain-syncer/./node_modules/ethers/lib.esm/providers/ens-resolver.js","webpack://chain-syncer/./node_modules/ethers/lib.esm/address/contract-address.js","webpack://chain-syncer/./node_modules/ethers/lib.esm/providers/format.js","webpack://chain-syncer/./node_modules/ethers/lib.esm/providers/plugins-network.js","webpack://chain-syncer/./node_modules/ethers/lib.esm/providers/network.js","webpack://chain-syncer/./node_modules/ethers/lib.esm/providers/subscriber-polling.js","webpack://chain-syncer/./node_modules/ethers/lib.esm/providers/abstract-provider.js","webpack://chain-syncer/./node_modules/ethers/lib.esm/providers/abstract-signer.js","webpack://chain-syncer/./node_modules/ethers/lib.esm/providers/subscriber-filterid.js","webpack://chain-syncer/./node_modules/ethers/lib.esm/providers/provider-jsonrpc.js","webpack://chain-syncer/./src/lib/chain-syncer/scanner-tick.ts","webpack://chain-syncer/./src/lib/chain-syncer/sync-subscribers.ts","webpack://chain-syncer/./src/lib/chain-syncer/helpers.ts","webpack://chain-syncer/./src/lib/chain-syncer/rpc-handle.ts","webpack://chain-syncer/./src/lib/chain-syncer/fill-scans-with-events.ts","webpack://chain-syncer/./src/lib/chain-syncer/index.ts","webpack://chain-syncer/./src/lib/in-memory-adapter/event.ts","webpack://chain-syncer/./src/lib/in-memory-adapter/queue-event.ts","webpack://chain-syncer/./src/lib/in-memory-adapter/index.ts","webpack://chain-syncer/./src/lib.ts","webpack://chain-syncer/./node_modules/@vue/cli-service/lib/commands/build/entry-lib.js"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"chain-syncer\"] = factory();\n\telse\n\t\troot[\"chain-syncer\"] = factory();\n})((typeof self !== 'undefined' ? self : this), function() {\nreturn ","// Currently in sync with Node.js lib/assert.js\n// https://github.com/nodejs/node/commit/2a51ae424a513ec9a6aa3466baa0cc1d55dd4f3b\n// Originally from narwhal.js (http://narwhaljs.org)\n// Copyright (c) 2009 Thomas Robinson <280north.com>\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the 'Software'), to\n// deal in the Software without restriction, including without limitation the\n// rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n// sell copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN\n// ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n'use strict';\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar _require = require('./internal/errors'),\n    _require$codes = _require.codes,\n    ERR_AMBIGUOUS_ARGUMENT = _require$codes.ERR_AMBIGUOUS_ARGUMENT,\n    ERR_INVALID_ARG_TYPE = _require$codes.ERR_INVALID_ARG_TYPE,\n    ERR_INVALID_ARG_VALUE = _require$codes.ERR_INVALID_ARG_VALUE,\n    ERR_INVALID_RETURN_VALUE = _require$codes.ERR_INVALID_RETURN_VALUE,\n    ERR_MISSING_ARGS = _require$codes.ERR_MISSING_ARGS;\n\nvar AssertionError = require('./internal/assert/assertion_error');\n\nvar _require2 = require('util/'),\n    inspect = _require2.inspect;\n\nvar _require$types = require('util/').types,\n    isPromise = _require$types.isPromise,\n    isRegExp = _require$types.isRegExp;\n\nvar objectAssign = Object.assign ? Object.assign : require('es6-object-assign').assign;\nvar objectIs = Object.is ? Object.is : require('object-is');\nvar errorCache = new Map();\nvar isDeepEqual;\nvar isDeepStrictEqual;\nvar parseExpressionAt;\nvar findNodeAround;\nvar decoder;\n\nfunction lazyLoadComparison() {\n  var comparison = require('./internal/util/comparisons');\n\n  isDeepEqual = comparison.isDeepEqual;\n  isDeepStrictEqual = comparison.isDeepStrictEqual;\n} // Escape control characters but not \\n and \\t to keep the line breaks and\n// indentation intact.\n// eslint-disable-next-line no-control-regex\n\n\nvar escapeSequencesRegExp = /[\\x00-\\x08\\x0b\\x0c\\x0e-\\x1f]/g;\nvar meta = [\"\\\\u0000\", \"\\\\u0001\", \"\\\\u0002\", \"\\\\u0003\", \"\\\\u0004\", \"\\\\u0005\", \"\\\\u0006\", \"\\\\u0007\", '\\\\b', '', '', \"\\\\u000b\", '\\\\f', '', \"\\\\u000e\", \"\\\\u000f\", \"\\\\u0010\", \"\\\\u0011\", \"\\\\u0012\", \"\\\\u0013\", \"\\\\u0014\", \"\\\\u0015\", \"\\\\u0016\", \"\\\\u0017\", \"\\\\u0018\", \"\\\\u0019\", \"\\\\u001a\", \"\\\\u001b\", \"\\\\u001c\", \"\\\\u001d\", \"\\\\u001e\", \"\\\\u001f\"];\n\nvar escapeFn = function escapeFn(str) {\n  return meta[str.charCodeAt(0)];\n};\n\nvar warned = false; // The assert module provides functions that throw\n// AssertionError's when particular conditions are not met. The\n// assert module must conform to the following interface.\n\nvar assert = module.exports = ok;\nvar NO_EXCEPTION_SENTINEL = {}; // All of the following functions must throw an AssertionError\n// when a corresponding condition is not met, with a message that\n// may be undefined if not provided. All assertion methods provide\n// both the actual and expected values to the assertion error for\n// display purposes.\n\nfunction innerFail(obj) {\n  if (obj.message instanceof Error) throw obj.message;\n  throw new AssertionError(obj);\n}\n\nfunction fail(actual, expected, message, operator, stackStartFn) {\n  var argsLen = arguments.length;\n  var internalMessage;\n\n  if (argsLen === 0) {\n    internalMessage = 'Failed';\n  } else if (argsLen === 1) {\n    message = actual;\n    actual = undefined;\n  } else {\n    if (warned === false) {\n      warned = true;\n      var warn = process.emitWarning ? process.emitWarning : console.warn.bind(console);\n      warn('assert.fail() with more than one argument is deprecated. ' + 'Please use assert.strictEqual() instead or only pass a message.', 'DeprecationWarning', 'DEP0094');\n    }\n\n    if (argsLen === 2) operator = '!=';\n  }\n\n  if (message instanceof Error) throw message;\n  var errArgs = {\n    actual: actual,\n    expected: expected,\n    operator: operator === undefined ? 'fail' : operator,\n    stackStartFn: stackStartFn || fail\n  };\n\n  if (message !== undefined) {\n    errArgs.message = message;\n  }\n\n  var err = new AssertionError(errArgs);\n\n  if (internalMessage) {\n    err.message = internalMessage;\n    err.generatedMessage = true;\n  }\n\n  throw err;\n}\n\nassert.fail = fail; // The AssertionError is defined in internal/error.\n\nassert.AssertionError = AssertionError;\n\nfunction innerOk(fn, argLen, value, message) {\n  if (!value) {\n    var generatedMessage = false;\n\n    if (argLen === 0) {\n      generatedMessage = true;\n      message = 'No value argument passed to `assert.ok()`';\n    } else if (message instanceof Error) {\n      throw message;\n    }\n\n    var err = new AssertionError({\n      actual: value,\n      expected: true,\n      message: message,\n      operator: '==',\n      stackStartFn: fn\n    });\n    err.generatedMessage = generatedMessage;\n    throw err;\n  }\n} // Pure assertion tests whether a value is truthy, as determined\n// by !!value.\n\n\nfunction ok() {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  innerOk.apply(void 0, [ok, args.length].concat(args));\n}\n\nassert.ok = ok; // The equality assertion tests shallow, coercive equality with ==.\n\n/* eslint-disable no-restricted-properties */\n\nassert.equal = function equal(actual, expected, message) {\n  if (arguments.length < 2) {\n    throw new ERR_MISSING_ARGS('actual', 'expected');\n  } // eslint-disable-next-line eqeqeq\n\n\n  if (actual != expected) {\n    innerFail({\n      actual: actual,\n      expected: expected,\n      message: message,\n      operator: '==',\n      stackStartFn: equal\n    });\n  }\n}; // The non-equality assertion tests for whether two objects are not\n// equal with !=.\n\n\nassert.notEqual = function notEqual(actual, expected, message) {\n  if (arguments.length < 2) {\n    throw new ERR_MISSING_ARGS('actual', 'expected');\n  } // eslint-disable-next-line eqeqeq\n\n\n  if (actual == expected) {\n    innerFail({\n      actual: actual,\n      expected: expected,\n      message: message,\n      operator: '!=',\n      stackStartFn: notEqual\n    });\n  }\n}; // The equivalence assertion tests a deep equality relation.\n\n\nassert.deepEqual = function deepEqual(actual, expected, message) {\n  if (arguments.length < 2) {\n    throw new ERR_MISSING_ARGS('actual', 'expected');\n  }\n\n  if (isDeepEqual === undefined) lazyLoadComparison();\n\n  if (!isDeepEqual(actual, expected)) {\n    innerFail({\n      actual: actual,\n      expected: expected,\n      message: message,\n      operator: 'deepEqual',\n      stackStartFn: deepEqual\n    });\n  }\n}; // The non-equivalence assertion tests for any deep inequality.\n\n\nassert.notDeepEqual = function notDeepEqual(actual, expected, message) {\n  if (arguments.length < 2) {\n    throw new ERR_MISSING_ARGS('actual', 'expected');\n  }\n\n  if (isDeepEqual === undefined) lazyLoadComparison();\n\n  if (isDeepEqual(actual, expected)) {\n    innerFail({\n      actual: actual,\n      expected: expected,\n      message: message,\n      operator: 'notDeepEqual',\n      stackStartFn: notDeepEqual\n    });\n  }\n};\n/* eslint-enable */\n\n\nassert.deepStrictEqual = function deepStrictEqual(actual, expected, message) {\n  if (arguments.length < 2) {\n    throw new ERR_MISSING_ARGS('actual', 'expected');\n  }\n\n  if (isDeepEqual === undefined) lazyLoadComparison();\n\n  if (!isDeepStrictEqual(actual, expected)) {\n    innerFail({\n      actual: actual,\n      expected: expected,\n      message: message,\n      operator: 'deepStrictEqual',\n      stackStartFn: deepStrictEqual\n    });\n  }\n};\n\nassert.notDeepStrictEqual = notDeepStrictEqual;\n\nfunction notDeepStrictEqual(actual, expected, message) {\n  if (arguments.length < 2) {\n    throw new ERR_MISSING_ARGS('actual', 'expected');\n  }\n\n  if (isDeepEqual === undefined) lazyLoadComparison();\n\n  if (isDeepStrictEqual(actual, expected)) {\n    innerFail({\n      actual: actual,\n      expected: expected,\n      message: message,\n      operator: 'notDeepStrictEqual',\n      stackStartFn: notDeepStrictEqual\n    });\n  }\n}\n\nassert.strictEqual = function strictEqual(actual, expected, message) {\n  if (arguments.length < 2) {\n    throw new ERR_MISSING_ARGS('actual', 'expected');\n  }\n\n  if (!objectIs(actual, expected)) {\n    innerFail({\n      actual: actual,\n      expected: expected,\n      message: message,\n      operator: 'strictEqual',\n      stackStartFn: strictEqual\n    });\n  }\n};\n\nassert.notStrictEqual = function notStrictEqual(actual, expected, message) {\n  if (arguments.length < 2) {\n    throw new ERR_MISSING_ARGS('actual', 'expected');\n  }\n\n  if (objectIs(actual, expected)) {\n    innerFail({\n      actual: actual,\n      expected: expected,\n      message: message,\n      operator: 'notStrictEqual',\n      stackStartFn: notStrictEqual\n    });\n  }\n};\n\nvar Comparison = function Comparison(obj, keys, actual) {\n  var _this = this;\n\n  _classCallCheck(this, Comparison);\n\n  keys.forEach(function (key) {\n    if (key in obj) {\n      if (actual !== undefined && typeof actual[key] === 'string' && isRegExp(obj[key]) && obj[key].test(actual[key])) {\n        _this[key] = actual[key];\n      } else {\n        _this[key] = obj[key];\n      }\n    }\n  });\n};\n\nfunction compareExceptionKey(actual, expected, key, message, keys, fn) {\n  if (!(key in actual) || !isDeepStrictEqual(actual[key], expected[key])) {\n    if (!message) {\n      // Create placeholder objects to create a nice output.\n      var a = new Comparison(actual, keys);\n      var b = new Comparison(expected, keys, actual);\n      var err = new AssertionError({\n        actual: a,\n        expected: b,\n        operator: 'deepStrictEqual',\n        stackStartFn: fn\n      });\n      err.actual = actual;\n      err.expected = expected;\n      err.operator = fn.name;\n      throw err;\n    }\n\n    innerFail({\n      actual: actual,\n      expected: expected,\n      message: message,\n      operator: fn.name,\n      stackStartFn: fn\n    });\n  }\n}\n\nfunction expectedException(actual, expected, msg, fn) {\n  if (typeof expected !== 'function') {\n    if (isRegExp(expected)) return expected.test(actual); // assert.doesNotThrow does not accept objects.\n\n    if (arguments.length === 2) {\n      throw new ERR_INVALID_ARG_TYPE('expected', ['Function', 'RegExp'], expected);\n    } // Handle primitives properly.\n\n\n    if (_typeof(actual) !== 'object' || actual === null) {\n      var err = new AssertionError({\n        actual: actual,\n        expected: expected,\n        message: msg,\n        operator: 'deepStrictEqual',\n        stackStartFn: fn\n      });\n      err.operator = fn.name;\n      throw err;\n    }\n\n    var keys = Object.keys(expected); // Special handle errors to make sure the name and the message are compared\n    // as well.\n\n    if (expected instanceof Error) {\n      keys.push('name', 'message');\n    } else if (keys.length === 0) {\n      throw new ERR_INVALID_ARG_VALUE('error', expected, 'may not be an empty object');\n    }\n\n    if (isDeepEqual === undefined) lazyLoadComparison();\n    keys.forEach(function (key) {\n      if (typeof actual[key] === 'string' && isRegExp(expected[key]) && expected[key].test(actual[key])) {\n        return;\n      }\n\n      compareExceptionKey(actual, expected, key, msg, keys, fn);\n    });\n    return true;\n  } // Guard instanceof against arrow functions as they don't have a prototype.\n\n\n  if (expected.prototype !== undefined && actual instanceof expected) {\n    return true;\n  }\n\n  if (Error.isPrototypeOf(expected)) {\n    return false;\n  }\n\n  return expected.call({}, actual) === true;\n}\n\nfunction getActual(fn) {\n  if (typeof fn !== 'function') {\n    throw new ERR_INVALID_ARG_TYPE('fn', 'Function', fn);\n  }\n\n  try {\n    fn();\n  } catch (e) {\n    return e;\n  }\n\n  return NO_EXCEPTION_SENTINEL;\n}\n\nfunction checkIsPromise(obj) {\n  // Accept native ES6 promises and promises that are implemented in a similar\n  // way. Do not accept thenables that use a function as `obj` and that have no\n  // `catch` handler.\n  // TODO: thenables are checked up until they have the correct methods,\n  // but according to documentation, the `then` method should receive\n  // the `fulfill` and `reject` arguments as well or it may be never resolved.\n  return isPromise(obj) || obj !== null && _typeof(obj) === 'object' && typeof obj.then === 'function' && typeof obj.catch === 'function';\n}\n\nfunction waitForActual(promiseFn) {\n  return Promise.resolve().then(function () {\n    var resultPromise;\n\n    if (typeof promiseFn === 'function') {\n      // Return a rejected promise if `promiseFn` throws synchronously.\n      resultPromise = promiseFn(); // Fail in case no promise is returned.\n\n      if (!checkIsPromise(resultPromise)) {\n        throw new ERR_INVALID_RETURN_VALUE('instance of Promise', 'promiseFn', resultPromise);\n      }\n    } else if (checkIsPromise(promiseFn)) {\n      resultPromise = promiseFn;\n    } else {\n      throw new ERR_INVALID_ARG_TYPE('promiseFn', ['Function', 'Promise'], promiseFn);\n    }\n\n    return Promise.resolve().then(function () {\n      return resultPromise;\n    }).then(function () {\n      return NO_EXCEPTION_SENTINEL;\n    }).catch(function (e) {\n      return e;\n    });\n  });\n}\n\nfunction expectsError(stackStartFn, actual, error, message) {\n  if (typeof error === 'string') {\n    if (arguments.length === 4) {\n      throw new ERR_INVALID_ARG_TYPE('error', ['Object', 'Error', 'Function', 'RegExp'], error);\n    }\n\n    if (_typeof(actual) === 'object' && actual !== null) {\n      if (actual.message === error) {\n        throw new ERR_AMBIGUOUS_ARGUMENT('error/message', \"The error message \\\"\".concat(actual.message, \"\\\" is identical to the message.\"));\n      }\n    } else if (actual === error) {\n      throw new ERR_AMBIGUOUS_ARGUMENT('error/message', \"The error \\\"\".concat(actual, \"\\\" is identical to the message.\"));\n    }\n\n    message = error;\n    error = undefined;\n  } else if (error != null && _typeof(error) !== 'object' && typeof error !== 'function') {\n    throw new ERR_INVALID_ARG_TYPE('error', ['Object', 'Error', 'Function', 'RegExp'], error);\n  }\n\n  if (actual === NO_EXCEPTION_SENTINEL) {\n    var details = '';\n\n    if (error && error.name) {\n      details += \" (\".concat(error.name, \")\");\n    }\n\n    details += message ? \": \".concat(message) : '.';\n    var fnType = stackStartFn.name === 'rejects' ? 'rejection' : 'exception';\n    innerFail({\n      actual: undefined,\n      expected: error,\n      operator: stackStartFn.name,\n      message: \"Missing expected \".concat(fnType).concat(details),\n      stackStartFn: stackStartFn\n    });\n  }\n\n  if (error && !expectedException(actual, error, message, stackStartFn)) {\n    throw actual;\n  }\n}\n\nfunction expectsNoError(stackStartFn, actual, error, message) {\n  if (actual === NO_EXCEPTION_SENTINEL) return;\n\n  if (typeof error === 'string') {\n    message = error;\n    error = undefined;\n  }\n\n  if (!error || expectedException(actual, error)) {\n    var details = message ? \": \".concat(message) : '.';\n    var fnType = stackStartFn.name === 'doesNotReject' ? 'rejection' : 'exception';\n    innerFail({\n      actual: actual,\n      expected: error,\n      operator: stackStartFn.name,\n      message: \"Got unwanted \".concat(fnType).concat(details, \"\\n\") + \"Actual message: \\\"\".concat(actual && actual.message, \"\\\"\"),\n      stackStartFn: stackStartFn\n    });\n  }\n\n  throw actual;\n}\n\nassert.throws = function throws(promiseFn) {\n  for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n    args[_key2 - 1] = arguments[_key2];\n  }\n\n  expectsError.apply(void 0, [throws, getActual(promiseFn)].concat(args));\n};\n\nassert.rejects = function rejects(promiseFn) {\n  for (var _len3 = arguments.length, args = new Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {\n    args[_key3 - 1] = arguments[_key3];\n  }\n\n  return waitForActual(promiseFn).then(function (result) {\n    return expectsError.apply(void 0, [rejects, result].concat(args));\n  });\n};\n\nassert.doesNotThrow = function doesNotThrow(fn) {\n  for (var _len4 = arguments.length, args = new Array(_len4 > 1 ? _len4 - 1 : 0), _key4 = 1; _key4 < _len4; _key4++) {\n    args[_key4 - 1] = arguments[_key4];\n  }\n\n  expectsNoError.apply(void 0, [doesNotThrow, getActual(fn)].concat(args));\n};\n\nassert.doesNotReject = function doesNotReject(fn) {\n  for (var _len5 = arguments.length, args = new Array(_len5 > 1 ? _len5 - 1 : 0), _key5 = 1; _key5 < _len5; _key5++) {\n    args[_key5 - 1] = arguments[_key5];\n  }\n\n  return waitForActual(fn).then(function (result) {\n    return expectsNoError.apply(void 0, [doesNotReject, result].concat(args));\n  });\n};\n\nassert.ifError = function ifError(err) {\n  if (err !== null && err !== undefined) {\n    var message = 'ifError got unwanted exception: ';\n\n    if (_typeof(err) === 'object' && typeof err.message === 'string') {\n      if (err.message.length === 0 && err.constructor) {\n        message += err.constructor.name;\n      } else {\n        message += err.message;\n      }\n    } else {\n      message += inspect(err);\n    }\n\n    var newErr = new AssertionError({\n      actual: err,\n      expected: null,\n      operator: 'ifError',\n      message: message,\n      stackStartFn: ifError\n    }); // Make sure we actually have a stack trace!\n\n    var origStack = err.stack;\n\n    if (typeof origStack === 'string') {\n      // This will remove any duplicated frames from the error frames taken\n      // from within `ifError` and add the original error frames to the newly\n      // created ones.\n      var tmp2 = origStack.split('\\n');\n      tmp2.shift(); // Filter all frames existing in err.stack.\n\n      var tmp1 = newErr.stack.split('\\n');\n\n      for (var i = 0; i < tmp2.length; i++) {\n        // Find the first occurrence of the frame.\n        var pos = tmp1.indexOf(tmp2[i]);\n\n        if (pos !== -1) {\n          // Only keep new frames.\n          tmp1 = tmp1.slice(0, pos);\n          break;\n        }\n      }\n\n      newErr.stack = \"\".concat(tmp1.join('\\n'), \"\\n\").concat(tmp2.join('\\n'));\n    }\n\n    throw newErr;\n  }\n}; // Expose a strict only variant of assert\n\n\nfunction strict() {\n  for (var _len6 = arguments.length, args = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {\n    args[_key6] = arguments[_key6];\n  }\n\n  innerOk.apply(void 0, [strict, args.length].concat(args));\n}\n\nassert.strict = objectAssign(strict, assert, {\n  equal: assert.strictEqual,\n  deepEqual: assert.deepStrictEqual,\n  notEqual: assert.notStrictEqual,\n  notDeepEqual: assert.notDeepStrictEqual\n});\nassert.strict.strict = assert.strict;","// Currently in sync with Node.js lib/internal/assert/assertion_error.js\n// https://github.com/nodejs/node/commit/0817840f775032169ddd70c85ac059f18ffcc81c\n'use strict';\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _wrapNativeSuper(Class) { var _cache = typeof Map === \"function\" ? new Map() : undefined; _wrapNativeSuper = function _wrapNativeSuper(Class) { if (Class === null || !_isNativeFunction(Class)) return Class; if (typeof Class !== \"function\") { throw new TypeError(\"Super expression must either be null or a function\"); } if (typeof _cache !== \"undefined\") { if (_cache.has(Class)) return _cache.get(Class); _cache.set(Class, Wrapper); } function Wrapper() { return _construct(Class, arguments, _getPrototypeOf(this).constructor); } Wrapper.prototype = Object.create(Class.prototype, { constructor: { value: Wrapper, enumerable: false, writable: true, configurable: true } }); return _setPrototypeOf(Wrapper, Class); }; return _wrapNativeSuper(Class); }\n\nfunction isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _construct(Parent, args, Class) { if (isNativeReflectConstruct()) { _construct = Reflect.construct; } else { _construct = function _construct(Parent, args, Class) { var a = [null]; a.push.apply(a, args); var Constructor = Function.bind.apply(Parent, a); var instance = new Constructor(); if (Class) _setPrototypeOf(instance, Class.prototype); return instance; }; } return _construct.apply(null, arguments); }\n\nfunction _isNativeFunction(fn) { return Function.toString.call(fn).indexOf(\"[native code]\") !== -1; }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nvar _require = require('util/'),\n    inspect = _require.inspect;\n\nvar _require2 = require('../errors'),\n    ERR_INVALID_ARG_TYPE = _require2.codes.ERR_INVALID_ARG_TYPE; // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/endsWith\n\n\nfunction endsWith(str, search, this_len) {\n  if (this_len === undefined || this_len > str.length) {\n    this_len = str.length;\n  }\n\n  return str.substring(this_len - search.length, this_len) === search;\n} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/repeat\n\n\nfunction repeat(str, count) {\n  count = Math.floor(count);\n  if (str.length == 0 || count == 0) return '';\n  var maxCount = str.length * count;\n  count = Math.floor(Math.log(count) / Math.log(2));\n\n  while (count) {\n    str += str;\n    count--;\n  }\n\n  str += str.substring(0, maxCount - str.length);\n  return str;\n}\n\nvar blue = '';\nvar green = '';\nvar red = '';\nvar white = '';\nvar kReadableOperator = {\n  deepStrictEqual: 'Expected values to be strictly deep-equal:',\n  strictEqual: 'Expected values to be strictly equal:',\n  strictEqualObject: 'Expected \"actual\" to be reference-equal to \"expected\":',\n  deepEqual: 'Expected values to be loosely deep-equal:',\n  equal: 'Expected values to be loosely equal:',\n  notDeepStrictEqual: 'Expected \"actual\" not to be strictly deep-equal to:',\n  notStrictEqual: 'Expected \"actual\" to be strictly unequal to:',\n  notStrictEqualObject: 'Expected \"actual\" not to be reference-equal to \"expected\":',\n  notDeepEqual: 'Expected \"actual\" not to be loosely deep-equal to:',\n  notEqual: 'Expected \"actual\" to be loosely unequal to:',\n  notIdentical: 'Values identical but not reference-equal:'\n}; // Comparing short primitives should just show === / !== instead of using the\n// diff.\n\nvar kMaxShortLength = 10;\n\nfunction copyError(source) {\n  var keys = Object.keys(source);\n  var target = Object.create(Object.getPrototypeOf(source));\n  keys.forEach(function (key) {\n    target[key] = source[key];\n  });\n  Object.defineProperty(target, 'message', {\n    value: source.message\n  });\n  return target;\n}\n\nfunction inspectValue(val) {\n  // The util.inspect default values could be changed. This makes sure the\n  // error messages contain the necessary information nevertheless.\n  return inspect(val, {\n    compact: false,\n    customInspect: false,\n    depth: 1000,\n    maxArrayLength: Infinity,\n    // Assert compares only enumerable properties (with a few exceptions).\n    showHidden: false,\n    // Having a long line as error is better than wrapping the line for\n    // comparison for now.\n    // TODO(BridgeAR): `breakLength` should be limited as soon as soon as we\n    // have meta information about the inspected properties (i.e., know where\n    // in what line the property starts and ends).\n    breakLength: Infinity,\n    // Assert does not detect proxies currently.\n    showProxy: false,\n    sorted: true,\n    // Inspect getters as we also check them when comparing entries.\n    getters: true\n  });\n}\n\nfunction createErrDiff(actual, expected, operator) {\n  var other = '';\n  var res = '';\n  var lastPos = 0;\n  var end = '';\n  var skipped = false;\n  var actualInspected = inspectValue(actual);\n  var actualLines = actualInspected.split('\\n');\n  var expectedLines = inspectValue(expected).split('\\n');\n  var i = 0;\n  var indicator = ''; // In case both values are objects explicitly mark them as not reference equal\n  // for the `strictEqual` operator.\n\n  if (operator === 'strictEqual' && _typeof(actual) === 'object' && _typeof(expected) === 'object' && actual !== null && expected !== null) {\n    operator = 'strictEqualObject';\n  } // If \"actual\" and \"expected\" fit on a single line and they are not strictly\n  // equal, check further special handling.\n\n\n  if (actualLines.length === 1 && expectedLines.length === 1 && actualLines[0] !== expectedLines[0]) {\n    var inputLength = actualLines[0].length + expectedLines[0].length; // If the character length of \"actual\" and \"expected\" together is less than\n    // kMaxShortLength and if neither is an object and at least one of them is\n    // not `zero`, use the strict equal comparison to visualize the output.\n\n    if (inputLength <= kMaxShortLength) {\n      if ((_typeof(actual) !== 'object' || actual === null) && (_typeof(expected) !== 'object' || expected === null) && (actual !== 0 || expected !== 0)) {\n        // -0 === +0\n        return \"\".concat(kReadableOperator[operator], \"\\n\\n\") + \"\".concat(actualLines[0], \" !== \").concat(expectedLines[0], \"\\n\");\n      }\n    } else if (operator !== 'strictEqualObject') {\n      // If the stderr is a tty and the input length is lower than the current\n      // columns per line, add a mismatch indicator below the output. If it is\n      // not a tty, use a default value of 80 characters.\n      var maxLength = process.stderr && process.stderr.isTTY ? process.stderr.columns : 80;\n\n      if (inputLength < maxLength) {\n        while (actualLines[0][i] === expectedLines[0][i]) {\n          i++;\n        } // Ignore the first characters.\n\n\n        if (i > 2) {\n          // Add position indicator for the first mismatch in case it is a\n          // single line and the input length is less than the column length.\n          indicator = \"\\n  \".concat(repeat(' ', i), \"^\");\n          i = 0;\n        }\n      }\n    }\n  } // Remove all ending lines that match (this optimizes the output for\n  // readability by reducing the number of total changed lines).\n\n\n  var a = actualLines[actualLines.length - 1];\n  var b = expectedLines[expectedLines.length - 1];\n\n  while (a === b) {\n    if (i++ < 2) {\n      end = \"\\n  \".concat(a).concat(end);\n    } else {\n      other = a;\n    }\n\n    actualLines.pop();\n    expectedLines.pop();\n    if (actualLines.length === 0 || expectedLines.length === 0) break;\n    a = actualLines[actualLines.length - 1];\n    b = expectedLines[expectedLines.length - 1];\n  }\n\n  var maxLines = Math.max(actualLines.length, expectedLines.length); // Strict equal with identical objects that are not identical by reference.\n  // E.g., assert.deepStrictEqual({ a: Symbol() }, { a: Symbol() })\n\n  if (maxLines === 0) {\n    // We have to get the result again. The lines were all removed before.\n    var _actualLines = actualInspected.split('\\n'); // Only remove lines in case it makes sense to collapse those.\n    // TODO: Accept env to always show the full error.\n\n\n    if (_actualLines.length > 30) {\n      _actualLines[26] = \"\".concat(blue, \"...\").concat(white);\n\n      while (_actualLines.length > 27) {\n        _actualLines.pop();\n      }\n    }\n\n    return \"\".concat(kReadableOperator.notIdentical, \"\\n\\n\").concat(_actualLines.join('\\n'), \"\\n\");\n  }\n\n  if (i > 3) {\n    end = \"\\n\".concat(blue, \"...\").concat(white).concat(end);\n    skipped = true;\n  }\n\n  if (other !== '') {\n    end = \"\\n  \".concat(other).concat(end);\n    other = '';\n  }\n\n  var printedLines = 0;\n  var msg = kReadableOperator[operator] + \"\\n\".concat(green, \"+ actual\").concat(white, \" \").concat(red, \"- expected\").concat(white);\n  var skippedMsg = \" \".concat(blue, \"...\").concat(white, \" Lines skipped\");\n\n  for (i = 0; i < maxLines; i++) {\n    // Only extra expected lines exist\n    var cur = i - lastPos;\n\n    if (actualLines.length < i + 1) {\n      // If the last diverging line is more than one line above and the\n      // current line is at least line three, add some of the former lines and\n      // also add dots to indicate skipped entries.\n      if (cur > 1 && i > 2) {\n        if (cur > 4) {\n          res += \"\\n\".concat(blue, \"...\").concat(white);\n          skipped = true;\n        } else if (cur > 3) {\n          res += \"\\n  \".concat(expectedLines[i - 2]);\n          printedLines++;\n        }\n\n        res += \"\\n  \".concat(expectedLines[i - 1]);\n        printedLines++;\n      } // Mark the current line as the last diverging one.\n\n\n      lastPos = i; // Add the expected line to the cache.\n\n      other += \"\\n\".concat(red, \"-\").concat(white, \" \").concat(expectedLines[i]);\n      printedLines++; // Only extra actual lines exist\n    } else if (expectedLines.length < i + 1) {\n      // If the last diverging line is more than one line above and the\n      // current line is at least line three, add some of the former lines and\n      // also add dots to indicate skipped entries.\n      if (cur > 1 && i > 2) {\n        if (cur > 4) {\n          res += \"\\n\".concat(blue, \"...\").concat(white);\n          skipped = true;\n        } else if (cur > 3) {\n          res += \"\\n  \".concat(actualLines[i - 2]);\n          printedLines++;\n        }\n\n        res += \"\\n  \".concat(actualLines[i - 1]);\n        printedLines++;\n      } // Mark the current line as the last diverging one.\n\n\n      lastPos = i; // Add the actual line to the result.\n\n      res += \"\\n\".concat(green, \"+\").concat(white, \" \").concat(actualLines[i]);\n      printedLines++; // Lines diverge\n    } else {\n      var expectedLine = expectedLines[i];\n      var actualLine = actualLines[i]; // If the lines diverge, specifically check for lines that only diverge by\n      // a trailing comma. In that case it is actually identical and we should\n      // mark it as such.\n\n      var divergingLines = actualLine !== expectedLine && (!endsWith(actualLine, ',') || actualLine.slice(0, -1) !== expectedLine); // If the expected line has a trailing comma but is otherwise identical,\n      // add a comma at the end of the actual line. Otherwise the output could\n      // look weird as in:\n      //\n      //   [\n      //     1         // No comma at the end!\n      // +   2\n      //   ]\n      //\n\n      if (divergingLines && endsWith(expectedLine, ',') && expectedLine.slice(0, -1) === actualLine) {\n        divergingLines = false;\n        actualLine += ',';\n      }\n\n      if (divergingLines) {\n        // If the last diverging line is more than one line above and the\n        // current line is at least line three, add some of the former lines and\n        // also add dots to indicate skipped entries.\n        if (cur > 1 && i > 2) {\n          if (cur > 4) {\n            res += \"\\n\".concat(blue, \"...\").concat(white);\n            skipped = true;\n          } else if (cur > 3) {\n            res += \"\\n  \".concat(actualLines[i - 2]);\n            printedLines++;\n          }\n\n          res += \"\\n  \".concat(actualLines[i - 1]);\n          printedLines++;\n        } // Mark the current line as the last diverging one.\n\n\n        lastPos = i; // Add the actual line to the result and cache the expected diverging\n        // line so consecutive diverging lines show up as +++--- and not +-+-+-.\n\n        res += \"\\n\".concat(green, \"+\").concat(white, \" \").concat(actualLine);\n        other += \"\\n\".concat(red, \"-\").concat(white, \" \").concat(expectedLine);\n        printedLines += 2; // Lines are identical\n      } else {\n        // Add all cached information to the result before adding other things\n        // and reset the cache.\n        res += other;\n        other = ''; // If the last diverging line is exactly one line above or if it is the\n        // very first line, add the line to the result.\n\n        if (cur === 1 || i === 0) {\n          res += \"\\n  \".concat(actualLine);\n          printedLines++;\n        }\n      }\n    } // Inspected object to big (Show ~20 rows max)\n\n\n    if (printedLines > 20 && i < maxLines - 2) {\n      return \"\".concat(msg).concat(skippedMsg, \"\\n\").concat(res, \"\\n\").concat(blue, \"...\").concat(white).concat(other, \"\\n\") + \"\".concat(blue, \"...\").concat(white);\n    }\n  }\n\n  return \"\".concat(msg).concat(skipped ? skippedMsg : '', \"\\n\").concat(res).concat(other).concat(end).concat(indicator);\n}\n\nvar AssertionError =\n/*#__PURE__*/\nfunction (_Error) {\n  _inherits(AssertionError, _Error);\n\n  function AssertionError(options) {\n    var _this;\n\n    _classCallCheck(this, AssertionError);\n\n    if (_typeof(options) !== 'object' || options === null) {\n      throw new ERR_INVALID_ARG_TYPE('options', 'Object', options);\n    }\n\n    var message = options.message,\n        operator = options.operator,\n        stackStartFn = options.stackStartFn;\n    var actual = options.actual,\n        expected = options.expected;\n    var limit = Error.stackTraceLimit;\n    Error.stackTraceLimit = 0;\n\n    if (message != null) {\n      _this = _possibleConstructorReturn(this, _getPrototypeOf(AssertionError).call(this, String(message)));\n    } else {\n      if (process.stderr && process.stderr.isTTY) {\n        // Reset on each call to make sure we handle dynamically set environment\n        // variables correct.\n        if (process.stderr && process.stderr.getColorDepth && process.stderr.getColorDepth() !== 1) {\n          blue = \"\\x1B[34m\";\n          green = \"\\x1B[32m\";\n          white = \"\\x1B[39m\";\n          red = \"\\x1B[31m\";\n        } else {\n          blue = '';\n          green = '';\n          white = '';\n          red = '';\n        }\n      } // Prevent the error stack from being visible by duplicating the error\n      // in a very close way to the original in case both sides are actually\n      // instances of Error.\n\n\n      if (_typeof(actual) === 'object' && actual !== null && _typeof(expected) === 'object' && expected !== null && 'stack' in actual && actual instanceof Error && 'stack' in expected && expected instanceof Error) {\n        actual = copyError(actual);\n        expected = copyError(expected);\n      }\n\n      if (operator === 'deepStrictEqual' || operator === 'strictEqual') {\n        _this = _possibleConstructorReturn(this, _getPrototypeOf(AssertionError).call(this, createErrDiff(actual, expected, operator)));\n      } else if (operator === 'notDeepStrictEqual' || operator === 'notStrictEqual') {\n        // In case the objects are equal but the operator requires unequal, show\n        // the first object and say A equals B\n        var base = kReadableOperator[operator];\n        var res = inspectValue(actual).split('\\n'); // In case \"actual\" is an object, it should not be reference equal.\n\n        if (operator === 'notStrictEqual' && _typeof(actual) === 'object' && actual !== null) {\n          base = kReadableOperator.notStrictEqualObject;\n        } // Only remove lines in case it makes sense to collapse those.\n        // TODO: Accept env to always show the full error.\n\n\n        if (res.length > 30) {\n          res[26] = \"\".concat(blue, \"...\").concat(white);\n\n          while (res.length > 27) {\n            res.pop();\n          }\n        } // Only print a single input.\n\n\n        if (res.length === 1) {\n          _this = _possibleConstructorReturn(this, _getPrototypeOf(AssertionError).call(this, \"\".concat(base, \" \").concat(res[0])));\n        } else {\n          _this = _possibleConstructorReturn(this, _getPrototypeOf(AssertionError).call(this, \"\".concat(base, \"\\n\\n\").concat(res.join('\\n'), \"\\n\")));\n        }\n      } else {\n        var _res = inspectValue(actual);\n\n        var other = '';\n        var knownOperators = kReadableOperator[operator];\n\n        if (operator === 'notDeepEqual' || operator === 'notEqual') {\n          _res = \"\".concat(kReadableOperator[operator], \"\\n\\n\").concat(_res);\n\n          if (_res.length > 1024) {\n            _res = \"\".concat(_res.slice(0, 1021), \"...\");\n          }\n        } else {\n          other = \"\".concat(inspectValue(expected));\n\n          if (_res.length > 512) {\n            _res = \"\".concat(_res.slice(0, 509), \"...\");\n          }\n\n          if (other.length > 512) {\n            other = \"\".concat(other.slice(0, 509), \"...\");\n          }\n\n          if (operator === 'deepEqual' || operator === 'equal') {\n            _res = \"\".concat(knownOperators, \"\\n\\n\").concat(_res, \"\\n\\nshould equal\\n\\n\");\n          } else {\n            other = \" \".concat(operator, \" \").concat(other);\n          }\n        }\n\n        _this = _possibleConstructorReturn(this, _getPrototypeOf(AssertionError).call(this, \"\".concat(_res).concat(other)));\n      }\n    }\n\n    Error.stackTraceLimit = limit;\n    _this.generatedMessage = !message;\n    Object.defineProperty(_assertThisInitialized(_this), 'name', {\n      value: 'AssertionError [ERR_ASSERTION]',\n      enumerable: false,\n      writable: true,\n      configurable: true\n    });\n    _this.code = 'ERR_ASSERTION';\n    _this.actual = actual;\n    _this.expected = expected;\n    _this.operator = operator;\n\n    if (Error.captureStackTrace) {\n      // eslint-disable-next-line no-restricted-syntax\n      Error.captureStackTrace(_assertThisInitialized(_this), stackStartFn);\n    } // Create error message including the error code in the name.\n\n\n    _this.stack; // Reset the name.\n\n    _this.name = 'AssertionError';\n    return _possibleConstructorReturn(_this);\n  }\n\n  _createClass(AssertionError, [{\n    key: \"toString\",\n    value: function toString() {\n      return \"\".concat(this.name, \" [\").concat(this.code, \"]: \").concat(this.message);\n    }\n  }, {\n    key: inspect.custom,\n    value: function value(recurseTimes, ctx) {\n      // This limits the `actual` and `expected` property default inspection to\n      // the minimum depth. Otherwise those values would be too verbose compared\n      // to the actual error message which contains a combined view of these two\n      // input values.\n      return inspect(this, _objectSpread({}, ctx, {\n        customInspect: false,\n        depth: 0\n      }));\n    }\n  }]);\n\n  return AssertionError;\n}(_wrapNativeSuper(Error));\n\nmodule.exports = AssertionError;","// Currently in sync with Node.js lib/internal/errors.js\n// https://github.com/nodejs/node/commit/3b044962c48fe313905877a96b5d0894a5404f6f\n\n/* eslint node-core/documented-errors: \"error\" */\n\n/* eslint node-core/alphabetize-errors: \"error\" */\n\n/* eslint node-core/prefer-util-format-errors: \"error\" */\n'use strict'; // The whole point behind this internal module is to allow Node.js to no\n// longer be forced to treat every error message change as a semver-major\n// change. The NodeError classes here all expose a `code` property whose\n// value statically and permanently identifies the error. While the error\n// message may change, the code should not.\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nvar codes = {}; // Lazy loaded\n\nvar assert;\nvar util;\n\nfunction createErrorType(code, message, Base) {\n  if (!Base) {\n    Base = Error;\n  }\n\n  function getMessage(arg1, arg2, arg3) {\n    if (typeof message === 'string') {\n      return message;\n    } else {\n      return message(arg1, arg2, arg3);\n    }\n  }\n\n  var NodeError =\n  /*#__PURE__*/\n  function (_Base) {\n    _inherits(NodeError, _Base);\n\n    function NodeError(arg1, arg2, arg3) {\n      var _this;\n\n      _classCallCheck(this, NodeError);\n\n      _this = _possibleConstructorReturn(this, _getPrototypeOf(NodeError).call(this, getMessage(arg1, arg2, arg3)));\n      _this.code = code;\n      return _this;\n    }\n\n    return NodeError;\n  }(Base);\n\n  codes[code] = NodeError;\n} // https://github.com/nodejs/node/blob/v10.8.0/lib/internal/errors.js\n\n\nfunction oneOf(expected, thing) {\n  if (Array.isArray(expected)) {\n    var len = expected.length;\n    expected = expected.map(function (i) {\n      return String(i);\n    });\n\n    if (len > 2) {\n      return \"one of \".concat(thing, \" \").concat(expected.slice(0, len - 1).join(', '), \", or \") + expected[len - 1];\n    } else if (len === 2) {\n      return \"one of \".concat(thing, \" \").concat(expected[0], \" or \").concat(expected[1]);\n    } else {\n      return \"of \".concat(thing, \" \").concat(expected[0]);\n    }\n  } else {\n    return \"of \".concat(thing, \" \").concat(String(expected));\n  }\n} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/startsWith\n\n\nfunction startsWith(str, search, pos) {\n  return str.substr(!pos || pos < 0 ? 0 : +pos, search.length) === search;\n} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/endsWith\n\n\nfunction endsWith(str, search, this_len) {\n  if (this_len === undefined || this_len > str.length) {\n    this_len = str.length;\n  }\n\n  return str.substring(this_len - search.length, this_len) === search;\n} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/includes\n\n\nfunction includes(str, search, start) {\n  if (typeof start !== 'number') {\n    start = 0;\n  }\n\n  if (start + search.length > str.length) {\n    return false;\n  } else {\n    return str.indexOf(search, start) !== -1;\n  }\n}\n\ncreateErrorType('ERR_AMBIGUOUS_ARGUMENT', 'The \"%s\" argument is ambiguous. %s', TypeError);\ncreateErrorType('ERR_INVALID_ARG_TYPE', function (name, expected, actual) {\n  if (assert === undefined) assert = require('../assert');\n  assert(typeof name === 'string', \"'name' must be a string\"); // determiner: 'must be' or 'must not be'\n\n  var determiner;\n\n  if (typeof expected === 'string' && startsWith(expected, 'not ')) {\n    determiner = 'must not be';\n    expected = expected.replace(/^not /, '');\n  } else {\n    determiner = 'must be';\n  }\n\n  var msg;\n\n  if (endsWith(name, ' argument')) {\n    // For cases like 'first argument'\n    msg = \"The \".concat(name, \" \").concat(determiner, \" \").concat(oneOf(expected, 'type'));\n  } else {\n    var type = includes(name, '.') ? 'property' : 'argument';\n    msg = \"The \\\"\".concat(name, \"\\\" \").concat(type, \" \").concat(determiner, \" \").concat(oneOf(expected, 'type'));\n  } // TODO(BridgeAR): Improve the output by showing `null` and similar.\n\n\n  msg += \". Received type \".concat(_typeof(actual));\n  return msg;\n}, TypeError);\ncreateErrorType('ERR_INVALID_ARG_VALUE', function (name, value) {\n  var reason = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'is invalid';\n  if (util === undefined) util = require('util/');\n  var inspected = util.inspect(value);\n\n  if (inspected.length > 128) {\n    inspected = \"\".concat(inspected.slice(0, 128), \"...\");\n  }\n\n  return \"The argument '\".concat(name, \"' \").concat(reason, \". Received \").concat(inspected);\n}, TypeError, RangeError);\ncreateErrorType('ERR_INVALID_RETURN_VALUE', function (input, name, value) {\n  var type;\n\n  if (value && value.constructor && value.constructor.name) {\n    type = \"instance of \".concat(value.constructor.name);\n  } else {\n    type = \"type \".concat(_typeof(value));\n  }\n\n  return \"Expected \".concat(input, \" to be returned from the \\\"\").concat(name, \"\\\"\") + \" function but got \".concat(type, \".\");\n}, TypeError);\ncreateErrorType('ERR_MISSING_ARGS', function () {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  if (assert === undefined) assert = require('../assert');\n  assert(args.length > 0, 'At least one arg needs to be specified');\n  var msg = 'The ';\n  var len = args.length;\n  args = args.map(function (a) {\n    return \"\\\"\".concat(a, \"\\\"\");\n  });\n\n  switch (len) {\n    case 1:\n      msg += \"\".concat(args[0], \" argument\");\n      break;\n\n    case 2:\n      msg += \"\".concat(args[0], \" and \").concat(args[1], \" arguments\");\n      break;\n\n    default:\n      msg += args.slice(0, len - 1).join(', ');\n      msg += \", and \".concat(args[len - 1], \" arguments\");\n      break;\n  }\n\n  return \"\".concat(msg, \" must be specified\");\n}, TypeError);\nmodule.exports.codes = codes;","// Currently in sync with Node.js lib/internal/util/comparisons.js\n// https://github.com/nodejs/node/commit/112cc7c27551254aa2b17098fb774867f05ed0d9\n'use strict';\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); }\n\nfunction _iterableToArrayLimit(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nvar regexFlagsSupported = /a/g.flags !== undefined;\n\nvar arrayFromSet = function arrayFromSet(set) {\n  var array = [];\n  set.forEach(function (value) {\n    return array.push(value);\n  });\n  return array;\n};\n\nvar arrayFromMap = function arrayFromMap(map) {\n  var array = [];\n  map.forEach(function (value, key) {\n    return array.push([key, value]);\n  });\n  return array;\n};\n\nvar objectIs = Object.is ? Object.is : require('object-is');\nvar objectGetOwnPropertySymbols = Object.getOwnPropertySymbols ? Object.getOwnPropertySymbols : function () {\n  return [];\n};\nvar numberIsNaN = Number.isNaN ? Number.isNaN : require('is-nan');\n\nfunction uncurryThis(f) {\n  return f.call.bind(f);\n}\n\nvar hasOwnProperty = uncurryThis(Object.prototype.hasOwnProperty);\nvar propertyIsEnumerable = uncurryThis(Object.prototype.propertyIsEnumerable);\nvar objectToString = uncurryThis(Object.prototype.toString);\n\nvar _require$types = require('util/').types,\n    isAnyArrayBuffer = _require$types.isAnyArrayBuffer,\n    isArrayBufferView = _require$types.isArrayBufferView,\n    isDate = _require$types.isDate,\n    isMap = _require$types.isMap,\n    isRegExp = _require$types.isRegExp,\n    isSet = _require$types.isSet,\n    isNativeError = _require$types.isNativeError,\n    isBoxedPrimitive = _require$types.isBoxedPrimitive,\n    isNumberObject = _require$types.isNumberObject,\n    isStringObject = _require$types.isStringObject,\n    isBooleanObject = _require$types.isBooleanObject,\n    isBigIntObject = _require$types.isBigIntObject,\n    isSymbolObject = _require$types.isSymbolObject,\n    isFloat32Array = _require$types.isFloat32Array,\n    isFloat64Array = _require$types.isFloat64Array;\n\nfunction isNonIndex(key) {\n  if (key.length === 0 || key.length > 10) return true;\n\n  for (var i = 0; i < key.length; i++) {\n    var code = key.charCodeAt(i);\n    if (code < 48 || code > 57) return true;\n  } // The maximum size for an array is 2 ** 32 -1.\n\n\n  return key.length === 10 && key >= Math.pow(2, 32);\n}\n\nfunction getOwnNonIndexProperties(value) {\n  return Object.keys(value).filter(isNonIndex).concat(objectGetOwnPropertySymbols(value).filter(Object.prototype.propertyIsEnumerable.bind(value)));\n} // Taken from https://github.com/feross/buffer/blob/680e9e5e488f22aac27599a57dc844a6315928dd/index.js\n// original notice:\n\n/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n\n\nfunction compare(a, b) {\n  if (a === b) {\n    return 0;\n  }\n\n  var x = a.length;\n  var y = b.length;\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i];\n      y = b[i];\n      break;\n    }\n  }\n\n  if (x < y) {\n    return -1;\n  }\n\n  if (y < x) {\n    return 1;\n  }\n\n  return 0;\n}\n\nvar ONLY_ENUMERABLE = undefined;\nvar kStrict = true;\nvar kLoose = false;\nvar kNoIterator = 0;\nvar kIsArray = 1;\nvar kIsSet = 2;\nvar kIsMap = 3; // Check if they have the same source and flags\n\nfunction areSimilarRegExps(a, b) {\n  return regexFlagsSupported ? a.source === b.source && a.flags === b.flags : RegExp.prototype.toString.call(a) === RegExp.prototype.toString.call(b);\n}\n\nfunction areSimilarFloatArrays(a, b) {\n  if (a.byteLength !== b.byteLength) {\n    return false;\n  }\n\n  for (var offset = 0; offset < a.byteLength; offset++) {\n    if (a[offset] !== b[offset]) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction areSimilarTypedArrays(a, b) {\n  if (a.byteLength !== b.byteLength) {\n    return false;\n  }\n\n  return compare(new Uint8Array(a.buffer, a.byteOffset, a.byteLength), new Uint8Array(b.buffer, b.byteOffset, b.byteLength)) === 0;\n}\n\nfunction areEqualArrayBuffers(buf1, buf2) {\n  return buf1.byteLength === buf2.byteLength && compare(new Uint8Array(buf1), new Uint8Array(buf2)) === 0;\n}\n\nfunction isEqualBoxedPrimitive(val1, val2) {\n  if (isNumberObject(val1)) {\n    return isNumberObject(val2) && objectIs(Number.prototype.valueOf.call(val1), Number.prototype.valueOf.call(val2));\n  }\n\n  if (isStringObject(val1)) {\n    return isStringObject(val2) && String.prototype.valueOf.call(val1) === String.prototype.valueOf.call(val2);\n  }\n\n  if (isBooleanObject(val1)) {\n    return isBooleanObject(val2) && Boolean.prototype.valueOf.call(val1) === Boolean.prototype.valueOf.call(val2);\n  }\n\n  if (isBigIntObject(val1)) {\n    return isBigIntObject(val2) && BigInt.prototype.valueOf.call(val1) === BigInt.prototype.valueOf.call(val2);\n  }\n\n  return isSymbolObject(val2) && Symbol.prototype.valueOf.call(val1) === Symbol.prototype.valueOf.call(val2);\n} // Notes: Type tags are historical [[Class]] properties that can be set by\n// FunctionTemplate::SetClassName() in C++ or Symbol.toStringTag in JS\n// and retrieved using Object.prototype.toString.call(obj) in JS\n// See https://tc39.github.io/ecma262/#sec-object.prototype.tostring\n// for a list of tags pre-defined in the spec.\n// There are some unspecified tags in the wild too (e.g. typed array tags).\n// Since tags can be altered, they only serve fast failures\n//\n// Typed arrays and buffers are checked by comparing the content in their\n// underlying ArrayBuffer. This optimization requires that it's\n// reasonable to interpret their underlying memory in the same way,\n// which is checked by comparing their type tags.\n// (e.g. a Uint8Array and a Uint16Array with the same memory content\n// could still be different because they will be interpreted differently).\n//\n// For strict comparison, objects should have\n// a) The same built-in type tags\n// b) The same prototypes.\n\n\nfunction innerDeepEqual(val1, val2, strict, memos) {\n  // All identical values are equivalent, as determined by ===.\n  if (val1 === val2) {\n    if (val1 !== 0) return true;\n    return strict ? objectIs(val1, val2) : true;\n  } // Check more closely if val1 and val2 are equal.\n\n\n  if (strict) {\n    if (_typeof(val1) !== 'object') {\n      return typeof val1 === 'number' && numberIsNaN(val1) && numberIsNaN(val2);\n    }\n\n    if (_typeof(val2) !== 'object' || val1 === null || val2 === null) {\n      return false;\n    }\n\n    if (Object.getPrototypeOf(val1) !== Object.getPrototypeOf(val2)) {\n      return false;\n    }\n  } else {\n    if (val1 === null || _typeof(val1) !== 'object') {\n      if (val2 === null || _typeof(val2) !== 'object') {\n        // eslint-disable-next-line eqeqeq\n        return val1 == val2;\n      }\n\n      return false;\n    }\n\n    if (val2 === null || _typeof(val2) !== 'object') {\n      return false;\n    }\n  }\n\n  var val1Tag = objectToString(val1);\n  var val2Tag = objectToString(val2);\n\n  if (val1Tag !== val2Tag) {\n    return false;\n  }\n\n  if (Array.isArray(val1)) {\n    // Check for sparse arrays and general fast path\n    if (val1.length !== val2.length) {\n      return false;\n    }\n\n    var keys1 = getOwnNonIndexProperties(val1, ONLY_ENUMERABLE);\n    var keys2 = getOwnNonIndexProperties(val2, ONLY_ENUMERABLE);\n\n    if (keys1.length !== keys2.length) {\n      return false;\n    }\n\n    return keyCheck(val1, val2, strict, memos, kIsArray, keys1);\n  } // [browserify] This triggers on certain types in IE (Map/Set) so we don't\n  // wan't to early return out of the rest of the checks. However we can check\n  // if the second value is one of these values and the first isn't.\n\n\n  if (val1Tag === '[object Object]') {\n    // return keyCheck(val1, val2, strict, memos, kNoIterator);\n    if (!isMap(val1) && isMap(val2) || !isSet(val1) && isSet(val2)) {\n      return false;\n    }\n  }\n\n  if (isDate(val1)) {\n    if (!isDate(val2) || Date.prototype.getTime.call(val1) !== Date.prototype.getTime.call(val2)) {\n      return false;\n    }\n  } else if (isRegExp(val1)) {\n    if (!isRegExp(val2) || !areSimilarRegExps(val1, val2)) {\n      return false;\n    }\n  } else if (isNativeError(val1) || val1 instanceof Error) {\n    // Do not compare the stack as it might differ even though the error itself\n    // is otherwise identical.\n    if (val1.message !== val2.message || val1.name !== val2.name) {\n      return false;\n    }\n  } else if (isArrayBufferView(val1)) {\n    if (!strict && (isFloat32Array(val1) || isFloat64Array(val1))) {\n      if (!areSimilarFloatArrays(val1, val2)) {\n        return false;\n      }\n    } else if (!areSimilarTypedArrays(val1, val2)) {\n      return false;\n    } // Buffer.compare returns true, so val1.length === val2.length. If they both\n    // only contain numeric keys, we don't need to exam further than checking\n    // the symbols.\n\n\n    var _keys = getOwnNonIndexProperties(val1, ONLY_ENUMERABLE);\n\n    var _keys2 = getOwnNonIndexProperties(val2, ONLY_ENUMERABLE);\n\n    if (_keys.length !== _keys2.length) {\n      return false;\n    }\n\n    return keyCheck(val1, val2, strict, memos, kNoIterator, _keys);\n  } else if (isSet(val1)) {\n    if (!isSet(val2) || val1.size !== val2.size) {\n      return false;\n    }\n\n    return keyCheck(val1, val2, strict, memos, kIsSet);\n  } else if (isMap(val1)) {\n    if (!isMap(val2) || val1.size !== val2.size) {\n      return false;\n    }\n\n    return keyCheck(val1, val2, strict, memos, kIsMap);\n  } else if (isAnyArrayBuffer(val1)) {\n    if (!areEqualArrayBuffers(val1, val2)) {\n      return false;\n    }\n  } else if (isBoxedPrimitive(val1) && !isEqualBoxedPrimitive(val1, val2)) {\n    return false;\n  }\n\n  return keyCheck(val1, val2, strict, memos, kNoIterator);\n}\n\nfunction getEnumerables(val, keys) {\n  return keys.filter(function (k) {\n    return propertyIsEnumerable(val, k);\n  });\n}\n\nfunction keyCheck(val1, val2, strict, memos, iterationType, aKeys) {\n  // For all remaining Object pairs, including Array, objects and Maps,\n  // equivalence is determined by having:\n  // a) The same number of owned enumerable properties\n  // b) The same set of keys/indexes (although not necessarily the same order)\n  // c) Equivalent values for every corresponding key/index\n  // d) For Sets and Maps, equal contents\n  // Note: this accounts for both named and indexed properties on Arrays.\n  if (arguments.length === 5) {\n    aKeys = Object.keys(val1);\n    var bKeys = Object.keys(val2); // The pair must have the same number of owned properties.\n\n    if (aKeys.length !== bKeys.length) {\n      return false;\n    }\n  } // Cheap key test\n\n\n  var i = 0;\n\n  for (; i < aKeys.length; i++) {\n    if (!hasOwnProperty(val2, aKeys[i])) {\n      return false;\n    }\n  }\n\n  if (strict && arguments.length === 5) {\n    var symbolKeysA = objectGetOwnPropertySymbols(val1);\n\n    if (symbolKeysA.length !== 0) {\n      var count = 0;\n\n      for (i = 0; i < symbolKeysA.length; i++) {\n        var key = symbolKeysA[i];\n\n        if (propertyIsEnumerable(val1, key)) {\n          if (!propertyIsEnumerable(val2, key)) {\n            return false;\n          }\n\n          aKeys.push(key);\n          count++;\n        } else if (propertyIsEnumerable(val2, key)) {\n          return false;\n        }\n      }\n\n      var symbolKeysB = objectGetOwnPropertySymbols(val2);\n\n      if (symbolKeysA.length !== symbolKeysB.length && getEnumerables(val2, symbolKeysB).length !== count) {\n        return false;\n      }\n    } else {\n      var _symbolKeysB = objectGetOwnPropertySymbols(val2);\n\n      if (_symbolKeysB.length !== 0 && getEnumerables(val2, _symbolKeysB).length !== 0) {\n        return false;\n      }\n    }\n  }\n\n  if (aKeys.length === 0 && (iterationType === kNoIterator || iterationType === kIsArray && val1.length === 0 || val1.size === 0)) {\n    return true;\n  } // Use memos to handle cycles.\n\n\n  if (memos === undefined) {\n    memos = {\n      val1: new Map(),\n      val2: new Map(),\n      position: 0\n    };\n  } else {\n    // We prevent up to two map.has(x) calls by directly retrieving the value\n    // and checking for undefined. The map can only contain numbers, so it is\n    // safe to check for undefined only.\n    var val2MemoA = memos.val1.get(val1);\n\n    if (val2MemoA !== undefined) {\n      var val2MemoB = memos.val2.get(val2);\n\n      if (val2MemoB !== undefined) {\n        return val2MemoA === val2MemoB;\n      }\n    }\n\n    memos.position++;\n  }\n\n  memos.val1.set(val1, memos.position);\n  memos.val2.set(val2, memos.position);\n  var areEq = objEquiv(val1, val2, strict, aKeys, memos, iterationType);\n  memos.val1.delete(val1);\n  memos.val2.delete(val2);\n  return areEq;\n}\n\nfunction setHasEqualElement(set, val1, strict, memo) {\n  // Go looking.\n  var setValues = arrayFromSet(set);\n\n  for (var i = 0; i < setValues.length; i++) {\n    var val2 = setValues[i];\n\n    if (innerDeepEqual(val1, val2, strict, memo)) {\n      // Remove the matching element to make sure we do not check that again.\n      set.delete(val2);\n      return true;\n    }\n  }\n\n  return false;\n} // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Equality_comparisons_and_sameness#Loose_equality_using\n// Sadly it is not possible to detect corresponding values properly in case the\n// type is a string, number, bigint or boolean. The reason is that those values\n// can match lots of different string values (e.g., 1n == '+00001').\n\n\nfunction findLooseMatchingPrimitives(prim) {\n  switch (_typeof(prim)) {\n    case 'undefined':\n      return null;\n\n    case 'object':\n      // Only pass in null as object!\n      return undefined;\n\n    case 'symbol':\n      return false;\n\n    case 'string':\n      prim = +prim;\n    // Loose equal entries exist only if the string is possible to convert to\n    // a regular number and not NaN.\n    // Fall through\n\n    case 'number':\n      if (numberIsNaN(prim)) {\n        return false;\n      }\n\n  }\n\n  return true;\n}\n\nfunction setMightHaveLoosePrim(a, b, prim) {\n  var altValue = findLooseMatchingPrimitives(prim);\n  if (altValue != null) return altValue;\n  return b.has(altValue) && !a.has(altValue);\n}\n\nfunction mapMightHaveLoosePrim(a, b, prim, item, memo) {\n  var altValue = findLooseMatchingPrimitives(prim);\n\n  if (altValue != null) {\n    return altValue;\n  }\n\n  var curB = b.get(altValue);\n\n  if (curB === undefined && !b.has(altValue) || !innerDeepEqual(item, curB, false, memo)) {\n    return false;\n  }\n\n  return !a.has(altValue) && innerDeepEqual(item, curB, false, memo);\n}\n\nfunction setEquiv(a, b, strict, memo) {\n  // This is a lazily initiated Set of entries which have to be compared\n  // pairwise.\n  var set = null;\n  var aValues = arrayFromSet(a);\n\n  for (var i = 0; i < aValues.length; i++) {\n    var val = aValues[i]; // Note: Checking for the objects first improves the performance for object\n    // heavy sets but it is a minor slow down for primitives. As they are fast\n    // to check this improves the worst case scenario instead.\n\n    if (_typeof(val) === 'object' && val !== null) {\n      if (set === null) {\n        set = new Set();\n      } // If the specified value doesn't exist in the second set its an not null\n      // object (or non strict only: a not matching primitive) we'll need to go\n      // hunting for something thats deep-(strict-)equal to it. To make this\n      // O(n log n) complexity we have to copy these values in a new set first.\n\n\n      set.add(val);\n    } else if (!b.has(val)) {\n      if (strict) return false; // Fast path to detect missing string, symbol, undefined and null values.\n\n      if (!setMightHaveLoosePrim(a, b, val)) {\n        return false;\n      }\n\n      if (set === null) {\n        set = new Set();\n      }\n\n      set.add(val);\n    }\n  }\n\n  if (set !== null) {\n    var bValues = arrayFromSet(b);\n\n    for (var _i = 0; _i < bValues.length; _i++) {\n      var _val = bValues[_i]; // We have to check if a primitive value is already\n      // matching and only if it's not, go hunting for it.\n\n      if (_typeof(_val) === 'object' && _val !== null) {\n        if (!setHasEqualElement(set, _val, strict, memo)) return false;\n      } else if (!strict && !a.has(_val) && !setHasEqualElement(set, _val, strict, memo)) {\n        return false;\n      }\n    }\n\n    return set.size === 0;\n  }\n\n  return true;\n}\n\nfunction mapHasEqualEntry(set, map, key1, item1, strict, memo) {\n  // To be able to handle cases like:\n  //   Map([[{}, 'a'], [{}, 'b']]) vs Map([[{}, 'b'], [{}, 'a']])\n  // ... we need to consider *all* matching keys, not just the first we find.\n  var setValues = arrayFromSet(set);\n\n  for (var i = 0; i < setValues.length; i++) {\n    var key2 = setValues[i];\n\n    if (innerDeepEqual(key1, key2, strict, memo) && innerDeepEqual(item1, map.get(key2), strict, memo)) {\n      set.delete(key2);\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction mapEquiv(a, b, strict, memo) {\n  var set = null;\n  var aEntries = arrayFromMap(a);\n\n  for (var i = 0; i < aEntries.length; i++) {\n    var _aEntries$i = _slicedToArray(aEntries[i], 2),\n        key = _aEntries$i[0],\n        item1 = _aEntries$i[1];\n\n    if (_typeof(key) === 'object' && key !== null) {\n      if (set === null) {\n        set = new Set();\n      }\n\n      set.add(key);\n    } else {\n      // By directly retrieving the value we prevent another b.has(key) check in\n      // almost all possible cases.\n      var item2 = b.get(key);\n\n      if (item2 === undefined && !b.has(key) || !innerDeepEqual(item1, item2, strict, memo)) {\n        if (strict) return false; // Fast path to detect missing string, symbol, undefined and null\n        // keys.\n\n        if (!mapMightHaveLoosePrim(a, b, key, item1, memo)) return false;\n\n        if (set === null) {\n          set = new Set();\n        }\n\n        set.add(key);\n      }\n    }\n  }\n\n  if (set !== null) {\n    var bEntries = arrayFromMap(b);\n\n    for (var _i2 = 0; _i2 < bEntries.length; _i2++) {\n      var _bEntries$_i = _slicedToArray(bEntries[_i2], 2),\n          key = _bEntries$_i[0],\n          item = _bEntries$_i[1];\n\n      if (_typeof(key) === 'object' && key !== null) {\n        if (!mapHasEqualEntry(set, a, key, item, strict, memo)) return false;\n      } else if (!strict && (!a.has(key) || !innerDeepEqual(a.get(key), item, false, memo)) && !mapHasEqualEntry(set, a, key, item, false, memo)) {\n        return false;\n      }\n    }\n\n    return set.size === 0;\n  }\n\n  return true;\n}\n\nfunction objEquiv(a, b, strict, keys, memos, iterationType) {\n  // Sets and maps don't have their entries accessible via normal object\n  // properties.\n  var i = 0;\n\n  if (iterationType === kIsSet) {\n    if (!setEquiv(a, b, strict, memos)) {\n      return false;\n    }\n  } else if (iterationType === kIsMap) {\n    if (!mapEquiv(a, b, strict, memos)) {\n      return false;\n    }\n  } else if (iterationType === kIsArray) {\n    for (; i < a.length; i++) {\n      if (hasOwnProperty(a, i)) {\n        if (!hasOwnProperty(b, i) || !innerDeepEqual(a[i], b[i], strict, memos)) {\n          return false;\n        }\n      } else if (hasOwnProperty(b, i)) {\n        return false;\n      } else {\n        // Array is sparse.\n        var keysA = Object.keys(a);\n\n        for (; i < keysA.length; i++) {\n          var key = keysA[i];\n\n          if (!hasOwnProperty(b, key) || !innerDeepEqual(a[key], b[key], strict, memos)) {\n            return false;\n          }\n        }\n\n        if (keysA.length !== Object.keys(b).length) {\n          return false;\n        }\n\n        return true;\n      }\n    }\n  } // The pair must have equivalent values for every corresponding key.\n  // Possibly expensive deep test:\n\n\n  for (i = 0; i < keys.length; i++) {\n    var _key = keys[i];\n\n    if (!innerDeepEqual(a[_key], b[_key], strict, memos)) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction isDeepEqual(val1, val2) {\n  return innerDeepEqual(val1, val2, kLoose);\n}\n\nfunction isDeepStrictEqual(val1, val2) {\n  return innerDeepEqual(val1, val2, kStrict);\n}\n\nmodule.exports = {\n  isDeepEqual: isDeepEqual,\n  isDeepStrictEqual: isDeepStrictEqual\n};","'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\n\nvar callBind = require('./');\n\nvar $indexOf = callBind(GetIntrinsic('String.prototype.indexOf'));\n\nmodule.exports = function callBoundIntrinsic(name, allowMissing) {\n\tvar intrinsic = GetIntrinsic(name, !!allowMissing);\n\tif (typeof intrinsic === 'function' && $indexOf(name, '.prototype.') > -1) {\n\t\treturn callBind(intrinsic);\n\t}\n\treturn intrinsic;\n};\n","'use strict';\n\nvar bind = require('function-bind');\nvar GetIntrinsic = require('get-intrinsic');\n\nvar $apply = GetIntrinsic('%Function.prototype.apply%');\nvar $call = GetIntrinsic('%Function.prototype.call%');\nvar $reflectApply = GetIntrinsic('%Reflect.apply%', true) || bind.call($call, $apply);\n\nvar $gOPD = GetIntrinsic('%Object.getOwnPropertyDescriptor%', true);\nvar $defineProperty = GetIntrinsic('%Object.defineProperty%', true);\nvar $max = GetIntrinsic('%Math.max%');\n\nif ($defineProperty) {\n\ttry {\n\t\t$defineProperty({}, 'a', { value: 1 });\n\t} catch (e) {\n\t\t// IE 8 has a broken defineProperty\n\t\t$defineProperty = null;\n\t}\n}\n\nmodule.exports = function callBind(originalFunction) {\n\tvar func = $reflectApply(bind, $call, arguments);\n\tif ($gOPD && $defineProperty) {\n\t\tvar desc = $gOPD(func, 'length');\n\t\tif (desc.configurable) {\n\t\t\t// original length, plus the receiver, minus any additional arguments (after the receiver)\n\t\t\t$defineProperty(\n\t\t\t\tfunc,\n\t\t\t\t'length',\n\t\t\t\t{ value: 1 + $max(0, originalFunction.length - (arguments.length - 1)) }\n\t\t\t);\n\t\t}\n\t}\n\treturn func;\n};\n\nvar applyBind = function applyBind() {\n\treturn $reflectApply(bind, $apply, arguments);\n};\n\nif ($defineProperty) {\n\t$defineProperty(module.exports, 'apply', { value: applyBind });\n} else {\n\tmodule.exports.apply = applyBind;\n}\n","/*global window, global*/\nvar util = require(\"util\")\nvar assert = require(\"assert\")\nfunction now() { return new Date().getTime() }\n\nvar slice = Array.prototype.slice\nvar console\nvar times = {}\n\nif (typeof global !== \"undefined\" && global.console) {\n    console = global.console\n} else if (typeof window !== \"undefined\" && window.console) {\n    console = window.console\n} else {\n    console = {}\n}\n\nvar functions = [\n    [log, \"log\"],\n    [info, \"info\"],\n    [warn, \"warn\"],\n    [error, \"error\"],\n    [time, \"time\"],\n    [timeEnd, \"timeEnd\"],\n    [trace, \"trace\"],\n    [dir, \"dir\"],\n    [consoleAssert, \"assert\"]\n]\n\nfor (var i = 0; i < functions.length; i++) {\n    var tuple = functions[i]\n    var f = tuple[0]\n    var name = tuple[1]\n\n    if (!console[name]) {\n        console[name] = f\n    }\n}\n\nmodule.exports = console\n\nfunction log() {}\n\nfunction info() {\n    console.log.apply(console, arguments)\n}\n\nfunction warn() {\n    console.log.apply(console, arguments)\n}\n\nfunction error() {\n    console.warn.apply(console, arguments)\n}\n\nfunction time(label) {\n    times[label] = now()\n}\n\nfunction timeEnd(label) {\n    var time = times[label]\n    if (!time) {\n        throw new Error(\"No such label: \" + label)\n    }\n\n    delete times[label]\n    var duration = now() - time\n    console.log(label + \": \" + duration + \"ms\")\n}\n\nfunction trace() {\n    var err = new Error()\n    err.name = \"Trace\"\n    err.message = util.format.apply(null, arguments)\n    console.error(err.stack)\n}\n\nfunction dir(object) {\n    console.log(util.inspect(object) + \"\\n\")\n}\n\nfunction consoleAssert(expression) {\n    if (!expression) {\n        var arr = slice.call(arguments, 1)\n        assert.ok(false, util.format.apply(null, arr))\n    }\n}\n","'use strict';\n\nvar keys = require('object-keys');\nvar hasSymbols = typeof Symbol === 'function' && typeof Symbol('foo') === 'symbol';\n\nvar toStr = Object.prototype.toString;\nvar concat = Array.prototype.concat;\nvar origDefineProperty = Object.defineProperty;\n\nvar isFunction = function (fn) {\n\treturn typeof fn === 'function' && toStr.call(fn) === '[object Function]';\n};\n\nvar hasPropertyDescriptors = require('has-property-descriptors')();\n\nvar supportsDescriptors = origDefineProperty && hasPropertyDescriptors;\n\nvar defineProperty = function (object, name, value, predicate) {\n\tif (name in object && (!isFunction(predicate) || !predicate())) {\n\t\treturn;\n\t}\n\tif (supportsDescriptors) {\n\t\torigDefineProperty(object, name, {\n\t\t\tconfigurable: true,\n\t\t\tenumerable: false,\n\t\t\tvalue: value,\n\t\t\twritable: true\n\t\t});\n\t} else {\n\t\tobject[name] = value; // eslint-disable-line no-param-reassign\n\t}\n};\n\nvar defineProperties = function (object, map) {\n\tvar predicates = arguments.length > 2 ? arguments[2] : {};\n\tvar props = keys(map);\n\tif (hasSymbols) {\n\t\tprops = concat.call(props, Object.getOwnPropertySymbols(map));\n\t}\n\tfor (var i = 0; i < props.length; i += 1) {\n\t\tdefineProperty(object, props[i], map[props[i]], predicates[props[i]]);\n\t}\n};\n\ndefineProperties.supportsDescriptors = !!supportsDescriptors;\n\nmodule.exports = defineProperties;\n","/**\n * Code refactored from Mozilla Developer Network:\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\n */\n\n'use strict';\n\nfunction assign(target, firstSource) {\n  if (target === undefined || target === null) {\n    throw new TypeError('Cannot convert first argument to object');\n  }\n\n  var to = Object(target);\n  for (var i = 1; i < arguments.length; i++) {\n    var nextSource = arguments[i];\n    if (nextSource === undefined || nextSource === null) {\n      continue;\n    }\n\n    var keysArray = Object.keys(Object(nextSource));\n    for (var nextIndex = 0, len = keysArray.length; nextIndex < len; nextIndex++) {\n      var nextKey = keysArray[nextIndex];\n      var desc = Object.getOwnPropertyDescriptor(nextSource, nextKey);\n      if (desc !== undefined && desc.enumerable) {\n        to[nextKey] = nextSource[nextKey];\n      }\n    }\n  }\n  return to;\n}\n\nfunction polyfill() {\n  if (!Object.assign) {\n    Object.defineProperty(Object, 'assign', {\n      enumerable: false,\n      configurable: true,\n      writable: true,\n      value: assign\n    });\n  }\n}\n\nmodule.exports = {\n  assign: assign,\n  polyfill: polyfill\n};\n","'use strict';\n\nvar isCallable = require('is-callable');\n\nvar toStr = Object.prototype.toString;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nvar forEachArray = function forEachArray(array, iterator, receiver) {\n    for (var i = 0, len = array.length; i < len; i++) {\n        if (hasOwnProperty.call(array, i)) {\n            if (receiver == null) {\n                iterator(array[i], i, array);\n            } else {\n                iterator.call(receiver, array[i], i, array);\n            }\n        }\n    }\n};\n\nvar forEachString = function forEachString(string, iterator, receiver) {\n    for (var i = 0, len = string.length; i < len; i++) {\n        // no such thing as a sparse string.\n        if (receiver == null) {\n            iterator(string.charAt(i), i, string);\n        } else {\n            iterator.call(receiver, string.charAt(i), i, string);\n        }\n    }\n};\n\nvar forEachObject = function forEachObject(object, iterator, receiver) {\n    for (var k in object) {\n        if (hasOwnProperty.call(object, k)) {\n            if (receiver == null) {\n                iterator(object[k], k, object);\n            } else {\n                iterator.call(receiver, object[k], k, object);\n            }\n        }\n    }\n};\n\nvar forEach = function forEach(list, iterator, thisArg) {\n    if (!isCallable(iterator)) {\n        throw new TypeError('iterator must be a function');\n    }\n\n    var receiver;\n    if (arguments.length >= 3) {\n        receiver = thisArg;\n    }\n\n    if (toStr.call(list) === '[object Array]') {\n        forEachArray(list, iterator, receiver);\n    } else if (typeof list === 'string') {\n        forEachString(list, iterator, receiver);\n    } else {\n        forEachObject(list, iterator, receiver);\n    }\n};\n\nmodule.exports = forEach;\n","'use strict';\n\n/* eslint no-invalid-this: 1 */\n\nvar ERROR_MESSAGE = 'Function.prototype.bind called on incompatible ';\nvar slice = Array.prototype.slice;\nvar toStr = Object.prototype.toString;\nvar funcType = '[object Function]';\n\nmodule.exports = function bind(that) {\n    var target = this;\n    if (typeof target !== 'function' || toStr.call(target) !== funcType) {\n        throw new TypeError(ERROR_MESSAGE + target);\n    }\n    var args = slice.call(arguments, 1);\n\n    var bound;\n    var binder = function () {\n        if (this instanceof bound) {\n            var result = target.apply(\n                this,\n                args.concat(slice.call(arguments))\n            );\n            if (Object(result) === result) {\n                return result;\n            }\n            return this;\n        } else {\n            return target.apply(\n                that,\n                args.concat(slice.call(arguments))\n            );\n        }\n    };\n\n    var boundLength = Math.max(0, target.length - args.length);\n    var boundArgs = [];\n    for (var i = 0; i < boundLength; i++) {\n        boundArgs.push('$' + i);\n    }\n\n    bound = Function('binder', 'return function (' + boundArgs.join(',') + '){ return binder.apply(this,arguments); }')(binder);\n\n    if (target.prototype) {\n        var Empty = function Empty() {};\n        Empty.prototype = target.prototype;\n        bound.prototype = new Empty();\n        Empty.prototype = null;\n    }\n\n    return bound;\n};\n","'use strict';\n\nvar implementation = require('./implementation');\n\nmodule.exports = Function.prototype.bind || implementation;\n","'use strict';\n\nvar undefined;\n\nvar $SyntaxError = SyntaxError;\nvar $Function = Function;\nvar $TypeError = TypeError;\n\n// eslint-disable-next-line consistent-return\nvar getEvalledConstructor = function (expressionSyntax) {\n\ttry {\n\t\treturn $Function('\"use strict\"; return (' + expressionSyntax + ').constructor;')();\n\t} catch (e) {}\n};\n\nvar $gOPD = Object.getOwnPropertyDescriptor;\nif ($gOPD) {\n\ttry {\n\t\t$gOPD({}, '');\n\t} catch (e) {\n\t\t$gOPD = null; // this is IE 8, which has a broken gOPD\n\t}\n}\n\nvar throwTypeError = function () {\n\tthrow new $TypeError();\n};\nvar ThrowTypeError = $gOPD\n\t? (function () {\n\t\ttry {\n\t\t\t// eslint-disable-next-line no-unused-expressions, no-caller, no-restricted-properties\n\t\t\targuments.callee; // IE 8 does not throw here\n\t\t\treturn throwTypeError;\n\t\t} catch (calleeThrows) {\n\t\t\ttry {\n\t\t\t\t// IE 8 throws on Object.getOwnPropertyDescriptor(arguments, '')\n\t\t\t\treturn $gOPD(arguments, 'callee').get;\n\t\t\t} catch (gOPDthrows) {\n\t\t\t\treturn throwTypeError;\n\t\t\t}\n\t\t}\n\t}())\n\t: throwTypeError;\n\nvar hasSymbols = require('has-symbols')();\n\nvar getProto = Object.getPrototypeOf || function (x) { return x.__proto__; }; // eslint-disable-line no-proto\n\nvar needsEval = {};\n\nvar TypedArray = typeof Uint8Array === 'undefined' ? undefined : getProto(Uint8Array);\n\nvar INTRINSICS = {\n\t'%AggregateError%': typeof AggregateError === 'undefined' ? undefined : AggregateError,\n\t'%Array%': Array,\n\t'%ArrayBuffer%': typeof ArrayBuffer === 'undefined' ? undefined : ArrayBuffer,\n\t'%ArrayIteratorPrototype%': hasSymbols ? getProto([][Symbol.iterator]()) : undefined,\n\t'%AsyncFromSyncIteratorPrototype%': undefined,\n\t'%AsyncFunction%': needsEval,\n\t'%AsyncGenerator%': needsEval,\n\t'%AsyncGeneratorFunction%': needsEval,\n\t'%AsyncIteratorPrototype%': needsEval,\n\t'%Atomics%': typeof Atomics === 'undefined' ? undefined : Atomics,\n\t'%BigInt%': typeof BigInt === 'undefined' ? undefined : BigInt,\n\t'%Boolean%': Boolean,\n\t'%DataView%': typeof DataView === 'undefined' ? undefined : DataView,\n\t'%Date%': Date,\n\t'%decodeURI%': decodeURI,\n\t'%decodeURIComponent%': decodeURIComponent,\n\t'%encodeURI%': encodeURI,\n\t'%encodeURIComponent%': encodeURIComponent,\n\t'%Error%': Error,\n\t'%eval%': eval, // eslint-disable-line no-eval\n\t'%EvalError%': EvalError,\n\t'%Float32Array%': typeof Float32Array === 'undefined' ? undefined : Float32Array,\n\t'%Float64Array%': typeof Float64Array === 'undefined' ? undefined : Float64Array,\n\t'%FinalizationRegistry%': typeof FinalizationRegistry === 'undefined' ? undefined : FinalizationRegistry,\n\t'%Function%': $Function,\n\t'%GeneratorFunction%': needsEval,\n\t'%Int8Array%': typeof Int8Array === 'undefined' ? undefined : Int8Array,\n\t'%Int16Array%': typeof Int16Array === 'undefined' ? undefined : Int16Array,\n\t'%Int32Array%': typeof Int32Array === 'undefined' ? undefined : Int32Array,\n\t'%isFinite%': isFinite,\n\t'%isNaN%': isNaN,\n\t'%IteratorPrototype%': hasSymbols ? getProto(getProto([][Symbol.iterator]())) : undefined,\n\t'%JSON%': typeof JSON === 'object' ? JSON : undefined,\n\t'%Map%': typeof Map === 'undefined' ? undefined : Map,\n\t'%MapIteratorPrototype%': typeof Map === 'undefined' || !hasSymbols ? undefined : getProto(new Map()[Symbol.iterator]()),\n\t'%Math%': Math,\n\t'%Number%': Number,\n\t'%Object%': Object,\n\t'%parseFloat%': parseFloat,\n\t'%parseInt%': parseInt,\n\t'%Promise%': typeof Promise === 'undefined' ? undefined : Promise,\n\t'%Proxy%': typeof Proxy === 'undefined' ? undefined : Proxy,\n\t'%RangeError%': RangeError,\n\t'%ReferenceError%': ReferenceError,\n\t'%Reflect%': typeof Reflect === 'undefined' ? undefined : Reflect,\n\t'%RegExp%': RegExp,\n\t'%Set%': typeof Set === 'undefined' ? undefined : Set,\n\t'%SetIteratorPrototype%': typeof Set === 'undefined' || !hasSymbols ? undefined : getProto(new Set()[Symbol.iterator]()),\n\t'%SharedArrayBuffer%': typeof SharedArrayBuffer === 'undefined' ? undefined : SharedArrayBuffer,\n\t'%String%': String,\n\t'%StringIteratorPrototype%': hasSymbols ? getProto(''[Symbol.iterator]()) : undefined,\n\t'%Symbol%': hasSymbols ? Symbol : undefined,\n\t'%SyntaxError%': $SyntaxError,\n\t'%ThrowTypeError%': ThrowTypeError,\n\t'%TypedArray%': TypedArray,\n\t'%TypeError%': $TypeError,\n\t'%Uint8Array%': typeof Uint8Array === 'undefined' ? undefined : Uint8Array,\n\t'%Uint8ClampedArray%': typeof Uint8ClampedArray === 'undefined' ? undefined : Uint8ClampedArray,\n\t'%Uint16Array%': typeof Uint16Array === 'undefined' ? undefined : Uint16Array,\n\t'%Uint32Array%': typeof Uint32Array === 'undefined' ? undefined : Uint32Array,\n\t'%URIError%': URIError,\n\t'%WeakMap%': typeof WeakMap === 'undefined' ? undefined : WeakMap,\n\t'%WeakRef%': typeof WeakRef === 'undefined' ? undefined : WeakRef,\n\t'%WeakSet%': typeof WeakSet === 'undefined' ? undefined : WeakSet\n};\n\nvar doEval = function doEval(name) {\n\tvar value;\n\tif (name === '%AsyncFunction%') {\n\t\tvalue = getEvalledConstructor('async function () {}');\n\t} else if (name === '%GeneratorFunction%') {\n\t\tvalue = getEvalledConstructor('function* () {}');\n\t} else if (name === '%AsyncGeneratorFunction%') {\n\t\tvalue = getEvalledConstructor('async function* () {}');\n\t} else if (name === '%AsyncGenerator%') {\n\t\tvar fn = doEval('%AsyncGeneratorFunction%');\n\t\tif (fn) {\n\t\t\tvalue = fn.prototype;\n\t\t}\n\t} else if (name === '%AsyncIteratorPrototype%') {\n\t\tvar gen = doEval('%AsyncGenerator%');\n\t\tif (gen) {\n\t\t\tvalue = getProto(gen.prototype);\n\t\t}\n\t}\n\n\tINTRINSICS[name] = value;\n\n\treturn value;\n};\n\nvar LEGACY_ALIASES = {\n\t'%ArrayBufferPrototype%': ['ArrayBuffer', 'prototype'],\n\t'%ArrayPrototype%': ['Array', 'prototype'],\n\t'%ArrayProto_entries%': ['Array', 'prototype', 'entries'],\n\t'%ArrayProto_forEach%': ['Array', 'prototype', 'forEach'],\n\t'%ArrayProto_keys%': ['Array', 'prototype', 'keys'],\n\t'%ArrayProto_values%': ['Array', 'prototype', 'values'],\n\t'%AsyncFunctionPrototype%': ['AsyncFunction', 'prototype'],\n\t'%AsyncGenerator%': ['AsyncGeneratorFunction', 'prototype'],\n\t'%AsyncGeneratorPrototype%': ['AsyncGeneratorFunction', 'prototype', 'prototype'],\n\t'%BooleanPrototype%': ['Boolean', 'prototype'],\n\t'%DataViewPrototype%': ['DataView', 'prototype'],\n\t'%DatePrototype%': ['Date', 'prototype'],\n\t'%ErrorPrototype%': ['Error', 'prototype'],\n\t'%EvalErrorPrototype%': ['EvalError', 'prototype'],\n\t'%Float32ArrayPrototype%': ['Float32Array', 'prototype'],\n\t'%Float64ArrayPrototype%': ['Float64Array', 'prototype'],\n\t'%FunctionPrototype%': ['Function', 'prototype'],\n\t'%Generator%': ['GeneratorFunction', 'prototype'],\n\t'%GeneratorPrototype%': ['GeneratorFunction', 'prototype', 'prototype'],\n\t'%Int8ArrayPrototype%': ['Int8Array', 'prototype'],\n\t'%Int16ArrayPrototype%': ['Int16Array', 'prototype'],\n\t'%Int32ArrayPrototype%': ['Int32Array', 'prototype'],\n\t'%JSONParse%': ['JSON', 'parse'],\n\t'%JSONStringify%': ['JSON', 'stringify'],\n\t'%MapPrototype%': ['Map', 'prototype'],\n\t'%NumberPrototype%': ['Number', 'prototype'],\n\t'%ObjectPrototype%': ['Object', 'prototype'],\n\t'%ObjProto_toString%': ['Object', 'prototype', 'toString'],\n\t'%ObjProto_valueOf%': ['Object', 'prototype', 'valueOf'],\n\t'%PromisePrototype%': ['Promise', 'prototype'],\n\t'%PromiseProto_then%': ['Promise', 'prototype', 'then'],\n\t'%Promise_all%': ['Promise', 'all'],\n\t'%Promise_reject%': ['Promise', 'reject'],\n\t'%Promise_resolve%': ['Promise', 'resolve'],\n\t'%RangeErrorPrototype%': ['RangeError', 'prototype'],\n\t'%ReferenceErrorPrototype%': ['ReferenceError', 'prototype'],\n\t'%RegExpPrototype%': ['RegExp', 'prototype'],\n\t'%SetPrototype%': ['Set', 'prototype'],\n\t'%SharedArrayBufferPrototype%': ['SharedArrayBuffer', 'prototype'],\n\t'%StringPrototype%': ['String', 'prototype'],\n\t'%SymbolPrototype%': ['Symbol', 'prototype'],\n\t'%SyntaxErrorPrototype%': ['SyntaxError', 'prototype'],\n\t'%TypedArrayPrototype%': ['TypedArray', 'prototype'],\n\t'%TypeErrorPrototype%': ['TypeError', 'prototype'],\n\t'%Uint8ArrayPrototype%': ['Uint8Array', 'prototype'],\n\t'%Uint8ClampedArrayPrototype%': ['Uint8ClampedArray', 'prototype'],\n\t'%Uint16ArrayPrototype%': ['Uint16Array', 'prototype'],\n\t'%Uint32ArrayPrototype%': ['Uint32Array', 'prototype'],\n\t'%URIErrorPrototype%': ['URIError', 'prototype'],\n\t'%WeakMapPrototype%': ['WeakMap', 'prototype'],\n\t'%WeakSetPrototype%': ['WeakSet', 'prototype']\n};\n\nvar bind = require('function-bind');\nvar hasOwn = require('has');\nvar $concat = bind.call(Function.call, Array.prototype.concat);\nvar $spliceApply = bind.call(Function.apply, Array.prototype.splice);\nvar $replace = bind.call(Function.call, String.prototype.replace);\nvar $strSlice = bind.call(Function.call, String.prototype.slice);\nvar $exec = bind.call(Function.call, RegExp.prototype.exec);\n\n/* adapted from https://github.com/lodash/lodash/blob/4.17.15/dist/lodash.js#L6735-L6744 */\nvar rePropName = /[^%.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|%$))/g;\nvar reEscapeChar = /\\\\(\\\\)?/g; /** Used to match backslashes in property paths. */\nvar stringToPath = function stringToPath(string) {\n\tvar first = $strSlice(string, 0, 1);\n\tvar last = $strSlice(string, -1);\n\tif (first === '%' && last !== '%') {\n\t\tthrow new $SyntaxError('invalid intrinsic syntax, expected closing `%`');\n\t} else if (last === '%' && first !== '%') {\n\t\tthrow new $SyntaxError('invalid intrinsic syntax, expected opening `%`');\n\t}\n\tvar result = [];\n\t$replace(string, rePropName, function (match, number, quote, subString) {\n\t\tresult[result.length] = quote ? $replace(subString, reEscapeChar, '$1') : number || match;\n\t});\n\treturn result;\n};\n/* end adaptation */\n\nvar getBaseIntrinsic = function getBaseIntrinsic(name, allowMissing) {\n\tvar intrinsicName = name;\n\tvar alias;\n\tif (hasOwn(LEGACY_ALIASES, intrinsicName)) {\n\t\talias = LEGACY_ALIASES[intrinsicName];\n\t\tintrinsicName = '%' + alias[0] + '%';\n\t}\n\n\tif (hasOwn(INTRINSICS, intrinsicName)) {\n\t\tvar value = INTRINSICS[intrinsicName];\n\t\tif (value === needsEval) {\n\t\t\tvalue = doEval(intrinsicName);\n\t\t}\n\t\tif (typeof value === 'undefined' && !allowMissing) {\n\t\t\tthrow new $TypeError('intrinsic ' + name + ' exists, but is not available. Please file an issue!');\n\t\t}\n\n\t\treturn {\n\t\t\talias: alias,\n\t\t\tname: intrinsicName,\n\t\t\tvalue: value\n\t\t};\n\t}\n\n\tthrow new $SyntaxError('intrinsic ' + name + ' does not exist!');\n};\n\nmodule.exports = function GetIntrinsic(name, allowMissing) {\n\tif (typeof name !== 'string' || name.length === 0) {\n\t\tthrow new $TypeError('intrinsic name must be a non-empty string');\n\t}\n\tif (arguments.length > 1 && typeof allowMissing !== 'boolean') {\n\t\tthrow new $TypeError('\"allowMissing\" argument must be a boolean');\n\t}\n\n\tif ($exec(/^%?[^%]*%?$/, name) === null) {\n\t\tthrow new $SyntaxError('`%` may not be present anywhere but at the beginning and end of the intrinsic name');\n\t}\n\tvar parts = stringToPath(name);\n\tvar intrinsicBaseName = parts.length > 0 ? parts[0] : '';\n\n\tvar intrinsic = getBaseIntrinsic('%' + intrinsicBaseName + '%', allowMissing);\n\tvar intrinsicRealName = intrinsic.name;\n\tvar value = intrinsic.value;\n\tvar skipFurtherCaching = false;\n\n\tvar alias = intrinsic.alias;\n\tif (alias) {\n\t\tintrinsicBaseName = alias[0];\n\t\t$spliceApply(parts, $concat([0, 1], alias));\n\t}\n\n\tfor (var i = 1, isOwn = true; i < parts.length; i += 1) {\n\t\tvar part = parts[i];\n\t\tvar first = $strSlice(part, 0, 1);\n\t\tvar last = $strSlice(part, -1);\n\t\tif (\n\t\t\t(\n\t\t\t\t(first === '\"' || first === \"'\" || first === '`')\n\t\t\t\t|| (last === '\"' || last === \"'\" || last === '`')\n\t\t\t)\n\t\t\t&& first !== last\n\t\t) {\n\t\t\tthrow new $SyntaxError('property names with quotes must have matching quotes');\n\t\t}\n\t\tif (part === 'constructor' || !isOwn) {\n\t\t\tskipFurtherCaching = true;\n\t\t}\n\n\t\tintrinsicBaseName += '.' + part;\n\t\tintrinsicRealName = '%' + intrinsicBaseName + '%';\n\n\t\tif (hasOwn(INTRINSICS, intrinsicRealName)) {\n\t\t\tvalue = INTRINSICS[intrinsicRealName];\n\t\t} else if (value != null) {\n\t\t\tif (!(part in value)) {\n\t\t\t\tif (!allowMissing) {\n\t\t\t\t\tthrow new $TypeError('base intrinsic for ' + name + ' exists, but the property is not available.');\n\t\t\t\t}\n\t\t\t\treturn void undefined;\n\t\t\t}\n\t\t\tif ($gOPD && (i + 1) >= parts.length) {\n\t\t\t\tvar desc = $gOPD(value, part);\n\t\t\t\tisOwn = !!desc;\n\n\t\t\t\t// By convention, when a data property is converted to an accessor\n\t\t\t\t// property to emulate a data property that does not suffer from\n\t\t\t\t// the override mistake, that accessor's getter is marked with\n\t\t\t\t// an `originalValue` property. Here, when we detect this, we\n\t\t\t\t// uphold the illusion by pretending to see that original data\n\t\t\t\t// property, i.e., returning the value rather than the getter\n\t\t\t\t// itself.\n\t\t\t\tif (isOwn && 'get' in desc && !('originalValue' in desc.get)) {\n\t\t\t\t\tvalue = desc.get;\n\t\t\t\t} else {\n\t\t\t\t\tvalue = value[part];\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tisOwn = hasOwn(value, part);\n\t\t\t\tvalue = value[part];\n\t\t\t}\n\n\t\t\tif (isOwn && !skipFurtherCaching) {\n\t\t\t\tINTRINSICS[intrinsicRealName] = value;\n\t\t\t}\n\t\t}\n\t}\n\treturn value;\n};\n","'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\n\nvar $gOPD = GetIntrinsic('%Object.getOwnPropertyDescriptor%', true);\n\nif ($gOPD) {\n\ttry {\n\t\t$gOPD([], 'length');\n\t} catch (e) {\n\t\t// IE 8 has a broken gOPD\n\t\t$gOPD = null;\n\t}\n}\n\nmodule.exports = $gOPD;\n","'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\n\nvar $defineProperty = GetIntrinsic('%Object.defineProperty%', true);\n\nvar hasPropertyDescriptors = function hasPropertyDescriptors() {\n\tif ($defineProperty) {\n\t\ttry {\n\t\t\t$defineProperty({}, 'a', { value: 1 });\n\t\t\treturn true;\n\t\t} catch (e) {\n\t\t\t// IE 8 has a broken defineProperty\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn false;\n};\n\nhasPropertyDescriptors.hasArrayLengthDefineBug = function hasArrayLengthDefineBug() {\n\t// node v0.6 has a bug where array lengths can be Set but not Defined\n\tif (!hasPropertyDescriptors()) {\n\t\treturn null;\n\t}\n\ttry {\n\t\treturn $defineProperty([], 'length', { value: 1 }).length !== 1;\n\t} catch (e) {\n\t\t// In Firefox 4-22, defining length on an array throws an exception.\n\t\treturn true;\n\t}\n};\n\nmodule.exports = hasPropertyDescriptors;\n","'use strict';\n\nvar origSymbol = typeof Symbol !== 'undefined' && Symbol;\nvar hasSymbolSham = require('./shams');\n\nmodule.exports = function hasNativeSymbols() {\n\tif (typeof origSymbol !== 'function') { return false; }\n\tif (typeof Symbol !== 'function') { return false; }\n\tif (typeof origSymbol('foo') !== 'symbol') { return false; }\n\tif (typeof Symbol('bar') !== 'symbol') { return false; }\n\n\treturn hasSymbolSham();\n};\n","'use strict';\n\n/* eslint complexity: [2, 18], max-statements: [2, 33] */\nmodule.exports = function hasSymbols() {\n\tif (typeof Symbol !== 'function' || typeof Object.getOwnPropertySymbols !== 'function') { return false; }\n\tif (typeof Symbol.iterator === 'symbol') { return true; }\n\n\tvar obj = {};\n\tvar sym = Symbol('test');\n\tvar symObj = Object(sym);\n\tif (typeof sym === 'string') { return false; }\n\n\tif (Object.prototype.toString.call(sym) !== '[object Symbol]') { return false; }\n\tif (Object.prototype.toString.call(symObj) !== '[object Symbol]') { return false; }\n\n\t// temp disabled per https://github.com/ljharb/object.assign/issues/17\n\t// if (sym instanceof Symbol) { return false; }\n\t// temp disabled per https://github.com/WebReflection/get-own-property-symbols/issues/4\n\t// if (!(symObj instanceof Symbol)) { return false; }\n\n\t// if (typeof Symbol.prototype.toString !== 'function') { return false; }\n\t// if (String(sym) !== Symbol.prototype.toString.call(sym)) { return false; }\n\n\tvar symVal = 42;\n\tobj[sym] = symVal;\n\tfor (sym in obj) { return false; } // eslint-disable-line no-restricted-syntax, no-unreachable-loop\n\tif (typeof Object.keys === 'function' && Object.keys(obj).length !== 0) { return false; }\n\n\tif (typeof Object.getOwnPropertyNames === 'function' && Object.getOwnPropertyNames(obj).length !== 0) { return false; }\n\n\tvar syms = Object.getOwnPropertySymbols(obj);\n\tif (syms.length !== 1 || syms[0] !== sym) { return false; }\n\n\tif (!Object.prototype.propertyIsEnumerable.call(obj, sym)) { return false; }\n\n\tif (typeof Object.getOwnPropertyDescriptor === 'function') {\n\t\tvar descriptor = Object.getOwnPropertyDescriptor(obj, sym);\n\t\tif (descriptor.value !== symVal || descriptor.enumerable !== true) { return false; }\n\t}\n\n\treturn true;\n};\n","'use strict';\n\nvar hasSymbols = require('has-symbols/shams');\n\nmodule.exports = function hasToStringTagShams() {\n\treturn hasSymbols() && !!Symbol.toStringTag;\n};\n","'use strict';\n\nvar bind = require('function-bind');\n\nmodule.exports = bind.call(Function.call, Object.prototype.hasOwnProperty);\n","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      ctor.prototype = Object.create(superCtor.prototype, {\n        constructor: {\n          value: ctor,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      })\n    }\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      var TempCtor = function () {}\n      TempCtor.prototype = superCtor.prototype\n      ctor.prototype = new TempCtor()\n      ctor.prototype.constructor = ctor\n    }\n  }\n}\n","'use strict';\n\nvar hasToStringTag = require('has-tostringtag/shams')();\nvar callBound = require('call-bind/callBound');\n\nvar $toString = callBound('Object.prototype.toString');\n\nvar isStandardArguments = function isArguments(value) {\n\tif (hasToStringTag && value && typeof value === 'object' && Symbol.toStringTag in value) {\n\t\treturn false;\n\t}\n\treturn $toString(value) === '[object Arguments]';\n};\n\nvar isLegacyArguments = function isArguments(value) {\n\tif (isStandardArguments(value)) {\n\t\treturn true;\n\t}\n\treturn value !== null &&\n\t\ttypeof value === 'object' &&\n\t\ttypeof value.length === 'number' &&\n\t\tvalue.length >= 0 &&\n\t\t$toString(value) !== '[object Array]' &&\n\t\t$toString(value.callee) === '[object Function]';\n};\n\nvar supportsStandardArguments = (function () {\n\treturn isStandardArguments(arguments);\n}());\n\nisStandardArguments.isLegacyArguments = isLegacyArguments; // for tests\n\nmodule.exports = supportsStandardArguments ? isStandardArguments : isLegacyArguments;\n","'use strict';\n\nvar fnToStr = Function.prototype.toString;\nvar reflectApply = typeof Reflect === 'object' && Reflect !== null && Reflect.apply;\nvar badArrayLike;\nvar isCallableMarker;\nif (typeof reflectApply === 'function' && typeof Object.defineProperty === 'function') {\n\ttry {\n\t\tbadArrayLike = Object.defineProperty({}, 'length', {\n\t\t\tget: function () {\n\t\t\t\tthrow isCallableMarker;\n\t\t\t}\n\t\t});\n\t\tisCallableMarker = {};\n\t\t// eslint-disable-next-line no-throw-literal\n\t\treflectApply(function () { throw 42; }, null, badArrayLike);\n\t} catch (_) {\n\t\tif (_ !== isCallableMarker) {\n\t\t\treflectApply = null;\n\t\t}\n\t}\n} else {\n\treflectApply = null;\n}\n\nvar constructorRegex = /^\\s*class\\b/;\nvar isES6ClassFn = function isES6ClassFunction(value) {\n\ttry {\n\t\tvar fnStr = fnToStr.call(value);\n\t\treturn constructorRegex.test(fnStr);\n\t} catch (e) {\n\t\treturn false; // not a function\n\t}\n};\n\nvar tryFunctionObject = function tryFunctionToStr(value) {\n\ttry {\n\t\tif (isES6ClassFn(value)) { return false; }\n\t\tfnToStr.call(value);\n\t\treturn true;\n\t} catch (e) {\n\t\treturn false;\n\t}\n};\nvar toStr = Object.prototype.toString;\nvar objectClass = '[object Object]';\nvar fnClass = '[object Function]';\nvar genClass = '[object GeneratorFunction]';\nvar ddaClass = '[object HTMLAllCollection]'; // IE 11\nvar ddaClass2 = '[object HTML document.all class]';\nvar ddaClass3 = '[object HTMLCollection]'; // IE 9-10\nvar hasToStringTag = typeof Symbol === 'function' && !!Symbol.toStringTag; // better: use `has-tostringtag`\n\nvar isIE68 = !(0 in [,]); // eslint-disable-line no-sparse-arrays, comma-spacing\n\nvar isDDA = function isDocumentDotAll() { return false; };\nif (typeof document === 'object') {\n\t// Firefox 3 canonicalizes DDA to undefined when it's not accessed directly\n\tvar all = document.all;\n\tif (toStr.call(all) === toStr.call(document.all)) {\n\t\tisDDA = function isDocumentDotAll(value) {\n\t\t\t/* globals document: false */\n\t\t\t// in IE 6-8, typeof document.all is \"object\" and it's truthy\n\t\t\tif ((isIE68 || !value) && (typeof value === 'undefined' || typeof value === 'object')) {\n\t\t\t\ttry {\n\t\t\t\t\tvar str = toStr.call(value);\n\t\t\t\t\treturn (\n\t\t\t\t\t\tstr === ddaClass\n\t\t\t\t\t\t|| str === ddaClass2\n\t\t\t\t\t\t|| str === ddaClass3 // opera 12.16\n\t\t\t\t\t\t|| str === objectClass // IE 6-8\n\t\t\t\t\t) && value('') == null; // eslint-disable-line eqeqeq\n\t\t\t\t} catch (e) { /**/ }\n\t\t\t}\n\t\t\treturn false;\n\t\t};\n\t}\n}\n\nmodule.exports = reflectApply\n\t? function isCallable(value) {\n\t\tif (isDDA(value)) { return true; }\n\t\tif (!value) { return false; }\n\t\tif (typeof value !== 'function' && typeof value !== 'object') { return false; }\n\t\ttry {\n\t\t\treflectApply(value, null, badArrayLike);\n\t\t} catch (e) {\n\t\t\tif (e !== isCallableMarker) { return false; }\n\t\t}\n\t\treturn !isES6ClassFn(value) && tryFunctionObject(value);\n\t}\n\t: function isCallable(value) {\n\t\tif (isDDA(value)) { return true; }\n\t\tif (!value) { return false; }\n\t\tif (typeof value !== 'function' && typeof value !== 'object') { return false; }\n\t\tif (hasToStringTag) { return tryFunctionObject(value); }\n\t\tif (isES6ClassFn(value)) { return false; }\n\t\tvar strClass = toStr.call(value);\n\t\tif (strClass !== fnClass && strClass !== genClass && !(/^\\[object HTML/).test(strClass)) { return false; }\n\t\treturn tryFunctionObject(value);\n\t};\n","'use strict';\n\nvar toStr = Object.prototype.toString;\nvar fnToStr = Function.prototype.toString;\nvar isFnRegex = /^\\s*(?:function)?\\*/;\nvar hasToStringTag = require('has-tostringtag/shams')();\nvar getProto = Object.getPrototypeOf;\nvar getGeneratorFunc = function () { // eslint-disable-line consistent-return\n\tif (!hasToStringTag) {\n\t\treturn false;\n\t}\n\ttry {\n\t\treturn Function('return function*() {}')();\n\t} catch (e) {\n\t}\n};\nvar GeneratorFunction;\n\nmodule.exports = function isGeneratorFunction(fn) {\n\tif (typeof fn !== 'function') {\n\t\treturn false;\n\t}\n\tif (isFnRegex.test(fnToStr.call(fn))) {\n\t\treturn true;\n\t}\n\tif (!hasToStringTag) {\n\t\tvar str = toStr.call(fn);\n\t\treturn str === '[object GeneratorFunction]';\n\t}\n\tif (!getProto) {\n\t\treturn false;\n\t}\n\tif (typeof GeneratorFunction === 'undefined') {\n\t\tvar generatorFunc = getGeneratorFunc();\n\t\tGeneratorFunction = generatorFunc ? getProto(generatorFunc) : false;\n\t}\n\treturn getProto(fn) === GeneratorFunction;\n};\n","'use strict';\n\n/* http://www.ecma-international.org/ecma-262/6.0/#sec-number.isnan */\n\nmodule.exports = function isNaN(value) {\n\treturn value !== value;\n};\n","'use strict';\n\nvar callBind = require('call-bind');\nvar define = require('define-properties');\n\nvar implementation = require('./implementation');\nvar getPolyfill = require('./polyfill');\nvar shim = require('./shim');\n\nvar polyfill = callBind(getPolyfill(), Number);\n\n/* http://www.ecma-international.org/ecma-262/6.0/#sec-number.isnan */\n\ndefine(polyfill, {\n\tgetPolyfill: getPolyfill,\n\timplementation: implementation,\n\tshim: shim\n});\n\nmodule.exports = polyfill;\n","'use strict';\n\nvar implementation = require('./implementation');\n\nmodule.exports = function getPolyfill() {\n\tif (Number.isNaN && Number.isNaN(NaN) && !Number.isNaN('a')) {\n\t\treturn Number.isNaN;\n\t}\n\treturn implementation;\n};\n","'use strict';\n\nvar define = require('define-properties');\nvar getPolyfill = require('./polyfill');\n\n/* http://www.ecma-international.org/ecma-262/6.0/#sec-number.isnan */\n\nmodule.exports = function shimNumberIsNaN() {\n\tvar polyfill = getPolyfill();\n\tdefine(Number, { isNaN: polyfill }, {\n\t\tisNaN: function testIsNaN() {\n\t\t\treturn Number.isNaN !== polyfill;\n\t\t}\n\t});\n\treturn polyfill;\n};\n","'use strict';\n\nvar forEach = require('for-each');\nvar availableTypedArrays = require('available-typed-arrays');\nvar callBound = require('call-bind/callBound');\n\nvar $toString = callBound('Object.prototype.toString');\nvar hasToStringTag = require('has-tostringtag/shams')();\nvar gOPD = require('gopd');\n\nvar g = typeof globalThis === 'undefined' ? global : globalThis;\nvar typedArrays = availableTypedArrays();\n\nvar $indexOf = callBound('Array.prototype.indexOf', true) || function indexOf(array, value) {\n\tfor (var i = 0; i < array.length; i += 1) {\n\t\tif (array[i] === value) {\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1;\n};\nvar $slice = callBound('String.prototype.slice');\nvar toStrTags = {};\nvar getPrototypeOf = Object.getPrototypeOf; // require('getprototypeof');\nif (hasToStringTag && gOPD && getPrototypeOf) {\n\tforEach(typedArrays, function (typedArray) {\n\t\tvar arr = new g[typedArray]();\n\t\tif (Symbol.toStringTag in arr) {\n\t\t\tvar proto = getPrototypeOf(arr);\n\t\t\tvar descriptor = gOPD(proto, Symbol.toStringTag);\n\t\t\tif (!descriptor) {\n\t\t\t\tvar superProto = getPrototypeOf(proto);\n\t\t\t\tdescriptor = gOPD(superProto, Symbol.toStringTag);\n\t\t\t}\n\t\t\ttoStrTags[typedArray] = descriptor.get;\n\t\t}\n\t});\n}\n\nvar tryTypedArrays = function tryAllTypedArrays(value) {\n\tvar anyTrue = false;\n\tforEach(toStrTags, function (getter, typedArray) {\n\t\tif (!anyTrue) {\n\t\t\ttry {\n\t\t\t\tanyTrue = getter.call(value) === typedArray;\n\t\t\t} catch (e) { /**/ }\n\t\t}\n\t});\n\treturn anyTrue;\n};\n\nmodule.exports = function isTypedArray(value) {\n\tif (!value || typeof value !== 'object') { return false; }\n\tif (!hasToStringTag || !(Symbol.toStringTag in value)) {\n\t\tvar tag = $slice($toString(value), 8, -1);\n\t\treturn $indexOf(typedArrays, tag) > -1;\n\t}\n\tif (!gOPD) { return false; }\n\treturn tryTypedArrays(value);\n};\n","'use strict';\n\nvar numberIsNaN = function (value) {\n\treturn value !== value;\n};\n\nmodule.exports = function is(a, b) {\n\tif (a === 0 && b === 0) {\n\t\treturn 1 / a === 1 / b;\n\t}\n\tif (a === b) {\n\t\treturn true;\n\t}\n\tif (numberIsNaN(a) && numberIsNaN(b)) {\n\t\treturn true;\n\t}\n\treturn false;\n};\n\n","'use strict';\n\nvar define = require('define-properties');\nvar callBind = require('call-bind');\n\nvar implementation = require('./implementation');\nvar getPolyfill = require('./polyfill');\nvar shim = require('./shim');\n\nvar polyfill = callBind(getPolyfill(), Object);\n\ndefine(polyfill, {\n\tgetPolyfill: getPolyfill,\n\timplementation: implementation,\n\tshim: shim\n});\n\nmodule.exports = polyfill;\n","'use strict';\n\nvar implementation = require('./implementation');\n\nmodule.exports = function getPolyfill() {\n\treturn typeof Object.is === 'function' ? Object.is : implementation;\n};\n","'use strict';\n\nvar getPolyfill = require('./polyfill');\nvar define = require('define-properties');\n\nmodule.exports = function shimObjectIs() {\n\tvar polyfill = getPolyfill();\n\tdefine(Object, { is: polyfill }, {\n\t\tis: function testObjectIs() {\n\t\t\treturn Object.is !== polyfill;\n\t\t}\n\t});\n\treturn polyfill;\n};\n","'use strict';\n\nvar keysShim;\nif (!Object.keys) {\n\t// modified from https://github.com/es-shims/es5-shim\n\tvar has = Object.prototype.hasOwnProperty;\n\tvar toStr = Object.prototype.toString;\n\tvar isArgs = require('./isArguments'); // eslint-disable-line global-require\n\tvar isEnumerable = Object.prototype.propertyIsEnumerable;\n\tvar hasDontEnumBug = !isEnumerable.call({ toString: null }, 'toString');\n\tvar hasProtoEnumBug = isEnumerable.call(function () {}, 'prototype');\n\tvar dontEnums = [\n\t\t'toString',\n\t\t'toLocaleString',\n\t\t'valueOf',\n\t\t'hasOwnProperty',\n\t\t'isPrototypeOf',\n\t\t'propertyIsEnumerable',\n\t\t'constructor'\n\t];\n\tvar equalsConstructorPrototype = function (o) {\n\t\tvar ctor = o.constructor;\n\t\treturn ctor && ctor.prototype === o;\n\t};\n\tvar excludedKeys = {\n\t\t$applicationCache: true,\n\t\t$console: true,\n\t\t$external: true,\n\t\t$frame: true,\n\t\t$frameElement: true,\n\t\t$frames: true,\n\t\t$innerHeight: true,\n\t\t$innerWidth: true,\n\t\t$onmozfullscreenchange: true,\n\t\t$onmozfullscreenerror: true,\n\t\t$outerHeight: true,\n\t\t$outerWidth: true,\n\t\t$pageXOffset: true,\n\t\t$pageYOffset: true,\n\t\t$parent: true,\n\t\t$scrollLeft: true,\n\t\t$scrollTop: true,\n\t\t$scrollX: true,\n\t\t$scrollY: true,\n\t\t$self: true,\n\t\t$webkitIndexedDB: true,\n\t\t$webkitStorageInfo: true,\n\t\t$window: true\n\t};\n\tvar hasAutomationEqualityBug = (function () {\n\t\t/* global window */\n\t\tif (typeof window === 'undefined') { return false; }\n\t\tfor (var k in window) {\n\t\t\ttry {\n\t\t\t\tif (!excludedKeys['$' + k] && has.call(window, k) && window[k] !== null && typeof window[k] === 'object') {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tequalsConstructorPrototype(window[k]);\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}());\n\tvar equalsConstructorPrototypeIfNotBuggy = function (o) {\n\t\t/* global window */\n\t\tif (typeof window === 'undefined' || !hasAutomationEqualityBug) {\n\t\t\treturn equalsConstructorPrototype(o);\n\t\t}\n\t\ttry {\n\t\t\treturn equalsConstructorPrototype(o);\n\t\t} catch (e) {\n\t\t\treturn false;\n\t\t}\n\t};\n\n\tkeysShim = function keys(object) {\n\t\tvar isObject = object !== null && typeof object === 'object';\n\t\tvar isFunction = toStr.call(object) === '[object Function]';\n\t\tvar isArguments = isArgs(object);\n\t\tvar isString = isObject && toStr.call(object) === '[object String]';\n\t\tvar theKeys = [];\n\n\t\tif (!isObject && !isFunction && !isArguments) {\n\t\t\tthrow new TypeError('Object.keys called on a non-object');\n\t\t}\n\n\t\tvar skipProto = hasProtoEnumBug && isFunction;\n\t\tif (isString && object.length > 0 && !has.call(object, 0)) {\n\t\t\tfor (var i = 0; i < object.length; ++i) {\n\t\t\t\ttheKeys.push(String(i));\n\t\t\t}\n\t\t}\n\n\t\tif (isArguments && object.length > 0) {\n\t\t\tfor (var j = 0; j < object.length; ++j) {\n\t\t\t\ttheKeys.push(String(j));\n\t\t\t}\n\t\t} else {\n\t\t\tfor (var name in object) {\n\t\t\t\tif (!(skipProto && name === 'prototype') && has.call(object, name)) {\n\t\t\t\t\ttheKeys.push(String(name));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (hasDontEnumBug) {\n\t\t\tvar skipConstructor = equalsConstructorPrototypeIfNotBuggy(object);\n\n\t\t\tfor (var k = 0; k < dontEnums.length; ++k) {\n\t\t\t\tif (!(skipConstructor && dontEnums[k] === 'constructor') && has.call(object, dontEnums[k])) {\n\t\t\t\t\ttheKeys.push(dontEnums[k]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn theKeys;\n\t};\n}\nmodule.exports = keysShim;\n","'use strict';\n\nvar slice = Array.prototype.slice;\nvar isArgs = require('./isArguments');\n\nvar origKeys = Object.keys;\nvar keysShim = origKeys ? function keys(o) { return origKeys(o); } : require('./implementation');\n\nvar originalKeys = Object.keys;\n\nkeysShim.shim = function shimObjectKeys() {\n\tif (Object.keys) {\n\t\tvar keysWorksWithArguments = (function () {\n\t\t\t// Safari 5.0 bug\n\t\t\tvar args = Object.keys(arguments);\n\t\t\treturn args && args.length === arguments.length;\n\t\t}(1, 2));\n\t\tif (!keysWorksWithArguments) {\n\t\t\tObject.keys = function keys(object) { // eslint-disable-line func-name-matching\n\t\t\t\tif (isArgs(object)) {\n\t\t\t\t\treturn originalKeys(slice.call(object));\n\t\t\t\t}\n\t\t\t\treturn originalKeys(object);\n\t\t\t};\n\t\t}\n\t} else {\n\t\tObject.keys = keysShim;\n\t}\n\treturn Object.keys || keysShim;\n};\n\nmodule.exports = keysShim;\n","'use strict';\n\nvar toStr = Object.prototype.toString;\n\nmodule.exports = function isArguments(value) {\n\tvar str = toStr.call(value);\n\tvar isArgs = str === '[object Arguments]';\n\tif (!isArgs) {\n\t\tisArgs = str !== '[object Array]' &&\n\t\t\tvalue !== null &&\n\t\t\ttypeof value === 'object' &&\n\t\t\ttypeof value.length === 'number' &&\n\t\t\tvalue.length >= 0 &&\n\t\t\ttoStr.call(value.callee) === '[object Function]';\n\t}\n\treturn isArgs;\n};\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","module.exports = function isBuffer(arg) {\n  return arg && typeof arg === 'object'\n    && typeof arg.copy === 'function'\n    && typeof arg.fill === 'function'\n    && typeof arg.readUInt8 === 'function';\n}","// Currently in sync with Node.js lib/internal/util/types.js\n// https://github.com/nodejs/node/commit/112cc7c27551254aa2b17098fb774867f05ed0d9\n\n'use strict';\n\nvar isArgumentsObject = require('is-arguments');\nvar isGeneratorFunction = require('is-generator-function');\nvar whichTypedArray = require('which-typed-array');\nvar isTypedArray = require('is-typed-array');\n\nfunction uncurryThis(f) {\n  return f.call.bind(f);\n}\n\nvar BigIntSupported = typeof BigInt !== 'undefined';\nvar SymbolSupported = typeof Symbol !== 'undefined';\n\nvar ObjectToString = uncurryThis(Object.prototype.toString);\n\nvar numberValue = uncurryThis(Number.prototype.valueOf);\nvar stringValue = uncurryThis(String.prototype.valueOf);\nvar booleanValue = uncurryThis(Boolean.prototype.valueOf);\n\nif (BigIntSupported) {\n  var bigIntValue = uncurryThis(BigInt.prototype.valueOf);\n}\n\nif (SymbolSupported) {\n  var symbolValue = uncurryThis(Symbol.prototype.valueOf);\n}\n\nfunction checkBoxedPrimitive(value, prototypeValueOf) {\n  if (typeof value !== 'object') {\n    return false;\n  }\n  try {\n    prototypeValueOf(value);\n    return true;\n  } catch(e) {\n    return false;\n  }\n}\n\nexports.isArgumentsObject = isArgumentsObject;\nexports.isGeneratorFunction = isGeneratorFunction;\nexports.isTypedArray = isTypedArray;\n\n// Taken from here and modified for better browser support\n// https://github.com/sindresorhus/p-is-promise/blob/cda35a513bda03f977ad5cde3a079d237e82d7ef/index.js\nfunction isPromise(input) {\n\treturn (\n\t\t(\n\t\t\ttypeof Promise !== 'undefined' &&\n\t\t\tinput instanceof Promise\n\t\t) ||\n\t\t(\n\t\t\tinput !== null &&\n\t\t\ttypeof input === 'object' &&\n\t\t\ttypeof input.then === 'function' &&\n\t\t\ttypeof input.catch === 'function'\n\t\t)\n\t);\n}\nexports.isPromise = isPromise;\n\nfunction isArrayBufferView(value) {\n  if (typeof ArrayBuffer !== 'undefined' && ArrayBuffer.isView) {\n    return ArrayBuffer.isView(value);\n  }\n\n  return (\n    isTypedArray(value) ||\n    isDataView(value)\n  );\n}\nexports.isArrayBufferView = isArrayBufferView;\n\n\nfunction isUint8Array(value) {\n  return whichTypedArray(value) === 'Uint8Array';\n}\nexports.isUint8Array = isUint8Array;\n\nfunction isUint8ClampedArray(value) {\n  return whichTypedArray(value) === 'Uint8ClampedArray';\n}\nexports.isUint8ClampedArray = isUint8ClampedArray;\n\nfunction isUint16Array(value) {\n  return whichTypedArray(value) === 'Uint16Array';\n}\nexports.isUint16Array = isUint16Array;\n\nfunction isUint32Array(value) {\n  return whichTypedArray(value) === 'Uint32Array';\n}\nexports.isUint32Array = isUint32Array;\n\nfunction isInt8Array(value) {\n  return whichTypedArray(value) === 'Int8Array';\n}\nexports.isInt8Array = isInt8Array;\n\nfunction isInt16Array(value) {\n  return whichTypedArray(value) === 'Int16Array';\n}\nexports.isInt16Array = isInt16Array;\n\nfunction isInt32Array(value) {\n  return whichTypedArray(value) === 'Int32Array';\n}\nexports.isInt32Array = isInt32Array;\n\nfunction isFloat32Array(value) {\n  return whichTypedArray(value) === 'Float32Array';\n}\nexports.isFloat32Array = isFloat32Array;\n\nfunction isFloat64Array(value) {\n  return whichTypedArray(value) === 'Float64Array';\n}\nexports.isFloat64Array = isFloat64Array;\n\nfunction isBigInt64Array(value) {\n  return whichTypedArray(value) === 'BigInt64Array';\n}\nexports.isBigInt64Array = isBigInt64Array;\n\nfunction isBigUint64Array(value) {\n  return whichTypedArray(value) === 'BigUint64Array';\n}\nexports.isBigUint64Array = isBigUint64Array;\n\nfunction isMapToString(value) {\n  return ObjectToString(value) === '[object Map]';\n}\nisMapToString.working = (\n  typeof Map !== 'undefined' &&\n  isMapToString(new Map())\n);\n\nfunction isMap(value) {\n  if (typeof Map === 'undefined') {\n    return false;\n  }\n\n  return isMapToString.working\n    ? isMapToString(value)\n    : value instanceof Map;\n}\nexports.isMap = isMap;\n\nfunction isSetToString(value) {\n  return ObjectToString(value) === '[object Set]';\n}\nisSetToString.working = (\n  typeof Set !== 'undefined' &&\n  isSetToString(new Set())\n);\nfunction isSet(value) {\n  if (typeof Set === 'undefined') {\n    return false;\n  }\n\n  return isSetToString.working\n    ? isSetToString(value)\n    : value instanceof Set;\n}\nexports.isSet = isSet;\n\nfunction isWeakMapToString(value) {\n  return ObjectToString(value) === '[object WeakMap]';\n}\nisWeakMapToString.working = (\n  typeof WeakMap !== 'undefined' &&\n  isWeakMapToString(new WeakMap())\n);\nfunction isWeakMap(value) {\n  if (typeof WeakMap === 'undefined') {\n    return false;\n  }\n\n  return isWeakMapToString.working\n    ? isWeakMapToString(value)\n    : value instanceof WeakMap;\n}\nexports.isWeakMap = isWeakMap;\n\nfunction isWeakSetToString(value) {\n  return ObjectToString(value) === '[object WeakSet]';\n}\nisWeakSetToString.working = (\n  typeof WeakSet !== 'undefined' &&\n  isWeakSetToString(new WeakSet())\n);\nfunction isWeakSet(value) {\n  return isWeakSetToString(value);\n}\nexports.isWeakSet = isWeakSet;\n\nfunction isArrayBufferToString(value) {\n  return ObjectToString(value) === '[object ArrayBuffer]';\n}\nisArrayBufferToString.working = (\n  typeof ArrayBuffer !== 'undefined' &&\n  isArrayBufferToString(new ArrayBuffer())\n);\nfunction isArrayBuffer(value) {\n  if (typeof ArrayBuffer === 'undefined') {\n    return false;\n  }\n\n  return isArrayBufferToString.working\n    ? isArrayBufferToString(value)\n    : value instanceof ArrayBuffer;\n}\nexports.isArrayBuffer = isArrayBuffer;\n\nfunction isDataViewToString(value) {\n  return ObjectToString(value) === '[object DataView]';\n}\nisDataViewToString.working = (\n  typeof ArrayBuffer !== 'undefined' &&\n  typeof DataView !== 'undefined' &&\n  isDataViewToString(new DataView(new ArrayBuffer(1), 0, 1))\n);\nfunction isDataView(value) {\n  if (typeof DataView === 'undefined') {\n    return false;\n  }\n\n  return isDataViewToString.working\n    ? isDataViewToString(value)\n    : value instanceof DataView;\n}\nexports.isDataView = isDataView;\n\n// Store a copy of SharedArrayBuffer in case it's deleted elsewhere\nvar SharedArrayBufferCopy = typeof SharedArrayBuffer !== 'undefined' ? SharedArrayBuffer : undefined;\nfunction isSharedArrayBufferToString(value) {\n  return ObjectToString(value) === '[object SharedArrayBuffer]';\n}\nfunction isSharedArrayBuffer(value) {\n  if (typeof SharedArrayBufferCopy === 'undefined') {\n    return false;\n  }\n\n  if (typeof isSharedArrayBufferToString.working === 'undefined') {\n    isSharedArrayBufferToString.working = isSharedArrayBufferToString(new SharedArrayBufferCopy());\n  }\n\n  return isSharedArrayBufferToString.working\n    ? isSharedArrayBufferToString(value)\n    : value instanceof SharedArrayBufferCopy;\n}\nexports.isSharedArrayBuffer = isSharedArrayBuffer;\n\nfunction isAsyncFunction(value) {\n  return ObjectToString(value) === '[object AsyncFunction]';\n}\nexports.isAsyncFunction = isAsyncFunction;\n\nfunction isMapIterator(value) {\n  return ObjectToString(value) === '[object Map Iterator]';\n}\nexports.isMapIterator = isMapIterator;\n\nfunction isSetIterator(value) {\n  return ObjectToString(value) === '[object Set Iterator]';\n}\nexports.isSetIterator = isSetIterator;\n\nfunction isGeneratorObject(value) {\n  return ObjectToString(value) === '[object Generator]';\n}\nexports.isGeneratorObject = isGeneratorObject;\n\nfunction isWebAssemblyCompiledModule(value) {\n  return ObjectToString(value) === '[object WebAssembly.Module]';\n}\nexports.isWebAssemblyCompiledModule = isWebAssemblyCompiledModule;\n\nfunction isNumberObject(value) {\n  return checkBoxedPrimitive(value, numberValue);\n}\nexports.isNumberObject = isNumberObject;\n\nfunction isStringObject(value) {\n  return checkBoxedPrimitive(value, stringValue);\n}\nexports.isStringObject = isStringObject;\n\nfunction isBooleanObject(value) {\n  return checkBoxedPrimitive(value, booleanValue);\n}\nexports.isBooleanObject = isBooleanObject;\n\nfunction isBigIntObject(value) {\n  return BigIntSupported && checkBoxedPrimitive(value, bigIntValue);\n}\nexports.isBigIntObject = isBigIntObject;\n\nfunction isSymbolObject(value) {\n  return SymbolSupported && checkBoxedPrimitive(value, symbolValue);\n}\nexports.isSymbolObject = isSymbolObject;\n\nfunction isBoxedPrimitive(value) {\n  return (\n    isNumberObject(value) ||\n    isStringObject(value) ||\n    isBooleanObject(value) ||\n    isBigIntObject(value) ||\n    isSymbolObject(value)\n  );\n}\nexports.isBoxedPrimitive = isBoxedPrimitive;\n\nfunction isAnyArrayBuffer(value) {\n  return typeof Uint8Array !== 'undefined' && (\n    isArrayBuffer(value) ||\n    isSharedArrayBuffer(value)\n  );\n}\nexports.isAnyArrayBuffer = isAnyArrayBuffer;\n\n['isProxy', 'isExternal', 'isModuleNamespaceObject'].forEach(function(method) {\n  Object.defineProperty(exports, method, {\n    enumerable: false,\n    value: function() {\n      throw new Error(method + ' is not supported in userland');\n    }\n  });\n});\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar getOwnPropertyDescriptors = Object.getOwnPropertyDescriptors ||\n  function getOwnPropertyDescriptors(obj) {\n    var keys = Object.keys(obj);\n    var descriptors = {};\n    for (var i = 0; i < keys.length; i++) {\n      descriptors[keys[i]] = Object.getOwnPropertyDescriptor(obj, keys[i]);\n    }\n    return descriptors;\n  };\n\nvar formatRegExp = /%[sdj%]/g;\nexports.format = function(f) {\n  if (!isString(f)) {\n    var objects = [];\n    for (var i = 0; i < arguments.length; i++) {\n      objects.push(inspect(arguments[i]));\n    }\n    return objects.join(' ');\n  }\n\n  var i = 1;\n  var args = arguments;\n  var len = args.length;\n  var str = String(f).replace(formatRegExp, function(x) {\n    if (x === '%%') return '%';\n    if (i >= len) return x;\n    switch (x) {\n      case '%s': return String(args[i++]);\n      case '%d': return Number(args[i++]);\n      case '%j':\n        try {\n          return JSON.stringify(args[i++]);\n        } catch (_) {\n          return '[Circular]';\n        }\n      default:\n        return x;\n    }\n  });\n  for (var x = args[i]; i < len; x = args[++i]) {\n    if (isNull(x) || !isObject(x)) {\n      str += ' ' + x;\n    } else {\n      str += ' ' + inspect(x);\n    }\n  }\n  return str;\n};\n\n\n// Mark that a method should not be used.\n// Returns a modified function which warns once by default.\n// If --no-deprecation is set, then it is a no-op.\nexports.deprecate = function(fn, msg) {\n  if (typeof process !== 'undefined' && process.noDeprecation === true) {\n    return fn;\n  }\n\n  // Allow for deprecating things in the process of starting up.\n  if (typeof process === 'undefined') {\n    return function() {\n      return exports.deprecate(fn, msg).apply(this, arguments);\n    };\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (process.throwDeprecation) {\n        throw new Error(msg);\n      } else if (process.traceDeprecation) {\n        console.trace(msg);\n      } else {\n        console.error(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n};\n\n\nvar debugs = {};\nvar debugEnvRegex = /^$/;\n\nif (process.env.NODE_DEBUG) {\n  var debugEnv = process.env.NODE_DEBUG;\n  debugEnv = debugEnv.replace(/[|\\\\{}()[\\]^$+?.]/g, '\\\\$&')\n    .replace(/\\*/g, '.*')\n    .replace(/,/g, '$|^')\n    .toUpperCase();\n  debugEnvRegex = new RegExp('^' + debugEnv + '$', 'i');\n}\nexports.debuglog = function(set) {\n  set = set.toUpperCase();\n  if (!debugs[set]) {\n    if (debugEnvRegex.test(set)) {\n      var pid = process.pid;\n      debugs[set] = function() {\n        var msg = exports.format.apply(exports, arguments);\n        console.error('%s %d: %s', set, pid, msg);\n      };\n    } else {\n      debugs[set] = function() {};\n    }\n  }\n  return debugs[set];\n};\n\n\n/**\n * Echos the value of a value. Trys to print the value out\n * in the best way possible given the different types.\n *\n * @param {Object} obj The object to print out.\n * @param {Object} opts Optional options object that alters the output.\n */\n/* legacy: obj, showHidden, depth, colors*/\nfunction inspect(obj, opts) {\n  // default options\n  var ctx = {\n    seen: [],\n    stylize: stylizeNoColor\n  };\n  // legacy...\n  if (arguments.length >= 3) ctx.depth = arguments[2];\n  if (arguments.length >= 4) ctx.colors = arguments[3];\n  if (isBoolean(opts)) {\n    // legacy...\n    ctx.showHidden = opts;\n  } else if (opts) {\n    // got an \"options\" object\n    exports._extend(ctx, opts);\n  }\n  // set default options\n  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;\n  if (isUndefined(ctx.depth)) ctx.depth = 2;\n  if (isUndefined(ctx.colors)) ctx.colors = false;\n  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;\n  if (ctx.colors) ctx.stylize = stylizeWithColor;\n  return formatValue(ctx, obj, ctx.depth);\n}\nexports.inspect = inspect;\n\n\n// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics\ninspect.colors = {\n  'bold' : [1, 22],\n  'italic' : [3, 23],\n  'underline' : [4, 24],\n  'inverse' : [7, 27],\n  'white' : [37, 39],\n  'grey' : [90, 39],\n  'black' : [30, 39],\n  'blue' : [34, 39],\n  'cyan' : [36, 39],\n  'green' : [32, 39],\n  'magenta' : [35, 39],\n  'red' : [31, 39],\n  'yellow' : [33, 39]\n};\n\n// Don't use 'blue' not visible on cmd.exe\ninspect.styles = {\n  'special': 'cyan',\n  'number': 'yellow',\n  'boolean': 'yellow',\n  'undefined': 'grey',\n  'null': 'bold',\n  'string': 'green',\n  'date': 'magenta',\n  // \"name\": intentionally not styling\n  'regexp': 'red'\n};\n\n\nfunction stylizeWithColor(str, styleType) {\n  var style = inspect.styles[styleType];\n\n  if (style) {\n    return '\\u001b[' + inspect.colors[style][0] + 'm' + str +\n           '\\u001b[' + inspect.colors[style][1] + 'm';\n  } else {\n    return str;\n  }\n}\n\n\nfunction stylizeNoColor(str, styleType) {\n  return str;\n}\n\n\nfunction arrayToHash(array) {\n  var hash = {};\n\n  array.forEach(function(val, idx) {\n    hash[val] = true;\n  });\n\n  return hash;\n}\n\n\nfunction formatValue(ctx, value, recurseTimes) {\n  // Provide a hook for user-specified inspect functions.\n  // Check that value is an object with an inspect function on it\n  if (ctx.customInspect &&\n      value &&\n      isFunction(value.inspect) &&\n      // Filter out the util module, it's inspect function is special\n      value.inspect !== exports.inspect &&\n      // Also filter out any prototype objects using the circular check.\n      !(value.constructor && value.constructor.prototype === value)) {\n    var ret = value.inspect(recurseTimes, ctx);\n    if (!isString(ret)) {\n      ret = formatValue(ctx, ret, recurseTimes);\n    }\n    return ret;\n  }\n\n  // Primitive types cannot have properties\n  var primitive = formatPrimitive(ctx, value);\n  if (primitive) {\n    return primitive;\n  }\n\n  // Look up the keys of the object.\n  var keys = Object.keys(value);\n  var visibleKeys = arrayToHash(keys);\n\n  if (ctx.showHidden) {\n    keys = Object.getOwnPropertyNames(value);\n  }\n\n  // IE doesn't make error fields non-enumerable\n  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx\n  if (isError(value)\n      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {\n    return formatError(value);\n  }\n\n  // Some type of object without properties can be shortcutted.\n  if (keys.length === 0) {\n    if (isFunction(value)) {\n      var name = value.name ? ': ' + value.name : '';\n      return ctx.stylize('[Function' + name + ']', 'special');\n    }\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    }\n    if (isDate(value)) {\n      return ctx.stylize(Date.prototype.toString.call(value), 'date');\n    }\n    if (isError(value)) {\n      return formatError(value);\n    }\n  }\n\n  var base = '', array = false, braces = ['{', '}'];\n\n  // Make Array say that they are Array\n  if (isArray(value)) {\n    array = true;\n    braces = ['[', ']'];\n  }\n\n  // Make functions say that they are functions\n  if (isFunction(value)) {\n    var n = value.name ? ': ' + value.name : '';\n    base = ' [Function' + n + ']';\n  }\n\n  // Make RegExps say that they are RegExps\n  if (isRegExp(value)) {\n    base = ' ' + RegExp.prototype.toString.call(value);\n  }\n\n  // Make dates with properties first say the date\n  if (isDate(value)) {\n    base = ' ' + Date.prototype.toUTCString.call(value);\n  }\n\n  // Make error with message first say the error\n  if (isError(value)) {\n    base = ' ' + formatError(value);\n  }\n\n  if (keys.length === 0 && (!array || value.length == 0)) {\n    return braces[0] + base + braces[1];\n  }\n\n  if (recurseTimes < 0) {\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    } else {\n      return ctx.stylize('[Object]', 'special');\n    }\n  }\n\n  ctx.seen.push(value);\n\n  var output;\n  if (array) {\n    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);\n  } else {\n    output = keys.map(function(key) {\n      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);\n    });\n  }\n\n  ctx.seen.pop();\n\n  return reduceToSingleString(output, base, braces);\n}\n\n\nfunction formatPrimitive(ctx, value) {\n  if (isUndefined(value))\n    return ctx.stylize('undefined', 'undefined');\n  if (isString(value)) {\n    var simple = '\\'' + JSON.stringify(value).replace(/^\"|\"$/g, '')\n                                             .replace(/'/g, \"\\\\'\")\n                                             .replace(/\\\\\"/g, '\"') + '\\'';\n    return ctx.stylize(simple, 'string');\n  }\n  if (isNumber(value))\n    return ctx.stylize('' + value, 'number');\n  if (isBoolean(value))\n    return ctx.stylize('' + value, 'boolean');\n  // For some reason typeof null is \"object\", so special case here.\n  if (isNull(value))\n    return ctx.stylize('null', 'null');\n}\n\n\nfunction formatError(value) {\n  return '[' + Error.prototype.toString.call(value) + ']';\n}\n\n\nfunction formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\n  var output = [];\n  for (var i = 0, l = value.length; i < l; ++i) {\n    if (hasOwnProperty(value, String(i))) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          String(i), true));\n    } else {\n      output.push('');\n    }\n  }\n  keys.forEach(function(key) {\n    if (!key.match(/^\\d+$/)) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          key, true));\n    }\n  });\n  return output;\n}\n\n\nfunction formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\n  var name, str, desc;\n  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };\n  if (desc.get) {\n    if (desc.set) {\n      str = ctx.stylize('[Getter/Setter]', 'special');\n    } else {\n      str = ctx.stylize('[Getter]', 'special');\n    }\n  } else {\n    if (desc.set) {\n      str = ctx.stylize('[Setter]', 'special');\n    }\n  }\n  if (!hasOwnProperty(visibleKeys, key)) {\n    name = '[' + key + ']';\n  }\n  if (!str) {\n    if (ctx.seen.indexOf(desc.value) < 0) {\n      if (isNull(recurseTimes)) {\n        str = formatValue(ctx, desc.value, null);\n      } else {\n        str = formatValue(ctx, desc.value, recurseTimes - 1);\n      }\n      if (str.indexOf('\\n') > -1) {\n        if (array) {\n          str = str.split('\\n').map(function(line) {\n            return '  ' + line;\n          }).join('\\n').slice(2);\n        } else {\n          str = '\\n' + str.split('\\n').map(function(line) {\n            return '   ' + line;\n          }).join('\\n');\n        }\n      }\n    } else {\n      str = ctx.stylize('[Circular]', 'special');\n    }\n  }\n  if (isUndefined(name)) {\n    if (array && key.match(/^\\d+$/)) {\n      return str;\n    }\n    name = JSON.stringify('' + key);\n    if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n      name = name.slice(1, -1);\n      name = ctx.stylize(name, 'name');\n    } else {\n      name = name.replace(/'/g, \"\\\\'\")\n                 .replace(/\\\\\"/g, '\"')\n                 .replace(/(^\"|\"$)/g, \"'\");\n      name = ctx.stylize(name, 'string');\n    }\n  }\n\n  return name + ': ' + str;\n}\n\n\nfunction reduceToSingleString(output, base, braces) {\n  var numLinesEst = 0;\n  var length = output.reduce(function(prev, cur) {\n    numLinesEst++;\n    if (cur.indexOf('\\n') >= 0) numLinesEst++;\n    return prev + cur.replace(/\\u001b\\[\\d\\d?m/g, '').length + 1;\n  }, 0);\n\n  if (length > 60) {\n    return braces[0] +\n           (base === '' ? '' : base + '\\n ') +\n           ' ' +\n           output.join(',\\n  ') +\n           ' ' +\n           braces[1];\n  }\n\n  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\n}\n\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\nexports.types = require('./support/types');\n\nfunction isArray(ar) {\n  return Array.isArray(ar);\n}\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return isObject(re) && objectToString(re) === '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\nexports.types.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return isObject(d) && objectToString(d) === '[object Date]';\n}\nexports.isDate = isDate;\nexports.types.isDate = isDate;\n\nfunction isError(e) {\n  return isObject(e) &&\n      (objectToString(e) === '[object Error]' || e instanceof Error);\n}\nexports.isError = isError;\nexports.types.isNativeError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\nexports.isPrimitive = isPrimitive;\n\nexports.isBuffer = require('./support/isBuffer');\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n\n\nfunction pad(n) {\n  return n < 10 ? '0' + n.toString(10) : n.toString(10);\n}\n\n\nvar months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',\n              'Oct', 'Nov', 'Dec'];\n\n// 26 Feb 16:19:34\nfunction timestamp() {\n  var d = new Date();\n  var time = [pad(d.getHours()),\n              pad(d.getMinutes()),\n              pad(d.getSeconds())].join(':');\n  return [d.getDate(), months[d.getMonth()], time].join(' ');\n}\n\n\n// log is just a thin wrapper to console.log that prepends a timestamp\nexports.log = function() {\n  console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));\n};\n\n\n/**\n * Inherit the prototype methods from one constructor into another.\n *\n * The Function.prototype.inherits from lang.js rewritten as a standalone\n * function (not on Function.prototype). NOTE: If this file is to be loaded\n * during bootstrapping this function needs to be rewritten using some native\n * functions as prototype setup using normal JavaScript does not work as\n * expected during bootstrapping (see mirror.js in r114903).\n *\n * @param {function} ctor Constructor function which needs to inherit the\n *     prototype.\n * @param {function} superCtor Constructor function to inherit prototype from.\n */\nexports.inherits = require('inherits');\n\nexports._extend = function(origin, add) {\n  // Don't do anything if add isn't an object\n  if (!add || !isObject(add)) return origin;\n\n  var keys = Object.keys(add);\n  var i = keys.length;\n  while (i--) {\n    origin[keys[i]] = add[keys[i]];\n  }\n  return origin;\n};\n\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nvar kCustomPromisifiedSymbol = typeof Symbol !== 'undefined' ? Symbol('util.promisify.custom') : undefined;\n\nexports.promisify = function promisify(original) {\n  if (typeof original !== 'function')\n    throw new TypeError('The \"original\" argument must be of type Function');\n\n  if (kCustomPromisifiedSymbol && original[kCustomPromisifiedSymbol]) {\n    var fn = original[kCustomPromisifiedSymbol];\n    if (typeof fn !== 'function') {\n      throw new TypeError('The \"util.promisify.custom\" argument must be of type Function');\n    }\n    Object.defineProperty(fn, kCustomPromisifiedSymbol, {\n      value: fn, enumerable: false, writable: false, configurable: true\n    });\n    return fn;\n  }\n\n  function fn() {\n    var promiseResolve, promiseReject;\n    var promise = new Promise(function (resolve, reject) {\n      promiseResolve = resolve;\n      promiseReject = reject;\n    });\n\n    var args = [];\n    for (var i = 0; i < arguments.length; i++) {\n      args.push(arguments[i]);\n    }\n    args.push(function (err, value) {\n      if (err) {\n        promiseReject(err);\n      } else {\n        promiseResolve(value);\n      }\n    });\n\n    try {\n      original.apply(this, args);\n    } catch (err) {\n      promiseReject(err);\n    }\n\n    return promise;\n  }\n\n  Object.setPrototypeOf(fn, Object.getPrototypeOf(original));\n\n  if (kCustomPromisifiedSymbol) Object.defineProperty(fn, kCustomPromisifiedSymbol, {\n    value: fn, enumerable: false, writable: false, configurable: true\n  });\n  return Object.defineProperties(\n    fn,\n    getOwnPropertyDescriptors(original)\n  );\n}\n\nexports.promisify.custom = kCustomPromisifiedSymbol\n\nfunction callbackifyOnRejected(reason, cb) {\n  // `!reason` guard inspired by bluebird (Ref: https://goo.gl/t5IS6M).\n  // Because `null` is a special error value in callbacks which means \"no error\n  // occurred\", we error-wrap so the callback consumer can distinguish between\n  // \"the promise rejected with null\" or \"the promise fulfilled with undefined\".\n  if (!reason) {\n    var newReason = new Error('Promise was rejected with a falsy value');\n    newReason.reason = reason;\n    reason = newReason;\n  }\n  return cb(reason);\n}\n\nfunction callbackify(original) {\n  if (typeof original !== 'function') {\n    throw new TypeError('The \"original\" argument must be of type Function');\n  }\n\n  // We DO NOT return the promise as it gives the user a false sense that\n  // the promise is actually somehow related to the callback's execution\n  // and that the callback throwing will reject the promise.\n  function callbackified() {\n    var args = [];\n    for (var i = 0; i < arguments.length; i++) {\n      args.push(arguments[i]);\n    }\n\n    var maybeCb = args.pop();\n    if (typeof maybeCb !== 'function') {\n      throw new TypeError('The last argument must be of type Function');\n    }\n    var self = this;\n    var cb = function() {\n      return maybeCb.apply(self, arguments);\n    };\n    // In true node style we process the callback on `nextTick` with all the\n    // implications (stack, `uncaughtException`, `async_hooks`)\n    original.apply(this, args)\n      .then(function(ret) { process.nextTick(cb.bind(null, null, ret)) },\n            function(rej) { process.nextTick(callbackifyOnRejected.bind(null, rej, cb)) });\n  }\n\n  Object.setPrototypeOf(callbackified, Object.getPrototypeOf(original));\n  Object.defineProperties(callbackified,\n                          getOwnPropertyDescriptors(original));\n  return callbackified;\n}\nexports.callbackify = callbackify;\n","'use strict';\n\nvar forEach = require('for-each');\nvar availableTypedArrays = require('available-typed-arrays');\nvar callBound = require('call-bind/callBound');\nvar gOPD = require('gopd');\n\nvar $toString = callBound('Object.prototype.toString');\nvar hasToStringTag = require('has-tostringtag/shams')();\n\nvar g = typeof globalThis === 'undefined' ? global : globalThis;\nvar typedArrays = availableTypedArrays();\n\nvar $slice = callBound('String.prototype.slice');\nvar toStrTags = {};\nvar getPrototypeOf = Object.getPrototypeOf; // require('getprototypeof');\nif (hasToStringTag && gOPD && getPrototypeOf) {\n\tforEach(typedArrays, function (typedArray) {\n\t\tif (typeof g[typedArray] === 'function') {\n\t\t\tvar arr = new g[typedArray]();\n\t\t\tif (Symbol.toStringTag in arr) {\n\t\t\t\tvar proto = getPrototypeOf(arr);\n\t\t\t\tvar descriptor = gOPD(proto, Symbol.toStringTag);\n\t\t\t\tif (!descriptor) {\n\t\t\t\t\tvar superProto = getPrototypeOf(proto);\n\t\t\t\t\tdescriptor = gOPD(superProto, Symbol.toStringTag);\n\t\t\t\t}\n\t\t\t\ttoStrTags[typedArray] = descriptor.get;\n\t\t\t}\n\t\t}\n\t});\n}\n\nvar tryTypedArrays = function tryAllTypedArrays(value) {\n\tvar foundName = false;\n\tforEach(toStrTags, function (getter, typedArray) {\n\t\tif (!foundName) {\n\t\t\ttry {\n\t\t\t\tvar name = getter.call(value);\n\t\t\t\tif (name === typedArray) {\n\t\t\t\t\tfoundName = name;\n\t\t\t\t}\n\t\t\t} catch (e) {}\n\t\t}\n\t});\n\treturn foundName;\n};\n\nvar isTypedArray = require('is-typed-array');\n\nmodule.exports = function whichTypedArray(value) {\n\tif (!isTypedArray(value)) { return false; }\n\tif (!hasToStringTag || !(Symbol.toStringTag in value)) { return $slice($toString(value), 8, -1); }\n\treturn tryTypedArrays(value);\n};\n","'use strict';\n\nvar possibleNames = [\n\t'BigInt64Array',\n\t'BigUint64Array',\n\t'Float32Array',\n\t'Float64Array',\n\t'Int16Array',\n\t'Int32Array',\n\t'Int8Array',\n\t'Uint16Array',\n\t'Uint32Array',\n\t'Uint8Array',\n\t'Uint8ClampedArray'\n];\n\nvar g = typeof globalThis === 'undefined' ? global : globalThis;\n\nmodule.exports = function availableTypedArrays() {\n\tvar out = [];\n\tfor (var i = 0; i < possibleNames.length; i++) {\n\t\tif (typeof g[possibleNames[i]] === 'function') {\n\t\t\tout[out.length] = possibleNames[i];\n\t\t}\n\t}\n\treturn out;\n};\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","var getProto = Object.getPrototypeOf ? function(obj) { return Object.getPrototypeOf(obj); } : function(obj) { return obj.__proto__; };\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach(function(key) { def[key] = function() { return value[key]; }; });\n\t}\n\tdef['default'] = function() { return value; };\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.p = \"\";","/* eslint-disable no-var */\n// This file is imported into lib/wc client bundles.\n\nif (typeof window !== 'undefined') {\n  var currentScript = window.document.currentScript\n  if (process.env.NEED_CURRENTSCRIPT_POLYFILL) {\n    var getCurrentScript = require('@soda/get-current-script')\n    currentScript = getCurrentScript()\n\n    // for backward compatibility, because previously we directly included the polyfill\n    if (!('currentScript' in document)) {\n      Object.defineProperty(document, 'currentScript', { get: getCurrentScript })\n    }\n  }\n\n  var src = currentScript && currentScript.src.match(/(.+\\/)[^/]+\\.js(\\?.*)?$/)\n  if (src) {\n    __webpack_public_path__ = src[1] // eslint-disable-line\n  }\n}\n\n// Indicate to webpack that this file can be concatenated\nexport default null\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import { IChainSyncerEvent, IChainSyncerScanResult } from \"@/types\";\nimport { ethers as Ethers } from \"ethers\";\nimport { ChainSyncer } from \".\";\n\nexport const addEvents = async function(\n  this: ChainSyncer, \n  scans: IChainSyncerScanResult[]\n): Promise<IChainSyncerEvent[]> {\n\n  const merged_events = scans.reduce((acc, n) => {\n    return [ ...acc, ...n.events ]\n  }, [] as Ethers.EventLog[]);\n\n  const used_blocks = await this._loadUsedBlocks(merged_events);\n  const used_txs = await this._loadUsedTxs(merged_events);\n\n  const process_events = scans.map(item => item.events.map(event => {\n\n    const block = used_blocks.find(n => n.number === event.blockNumber);\n    const tx = used_txs.find(n => n.hash === event.transactionHash);\n\n    if(!block) {\n      throw new Error(`Block ${event.blockNumber} not found!`);\n    }\n\n    if(!tx) {\n      throw new Error(`Tx ${event.transactionHash} not found!`);\n    }\n\n    return this.parseEvent(\n      item.contract_name, \n      event, \n      block,\n      tx,\n    )\n  })).reduce((acc, n) => {\n    return [ ...acc, ...n ]\n  }, []);\n\n  await this.adapter.saveEvents(process_events, this.subscribers);\n    \n  return process_events;\n}","import { TChainSyncerListenerHook } from \"@/types\";\nimport { ChainSyncer } from \".\";\n\nexport const addListener = async function(\n  this: ChainSyncer,\n  event: string, \n  listener: TChainSyncerListenerHook\n): Promise<void> {\n\n  if(this.mode !== 'mono') {\n    throw new Error('Inline listeners are only available in mono mode');\n  }\n\n  if(this._is_started) {\n    throw new Error('Unfortunately, you cannot add new listeners after module started');\n  }\n\n  const {\n    contract_name,\n    event_name,\n  } = this._parseListenerName(event);\n\n  if(!this.used_contracts.includes(contract_name)) {\n    this.used_contracts.push(contract_name);\n  }\n\n  this.listeners[event] = {\n    full_event: event,\n    listener,\n    contract_name,\n    event_name,\n  };\n}","import { ChainSyncer } from \".\";\n\nexport const updateSubscriber = async function(\n  this: ChainSyncer,\n  subscriber: string, \n  events: string[]\n): Promise<void> {\n  const { events_added, events_removed } = await this.adapter.updateSubscriber(subscriber, events);\n\n  if(events_added.length) {\n    await this.adapter.addUnprocessedEventsToQueue(subscriber, events_added)\n  }\n\n  if(events_removed.length) {\n    await this.adapter.removeQueue(subscriber, events_removed)\n  }\n\n  await this.syncSubscribers();\n}","import { IChainSyncerGetContractsEventsOptions, IChainSyncerScanResult } from \"@/types\";\nimport { ethers as Ethers } from \"ethers\";\nimport { ChainSyncer } from \".\";\n\nexport const resolveBlockRanges = async function(\n  this: ChainSyncer,\n  contract_name: string, \n  max_block: number, \n  opts: IChainSyncerGetContractsEventsOptions = {}\n): Promise<IChainSyncerScanResult> {\n\n  let from_block = await this.adapter.getLatestScannedBlockNumber(contract_name);\n\n  if(!from_block) {\n\n    const contract = await this.contractsResolver(contract_name);\n\n    if(typeof contract.start_block !== 'number') {\n      throw new Error(contract_name + ' has no start_block, skipping ... (see \"options.contractsResolver\" in https://github.com/bytesbay/chain-syncer#constructoradapter-options)');\n    }\n    \n    from_block = contract.start_block;\n  }\n\n  let to_block = from_block + this.query_block_limit;\n\n  if(to_block > max_block) {\n    to_block = max_block;\n  }\n\n  if(from_block === to_block) {\n\n    if(from_block < 0) {\n      from_block = 0;\n    }\n  }\n\n  if(opts.force_rescan_till) {\n    const force_rescan_till = Math.max(0, opts.force_rescan_till);\n\n    if(to_block > force_rescan_till) {\n      from_block = force_rescan_till\n    } else {\n      // nothing to scan\n    }\n  }\n\n  const contract_getter_result = await this.contractsResolver(contract_name);\n\n  return {\n    contract_name,\n    from_block,\n    to_block,\n    contract_getter_result,\n    events: [],\n  };\n}","const padIndex = (num: number) => {\n  return num.toString().padStart(6, '0')\n}\n\nimport { IChainSyncerEvent, TChainSyncerEventArg } from \"@/types\";\nimport { ethers as Ethers } from \"ethers\";\nimport { ChainSyncer } from \".\";\n\nexport const parseEvent = function(\n  this: ChainSyncer,\n  contract_name: string, \n  event: Ethers.EventLog, \n  block: Ethers.Block, \n  tx: Ethers.TransactionResponse\n): IChainSyncerEvent {\n\n  const opts = {\n    id: this._parseEventId(event),\n    contract: contract_name, \n    event: event.eventName || 'unknown',\n    transaction_hash: event.transactionHash,\n    block_number: event.blockNumber,\n    log_index: event.index,\n    tx_index: event.transactionIndex,\n    from_address: tx.from,\n    global_index: Number(event.blockNumber.toString() + padIndex(event.index)),\n  };\n\n  // @ts-ignore\n  const traverseParse = (n) => {\n    if(Array.isArray(n)) {\n      // @ts-ignore\n      return n.map(z => traverseParse(z))\n    } else {\n      if(n._isBigNumber) {\n        return n.toString();\n      } else {\n        return n;\n      }\n    }\n  }\n\n  const args: TChainSyncerEventArg[] = traverseParse(event.args || []);\n\n  return {\n    ...opts,\n    block_timestamp: block.timestamp,\n    args: args,\n  };\n}","import { IChainSyncerEvent } from \"@/types\";\nimport { ChainSyncer } from \".\";\n\nconst parseListenerName = (e: IChainSyncerEvent): string => {\n  return `${e.contract}.${e.event}`\n}\n\nexport const processSubscriberEvents = async function(\n  this: ChainSyncer,\n  subscriber: string\n): Promise<void> {\n\n  // get all unprocessed events by contract and event name\n  let events = await this.adapter.selectAllUnprocessedEventsBySubscriber(\n    subscriber\n  );\n\n  events = events.filter(n => this.listeners[parseListenerName(n)])\n\n  await Promise.all(events.map(async n => {\n    const event = n;\n\n    const listener_name = parseListenerName(event);\n\n    const { listener } = this.listeners[listener_name];\n\n    try {\n      const res = await listener({\n        block_number: event.block_number,\n        transaction_hash: event.transaction_hash,\n        block_timestamp: event.block_timestamp,\n        global_index: event.global_index,\n        from_address: event.from_address,\n      }, ...event.args);\n\n      if(res === false) {\n        if(this.verbose) {\n          this.logger.log(`Postponed event ${listener_name}`);\n        }\n        return;\n      }\n    } catch (error) {\n      this.logger.error(`Error during event processing ${listener_name}`, error);\n      return;\n    }\n\n    try {\n      await this.adapter.setEventProcessedForSubscriber(event.id, subscriber);\n    } catch (error) {\n      this.logger.error('Error during event stream state setter', error);\n    }\n  }))\n}","import { ChainSyncer } from \".\";\n\nexport const processingTick = async function(\n  this: ChainSyncer,\n) {\n  const proms = [];\n  \n  this._is_processor_busy = true;\n\n  for (const subs of this.subscribers) {\n    proms.push(\n      this.processSubscriberEvents(subs.name).catch(() => { /* ... */ })\n    );\n  }\n  await Promise.all(proms);\n\n  this._is_processor_busy = false;\n\n  if(this._is_started) {\n    setTimeout(() => this.processingTick(), this.tick_interval);\n  }\n}","import { ChainSyncer } from \".\";\n\nexport const safeRescan = async function(\n  this: ChainSyncer,\n  max_block: number\n): Promise<void> {\n\n  if(max_block < this._next_safe_at) {\n    return;\n  }\n\n  max_block = max_block - 1; // we dont need the latest\n\n  const force_rescan_till = max_block - (this.safe_rescan_every_n_block * this.safe_rescans_to_repeat);\n\n  const { scans, events } = await this.scanContracts(max_block, {\n    force_rescan_till,\n  });\n\n  this._next_safe_at = max_block + this.safe_rescan_every_n_block;\n\n  if(this.verbose) {\n    this.logger.log(`Safe rescan ... ${events.length} events added. Next rescan at ${this._next_safe_at} block`);\n  }\n}","import { IChainSyncerScanResult } from \"@/types\";\nimport { ChainSyncer } from \".\";\n\nexport const saveLatestBlocks = async function(\n  this: ChainSyncer,\n  scans: IChainSyncerScanResult[]\n): Promise<void> {\n  await Promise.all(\n    scans.map(n => this.adapter.saveLatestScannedBlockNumber(n.contract_name, n.to_block))\n  );\n}","import { IChainSyncerContractsResolverResult, IChainSyncerScanResult } from \"@/types\";\nimport { ethers as Ethers } from \"ethers\";\nimport { ChainSyncer } from \".\";\n\nexport const scanContractBlocks = async function(\n  this: ChainSyncer,\n  contract_getter_result: IChainSyncerContractsResolverResult, \n  contract_name: string, \n  from_block: number, \n  to_block: number\n): Promise<IChainSyncerScanResult> {\n\n  let events = [] as Ethers.EventLog[];\n\n  events = events.filter(n => {\n    const event = n;\n\n    // if unknown events (not declared in contract ABI) - just skip\n    return event.eventName && event.args // TODO: filter with streams\n  })\n\n  const event_ids = await this.adapter.filterExistingEvents(\n    events.map(n => this._parseEventId(n))\n  );\n\n  events = events.filter(n => {\n    const id = this._parseEventId(n);\n    return event_ids.includes(id);\n  });\n  \n  return {\n    contract_name,\n    contract_getter_result,\n    events,\n    from_block: from_block,\n    to_block: to_block,\n  }\n}","import { IChainSyncerEvent, IChainSyncerGetContractsEventsOptions, IChainSyncerScanResult } from \"@/types\";\nimport { ChainSyncer } from \".\";\n\nexport const scanContracts = async function(\n  this: ChainSyncer,\n  max_block: number, \n  opts: IChainSyncerGetContractsEventsOptions = {}\n) {\n\n  const proms = [];\n  \n  const _contracts = this.used_contracts;  \n\n  // getting blocks and aggregating the blocks that needs to be scanned\n  for (const i in _contracts) {\n    const contract_name = _contracts[i];\n\n    const prom = this.resolveBlockRanges(contract_name, max_block, opts)\n      .catch((err: any) => {\n        this.logger.error(`Error in gethering events for contract ${contract_name}: ${err.message}`);\n        return null;\n      });\n\n    proms.push(prom);\n  }\n\n  // now we same ranges of blocks to the same group\n  // and we scan them in parallel\n\n  const scans = await Promise\n    .all(proms)\n    .then(data => data.filter(n => n) as IChainSyncerScanResult[]);\n\n  await this.fillScansWithEvents(scans);\n\n  let events: IChainSyncerEvent[] = [];\n  if(proms.length) {\n    events = await this.addEvents(scans);\n  }\n\n  return { scans, events };\n\n}","export const version = \"6.0.2\";\n//# sourceMappingURL=_version.js.map","/**\n *  Property helper functions.\n *\n *  @_subsection api/utils:Properties  [about-properties]\n */\nfunction checkType(value, type, name) {\n    const types = type.split(\"|\").map(t => t.trim());\n    for (let i = 0; i < types.length; i++) {\n        switch (type) {\n            case \"any\":\n                return;\n            case \"bigint\":\n            case \"boolean\":\n            case \"number\":\n            case \"string\":\n                if (typeof (value) === type) {\n                    return;\n                }\n        }\n    }\n    const error = new Error(`invalid value for type ${type}`);\n    error.code = \"INVALID_ARGUMENT\";\n    error.argument = `value.${name}`;\n    error.value = value;\n    throw error;\n}\n/**\n *  Resolves to a new object that is a copy of %%value%%, but with all\n *  values resolved.\n */\nexport async function resolveProperties(value) {\n    const keys = Object.keys(value);\n    const results = await Promise.all(keys.map((k) => Promise.resolve(value[k])));\n    return results.reduce((accum, v, index) => {\n        accum[keys[index]] = v;\n        return accum;\n    }, {});\n}\n/**\n *  Assigns the %%values%% to %%target%% as read-only values.\n *\n *  It %%types%% is specified, the values are checked.\n */\nexport function defineProperties(target, values, types) {\n    for (let key in values) {\n        let value = values[key];\n        const type = (types ? types[key] : null);\n        if (type) {\n            checkType(value, type, key);\n        }\n        Object.defineProperty(target, key, { enumerable: true, value, writable: false });\n    }\n}\n//# sourceMappingURL=properties.js.map","/**\n *  About Errors.\n *\n *  @_section: api/utils/errors:Errors  [about-errors]\n */\nimport { version } from \"../_version.js\";\nimport { defineProperties } from \"./properties.js\";\nfunction stringify(value) {\n    if (value == null) {\n        return \"null\";\n    }\n    if (Array.isArray(value)) {\n        return \"[ \" + (value.map(stringify)).join(\", \") + \" ]\";\n    }\n    if (value instanceof Uint8Array) {\n        const HEX = \"0123456789abcdef\";\n        let result = \"0x\";\n        for (let i = 0; i < value.length; i++) {\n            result += HEX[value[i] >> 4];\n            result += HEX[value[i] & 0xf];\n        }\n        return result;\n    }\n    if (typeof (value) === \"object\" && typeof (value.toJSON) === \"function\") {\n        return stringify(value.toJSON());\n    }\n    switch (typeof (value)) {\n        case \"boolean\":\n        case \"symbol\":\n            return value.toString();\n        case \"bigint\":\n            return BigInt(value).toString();\n        case \"number\":\n            return (value).toString();\n        case \"string\":\n            return JSON.stringify(value);\n        case \"object\": {\n            const keys = Object.keys(value);\n            keys.sort();\n            return \"{ \" + keys.map((k) => `${stringify(k)}: ${stringify(value[k])}`).join(\", \") + \" }\";\n        }\n    }\n    return `[ COULD NOT SERIALIZE ]`;\n}\n/**\n *  Returns true if the %%error%% matches an error thrown by ethers\n *  that matches the error %%code%%.\n *\n *  In TypeScript envornoments, this can be used to check that %%error%%\n *  matches an EthersError type, which means the expected properties will\n *  be set.\n *\n *  @See [ErrorCodes](api:ErrorCode)\n *  @example\n *    try {\n *      // code....\n *    } catch (e) {\n *      if (isError(e, \"CALL_EXCEPTION\")) {\n *          // The Type Guard has validated this object\n *          console.log(e.data);\n *      }\n *    }\n */\nexport function isError(error, code) {\n    return (error && error.code === code);\n}\n/**\n *  Returns true if %%error%% is a [[CallExceptionError].\n */\nexport function isCallException(error) {\n    return isError(error, \"CALL_EXCEPTION\");\n}\n/**\n *  Returns a new Error configured to the format ethers emits errors, with\n *  the %%message%%, [[api:ErrorCode]] %%code%% and additioanl properties\n *  for the corresponding EthersError.\n *\n *  Each error in ethers includes the version of ethers, a\n *  machine-readable [[ErrorCode]], and depneding on %%code%%, additional\n *  required properties. The error message will also include the %%meeage%%,\n *  ethers version, %%code%% and all aditional properties, serialized.\n */\nexport function makeError(message, code, info) {\n    {\n        const details = [];\n        if (info) {\n            if (\"message\" in info || \"code\" in info || \"name\" in info) {\n                throw new Error(`value will overwrite populated values: ${stringify(info)}`);\n            }\n            for (const key in info) {\n                const value = (info[key]);\n                //                try {\n                details.push(key + \"=\" + stringify(value));\n                //                } catch (error: any) {\n                //                console.log(\"MMM\", error.message);\n                //                    details.push(key + \"=[could not serialize object]\");\n                //                }\n            }\n        }\n        details.push(`code=${code}`);\n        details.push(`version=${version}`);\n        if (details.length) {\n            message += \" (\" + details.join(\", \") + \")\";\n        }\n    }\n    let error;\n    switch (code) {\n        case \"INVALID_ARGUMENT\":\n            error = new TypeError(message);\n            break;\n        case \"NUMERIC_FAULT\":\n        case \"BUFFER_OVERRUN\":\n            error = new RangeError(message);\n            break;\n        default:\n            error = new Error(message);\n    }\n    defineProperties(error, { code });\n    if (info) {\n        defineProperties(error, info);\n    }\n    return error;\n}\n/**\n *  Throws an EthersError with %%message%%, %%code%% and additional error\n *  %%info%% when %%check%% is falsish..\n *\n *  @see [[api:makeError]]\n */\nexport function assert(check, message, code, info) {\n    if (!check) {\n        throw makeError(message, code, info);\n    }\n}\n/**\n *  A simple helper to simply ensuring provided arguments match expected\n *  constraints, throwing if not.\n *\n *  In TypeScript environments, the %%check%% has been asserted true, so\n *  any further code does not need additional compile-time checks.\n */\nexport function assertArgument(check, message, name, value) {\n    assert(check, message, \"INVALID_ARGUMENT\", { argument: name, value: value });\n}\nexport function assertArgumentCount(count, expectedCount, message) {\n    if (message == null) {\n        message = \"\";\n    }\n    if (message) {\n        message = \": \" + message;\n    }\n    assert(count >= expectedCount, \"missing arguemnt\" + message, \"MISSING_ARGUMENT\", {\n        count: count,\n        expectedCount: expectedCount\n    });\n    assert(count <= expectedCount, \"too many arguemnts\" + message, \"UNEXPECTED_ARGUMENT\", {\n        count: count,\n        expectedCount: expectedCount\n    });\n}\nconst _normalizeForms = [\"NFD\", \"NFC\", \"NFKD\", \"NFKC\"].reduce((accum, form) => {\n    try {\n        // General test for normalize\n        /* c8 ignore start */\n        if (\"test\".normalize(form) !== \"test\") {\n            throw new Error(\"bad\");\n        }\n        ;\n        /* c8 ignore stop */\n        if (form === \"NFD\") {\n            const check = String.fromCharCode(0xe9).normalize(\"NFD\");\n            const expected = String.fromCharCode(0x65, 0x0301);\n            /* c8 ignore start */\n            if (check !== expected) {\n                throw new Error(\"broken\");\n            }\n            /* c8 ignore stop */\n        }\n        accum.push(form);\n    }\n    catch (error) { }\n    return accum;\n}, []);\n/**\n *  Throws if the normalization %%form%% is not supported.\n */\nexport function assertNormalize(form) {\n    assert(_normalizeForms.indexOf(form) >= 0, \"platform missing String.prototype.normalize\", \"UNSUPPORTED_OPERATION\", {\n        operation: \"String.prototype.normalize\", info: { form }\n    });\n}\n/**\n *  Many classes use file-scoped values to guard the constructor,\n *  making it effectively private. This facilitates that pattern\n *  by ensuring the %%givenGaurd%% matches the file-scoped %%guard%%,\n *  throwing if not, indicating the %%className%% if provided.\n */\nexport function assertPrivate(givenGuard, guard, className) {\n    if (className == null) {\n        className = \"\";\n    }\n    if (givenGuard !== guard) {\n        let method = className, operation = \"new\";\n        if (className) {\n            method += \".\";\n            operation += \" \" + className;\n        }\n        assert(false, `private constructor; use ${method}from* methods`, \"UNSUPPORTED_OPERATION\", {\n            operation\n        });\n    }\n}\n//# sourceMappingURL=errors.js.map","/**\n *  Some data helpers.\n *\n *\n *  @_subsection api/utils:Data Helpers  [about-data]\n */\nimport { assert, assertArgument } from \"./errors.js\";\nfunction _getBytes(value, name, copy) {\n    if (value instanceof Uint8Array) {\n        if (copy) {\n            return new Uint8Array(value);\n        }\n        return value;\n    }\n    if (typeof (value) === \"string\" && value.match(/^0x([0-9a-f][0-9a-f])*$/i)) {\n        const result = new Uint8Array((value.length - 2) / 2);\n        let offset = 2;\n        for (let i = 0; i < result.length; i++) {\n            result[i] = parseInt(value.substring(offset, offset + 2), 16);\n            offset += 2;\n        }\n        return result;\n    }\n    assertArgument(false, \"invalid BytesLike value\", name || \"value\", value);\n}\n/**\n *  Get a typed Uint8Array for %%value%%. If already a Uint8Array\n *  the original %%value%% is returned; if a copy is required use\n *  [[getBytesCopy]].\n *\n *  @see: getBytesCopy\n */\nexport function getBytes(value, name) {\n    return _getBytes(value, name, false);\n}\n/**\n *  Get a typed Uint8Array for %%value%%, creating a copy if necessary\n *  to prevent any modifications of the returned value from being\n *  reflected elsewhere.\n *\n *  @see: getBytes\n */\nexport function getBytesCopy(value, name) {\n    return _getBytes(value, name, true);\n}\n/**\n *  Returns true if %%value%% is a valid [[HexString]].\n *\n *  If %%length%% is ``true`` or a //number//, it also checks that\n *  %%value%% is a valid [[DataHexString]] of %%length%% (if a //number//)\n *  bytes of data (e.g. ``0x1234`` is 2 bytes).\n */\nexport function isHexString(value, length) {\n    if (typeof (value) !== \"string\" || !value.match(/^0x[0-9A-Fa-f]*$/)) {\n        return false;\n    }\n    if (typeof (length) === \"number\" && value.length !== 2 + 2 * length) {\n        return false;\n    }\n    if (length === true && (value.length % 2) !== 0) {\n        return false;\n    }\n    return true;\n}\n/**\n *  Returns true if %%value%% is a valid representation of arbitrary\n *  data (i.e. a valid [[DataHexString]] or a Uint8Array).\n */\nexport function isBytesLike(value) {\n    return (isHexString(value, true) || (value instanceof Uint8Array));\n}\nconst HexCharacters = \"0123456789abcdef\";\n/**\n *  Returns a [[DataHexString]] representation of %%data%%.\n */\nexport function hexlify(data) {\n    const bytes = getBytes(data);\n    let result = \"0x\";\n    for (let i = 0; i < bytes.length; i++) {\n        const v = bytes[i];\n        result += HexCharacters[(v & 0xf0) >> 4] + HexCharacters[v & 0x0f];\n    }\n    return result;\n}\n/**\n *  Returns a [[DataHexString]] by concatenating all values\n *  within %%data%%.\n */\nexport function concat(datas) {\n    return \"0x\" + datas.map((d) => hexlify(d).substring(2)).join(\"\");\n}\n/**\n *  Returns the length of %%data%%, in bytes.\n */\nexport function dataLength(data) {\n    if (isHexString(data, true)) {\n        return (data.length - 2) / 2;\n    }\n    return getBytes(data).length;\n}\n/**\n *  Returns a [[DataHexString]] by slicing %%data%% from the %%start%%\n *  offset to the %%end%% offset.\n *\n *  By default %%start%% is 0 and %%end%% is the length of %%data%%.\n */\nexport function dataSlice(data, start, end) {\n    const bytes = getBytes(data);\n    if (end != null && end > bytes.length) {\n        assert(false, \"cannot slice beyond data bounds\", \"BUFFER_OVERRUN\", {\n            buffer: bytes, length: bytes.length, offset: end\n        });\n    }\n    return hexlify(bytes.slice((start == null) ? 0 : start, (end == null) ? bytes.length : end));\n}\n/**\n *  Return the [[DataHexString]] result by stripping all **leading**\n ** zero bytes from %%data%%.\n */\nexport function stripZerosLeft(data) {\n    let bytes = hexlify(data).substring(2);\n    while (bytes.substring(0, 2) == \"00\") {\n        bytes = bytes.substring(2);\n    }\n    return \"0x\" + bytes;\n}\nfunction zeroPad(data, length, left) {\n    const bytes = getBytes(data);\n    assert(length >= bytes.length, \"padding exceeds data length\", \"BUFFER_OVERRUN\", {\n        buffer: new Uint8Array(bytes),\n        length: length,\n        offset: length + 1\n    });\n    const result = new Uint8Array(length);\n    result.fill(0);\n    if (left) {\n        result.set(bytes, length - bytes.length);\n    }\n    else {\n        result.set(bytes, 0);\n    }\n    return hexlify(result);\n}\n/**\n *  Return the [[DataHexString]] of %%data%% padded on the **left**\n *  to %%length%% bytes.\n *\n *  If %%data%% already exceeds %%length%%, a [[BufferOverrun]] is\n *  thrown.\n *\n *  This pads data the same as **values** are in Solidity\n *  (e.g. ``uint128``).\n */\nexport function zeroPadValue(data, length) {\n    return zeroPad(data, length, true);\n}\n/**\n *  Return the [[DataHexString]] of %%data%% padded on the **right**\n *  to %%length%% bytes.\n *\n *  If %%data%% already exceeds %%length%%, a [[BufferOverrun]] is\n *  thrown.\n *\n *  This pads data the same as **bytes** are in Solidity\n *  (e.g. ``bytes16``).\n */\nexport function zeroPadBytes(data, length) {\n    return zeroPad(data, length, false);\n}\n//# sourceMappingURL=data.js.map","/**\n *  Some mathematic operations.\n *\n *  @_subsection: api/utils:Math Helpers  [about-maths]\n */\nimport { hexlify, isBytesLike } from \"./data.js\";\nimport { assert, assertArgument } from \"./errors.js\";\nconst BN_0 = BigInt(0);\nconst BN_1 = BigInt(1);\n//const BN_Max256 = (BN_1 << BigInt(256)) - BN_1;\n// IEEE 754 support 53-bits of mantissa\nconst maxValue = 0x1fffffffffffff;\n/**\n *  Convert %%value%% from a twos-compliment representation of %%width%%\n *  bits to its value.\n *\n *  If the highest bit is ``1``, the result will be negative.\n */\nexport function fromTwos(_value, _width) {\n    const value = getUint(_value, \"value\");\n    const width = BigInt(getNumber(_width, \"width\"));\n    assert((value >> width) === BN_0, \"overflow\", \"NUMERIC_FAULT\", {\n        operation: \"fromTwos\", fault: \"overflow\", value: _value\n    });\n    // Top bit set; treat as a negative value\n    if (value >> (width - BN_1)) {\n        const mask = (BN_1 << width) - BN_1;\n        return -(((~value) & mask) + BN_1);\n    }\n    return value;\n}\n/**\n *  Convert %%value%% to a twos-compliment representation of\n *  %%width%% bits.\n *\n *  The result will always be positive.\n */\nexport function toTwos(_value, _width) {\n    let value = getBigInt(_value, \"value\");\n    const width = BigInt(getNumber(_width, \"width\"));\n    const limit = (BN_1 << (width - BN_1));\n    if (value < BN_0) {\n        value = -value;\n        assert(value <= limit, \"too low\", \"NUMERIC_FAULT\", {\n            operation: \"toTwos\", fault: \"overflow\", value: _value\n        });\n        const mask = (BN_1 << width) - BN_1;\n        return ((~value) & mask) + BN_1;\n    }\n    else {\n        assert(value < limit, \"too high\", \"NUMERIC_FAULT\", {\n            operation: \"toTwos\", fault: \"overflow\", value: _value\n        });\n    }\n    return value;\n}\n/**\n *  Mask %%value%% with a bitmask of %%bits%% ones.\n */\nexport function mask(_value, _bits) {\n    const value = getUint(_value, \"value\");\n    const bits = BigInt(getNumber(_bits, \"bits\"));\n    return value & ((BN_1 << bits) - BN_1);\n}\n/**\n *  Gets a [[BigInt]] from %%value%%. If it is an invalid value for\n *  a BigInt, then an ArgumentError will be thrown for %%name%%.\n */\nexport function getBigInt(value, name) {\n    switch (typeof (value)) {\n        case \"bigint\": return value;\n        case \"number\":\n            assertArgument(Number.isInteger(value), \"underflow\", name || \"value\", value);\n            assertArgument(value >= -maxValue && value <= maxValue, \"overflow\", name || \"value\", value);\n            return BigInt(value);\n        case \"string\":\n            try {\n                if (value === \"\") {\n                    throw new Error(\"empty string\");\n                }\n                if (value[0] === \"-\" && value[1] !== \"-\") {\n                    return -BigInt(value.substring(1));\n                }\n                return BigInt(value);\n            }\n            catch (e) {\n                assertArgument(false, `invalid BigNumberish string: ${e.message}`, name || \"value\", value);\n            }\n    }\n    assertArgument(false, \"invalid BigNumberish value\", name || \"value\", value);\n}\nexport function getUint(value, name) {\n    const result = getBigInt(value, name);\n    assert(result >= BN_0, \"unsigned value cannot be negative\", \"NUMERIC_FAULT\", {\n        fault: \"overflow\", operation: \"getUint\", value\n    });\n    return result;\n}\nconst Nibbles = \"0123456789abcdef\";\n/*\n * Converts %%value%% to a BigInt. If %%value%% is a Uint8Array, it\n * is treated as Big Endian data.\n */\nexport function toBigInt(value) {\n    if (value instanceof Uint8Array) {\n        let result = \"0x0\";\n        for (const v of value) {\n            result += Nibbles[v >> 4];\n            result += Nibbles[v & 0x0f];\n        }\n        return BigInt(result);\n    }\n    return getBigInt(value);\n}\n/**\n *  Gets a //number// from %%value%%. If it is an invalid value for\n *  a //number//, then an ArgumentError will be thrown for %%name%%.\n */\nexport function getNumber(value, name) {\n    switch (typeof (value)) {\n        case \"bigint\":\n            assertArgument(value >= -maxValue && value <= maxValue, \"overflow\", name || \"value\", value);\n            return Number(value);\n        case \"number\":\n            assertArgument(Number.isInteger(value), \"underflow\", name || \"value\", value);\n            assertArgument(value >= -maxValue && value <= maxValue, \"overflow\", name || \"value\", value);\n            return value;\n        case \"string\":\n            try {\n                if (value === \"\") {\n                    throw new Error(\"empty string\");\n                }\n                return getNumber(BigInt(value), name);\n            }\n            catch (e) {\n                assertArgument(false, `invalid numeric string: ${e.message}`, name || \"value\", value);\n            }\n    }\n    assertArgument(false, \"invalid numeric value\", name || \"value\", value);\n}\n/**\n *  Converts %%value%% to a number. If %%value%% is a Uint8Array, it\n *  is treated as Big Endian data. Throws if the value is not safe.\n */\nexport function toNumber(value) {\n    return getNumber(toBigInt(value));\n}\n/**\n *  Converts %%value%% to a Big Endian hexstring, optionally padded to\n *  %%width%% bytes.\n */\nexport function toBeHex(_value, _width) {\n    const value = getUint(_value, \"value\");\n    let result = value.toString(16);\n    if (_width == null) {\n        // Ensure the value is of even length\n        if (result.length % 2) {\n            result = \"0\" + result;\n        }\n    }\n    else {\n        const width = getNumber(_width, \"width\");\n        assert(width * 2 >= result.length, `value exceeds width (${width} bits)`, \"NUMERIC_FAULT\", {\n            operation: \"toBeHex\",\n            fault: \"overflow\",\n            value: _value\n        });\n        // Pad the value to the required width\n        while (result.length < (width * 2)) {\n            result = \"0\" + result;\n        }\n    }\n    return \"0x\" + result;\n}\n/**\n *  Converts %%value%% to a Big Endian Uint8Array.\n */\nexport function toBeArray(_value) {\n    const value = getUint(_value, \"value\");\n    if (value === BN_0) {\n        return new Uint8Array([]);\n    }\n    let hex = value.toString(16);\n    if (hex.length % 2) {\n        hex = \"0\" + hex;\n    }\n    const result = new Uint8Array(hex.length / 2);\n    for (let i = 0; i < result.length; i++) {\n        const offset = i * 2;\n        result[i] = parseInt(hex.substring(offset, offset + 2), 16);\n    }\n    return result;\n}\n/**\n *  Returns a [[HexString]] for %%value%% safe to use as a //Quantity//.\n *\n *  A //Quantity// does not have and leading 0 values unless the value is\n *  the literal value `0x0`. This is most commonly used for JSSON-RPC\n *  numeric values.\n */\nexport function toQuantity(value) {\n    let result = hexlify(isBytesLike(value) ? value : toBeArray(value)).substring(2);\n    while (result.substring(0, 1) === \"0\") {\n        result = result.substring(1);\n    }\n    if (result === \"\") {\n        result = \"0\";\n    }\n    return \"0x\" + result;\n}\n//# sourceMappingURL=maths.js.map","import { defineProperties, concat, getBytesCopy, getNumber, hexlify, toBeArray, toBigInt, toNumber, assert, assertArgument } from \"../../utils/index.js\";\n/**\n * @_ignore:\n */\nexport const WordSize = 32;\nconst Padding = new Uint8Array(WordSize);\n// Properties used to immediate pass through to the underlying object\n// - `then` is used to detect if an object is a Promise for await\nconst passProperties = [\"then\"];\nconst _guard = {};\nfunction throwError(name, error) {\n    const wrapped = new Error(`deferred error during ABI decoding triggered accessing ${name}`);\n    wrapped.error = error;\n    throw wrapped;\n}\n/**\n *  A [[Result]] is a sub-class of Array, which allows accessing any\n *  of its values either positionally by its index or, if keys are\n *  provided by its name.\n *\n *  @_docloc: api/abi\n */\nexport class Result extends Array {\n    #names;\n    /**\n     *  @private\n     */\n    constructor(...args) {\n        // To properly sub-class Array so the other built-in\n        // functions work, the constructor has to behave fairly\n        // well. So, in the event we are created via fromItems()\n        // we build the read-only Result object we want, but on\n        // any other input, we use the default constructor\n        // constructor(guard: any, items: Array<any>, keys?: Array<null | string>);\n        const guard = args[0];\n        let items = args[1];\n        let names = (args[2] || []).slice();\n        let wrap = true;\n        if (guard !== _guard) {\n            items = args;\n            names = [];\n            wrap = false;\n        }\n        // Can't just pass in ...items since an array of length 1\n        // is a special case in the super.\n        super(items.length);\n        items.forEach((item, index) => { this[index] = item; });\n        // Find all unique keys\n        const nameCounts = names.reduce((accum, name) => {\n            if (typeof (name) === \"string\") {\n                accum.set(name, (accum.get(name) || 0) + 1);\n            }\n            return accum;\n        }, (new Map()));\n        // Remove any key thats not unique\n        this.#names = Object.freeze(items.map((item, index) => {\n            const name = names[index];\n            if (name != null && nameCounts.get(name) === 1) {\n                return name;\n            }\n            return null;\n        }));\n        if (!wrap) {\n            return;\n        }\n        // A wrapped Result is immutable\n        Object.freeze(this);\n        // Proxy indices and names so we can trap deferred errors\n        return new Proxy(this, {\n            get: (target, prop, receiver) => {\n                if (typeof (prop) === \"string\") {\n                    // Index accessor\n                    if (prop.match(/^[0-9]+$/)) {\n                        const index = getNumber(prop, \"%index\");\n                        if (index < 0 || index >= this.length) {\n                            throw new RangeError(\"out of result range\");\n                        }\n                        const item = target[index];\n                        if (item instanceof Error) {\n                            throwError(`index ${index}`, item);\n                        }\n                        return item;\n                    }\n                    // Pass important checks (like `then` for Promise) through\n                    if (passProperties.indexOf(prop) >= 0) {\n                        return Reflect.get(target, prop, receiver);\n                    }\n                    const value = target[prop];\n                    if (value instanceof Function) {\n                        // Make sure functions work with private variables\n                        // See: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy#no_private_property_forwarding\n                        return function (...args) {\n                            return value.apply((this === receiver) ? target : this, args);\n                        };\n                    }\n                    else if (!(prop in target)) {\n                        // Possible name accessor\n                        return target.getValue.apply((this === receiver) ? target : this, [prop]);\n                    }\n                }\n                return Reflect.get(target, prop, receiver);\n            }\n        });\n    }\n    /**\n     *  Returns the Result as a normal Array.\n     *\n     *  This will throw if there are any outstanding deferred\n     *  errors.\n     */\n    toArray() {\n        this.forEach((item, index) => {\n            if (item instanceof Error) {\n                throwError(`index ${index}`, item);\n            }\n        });\n        return Array.of(this);\n    }\n    /**\n     *  Returns the Result as an Object with each name-value pair.\n     *\n     *  This will throw if any value is unnamed, or if there are\n     *  any outstanding deferred errors.\n     */\n    toObject() {\n        return this.#names.reduce((accum, name, index) => {\n            assert(name != null, \"value at index ${ index } unnamed\", \"UNSUPPORTED_OPERATION\", {\n                operation: \"toObject()\"\n            });\n            // Add values for names that don't conflict\n            if (!(name in accum)) {\n                accum[name] = this.getValue(name);\n            }\n            return accum;\n        }, {});\n    }\n    /**\n     *  @_ignore\n     */\n    slice(start, end) {\n        if (start == null) {\n            start = 0;\n        }\n        if (end == null) {\n            end = this.length;\n        }\n        const result = [], names = [];\n        for (let i = start; i < end; i++) {\n            result.push(this[i]);\n            names.push(this.#names[i]);\n        }\n        return new Result(_guard, result, names);\n    }\n    /**\n     *  @_ignore\n     */\n    filter(callback, thisArg) {\n        const result = [], names = [];\n        for (let i = 0; i < this.length; i++) {\n            const item = this[i];\n            if (item instanceof Error) {\n                throwError(`index ${i}`, item);\n            }\n            if (callback.call(thisArg, item, i, this)) {\n                result.push(item);\n                names.push(this.#names[i]);\n            }\n        }\n        return new Result(_guard, result, names);\n    }\n    /**\n     *  Returns the value for %%name%%.\n     *\n     *  Since it is possible to have a key whose name conflicts with\n     *  a method on a [[Result]] or its superclass Array, or any\n     *  JavaScript keyword, this ensures all named values are still\n     *  accessible by name.\n     */\n    getValue(name) {\n        const index = this.#names.indexOf(name);\n        if (index === -1) {\n            return undefined;\n        }\n        const value = this[index];\n        if (value instanceof Error) {\n            throwError(`property ${JSON.stringify(name)}`, value.error);\n        }\n        return value;\n    }\n    /**\n     *  Creates a new [[Result]] for %%items%% with each entry\n     *  also accessible by its corresponding name in %%keys%%.\n     */\n    static fromItems(items, keys) {\n        return new Result(_guard, items, keys);\n    }\n}\n/**\n *  Returns all errors found in a [[Result]].\n *\n *  Since certain errors encountered when creating a [[Result]] do\n *  not impact the ability to continue parsing data, they are\n *  deferred until they are actually accessed. Hence a faulty string\n *  in an Event that is never used does not impact the program flow.\n *\n *  However, sometimes it may be useful to access, identify or\n *  validate correctness of a [[Result]].\n *\n *  @_docloc api/abi\n */\nexport function checkResultErrors(result) {\n    // Find the first error (if any)\n    const errors = [];\n    const checkErrors = function (path, object) {\n        if (!Array.isArray(object)) {\n            return;\n        }\n        for (let key in object) {\n            const childPath = path.slice();\n            childPath.push(key);\n            try {\n                checkErrors(childPath, object[key]);\n            }\n            catch (error) {\n                errors.push({ path: childPath, error: error });\n            }\n        }\n    };\n    checkErrors([], result);\n    return errors;\n}\nfunction getValue(value) {\n    let bytes = toBeArray(value);\n    assert(bytes.length <= WordSize, \"value out-of-bounds\", \"BUFFER_OVERRUN\", { buffer: bytes, length: WordSize, offset: bytes.length });\n    if (bytes.length !== WordSize) {\n        bytes = getBytesCopy(concat([Padding.slice(bytes.length % WordSize), bytes]));\n    }\n    return bytes;\n}\n/**\n *  @_ignore\n */\nexport class Coder {\n    // The coder name:\n    //   - address, uint256, tuple, array, etc.\n    name;\n    // The fully expanded type, including composite types:\n    //   - address, uint256, tuple(address,bytes), uint256[3][4][],  etc.\n    type;\n    // The localName bound in the signature, in this example it is \"baz\":\n    //   - tuple(address foo, uint bar) baz\n    localName;\n    // Whether this type is dynamic:\n    //  - Dynamic: bytes, string, address[], tuple(boolean[]), etc.\n    //  - Not Dynamic: address, uint256, boolean[3], tuple(address, uint8)\n    dynamic;\n    constructor(name, type, localName, dynamic) {\n        defineProperties(this, { name, type, localName, dynamic }, {\n            name: \"string\", type: \"string\", localName: \"string\", dynamic: \"boolean\"\n        });\n    }\n    _throwError(message, value) {\n        assertArgument(false, message, this.localName, value);\n    }\n}\n/**\n *  @_ignore\n */\nexport class Writer {\n    // An array of WordSize lengthed objects to concatenation\n    #data;\n    #dataLength;\n    constructor() {\n        this.#data = [];\n        this.#dataLength = 0;\n    }\n    get data() {\n        return concat(this.#data);\n    }\n    get length() { return this.#dataLength; }\n    #writeData(data) {\n        this.#data.push(data);\n        this.#dataLength += data.length;\n        return data.length;\n    }\n    appendWriter(writer) {\n        return this.#writeData(getBytesCopy(writer.data));\n    }\n    // Arrayish item; pad on the right to *nearest* WordSize\n    writeBytes(value) {\n        let bytes = getBytesCopy(value);\n        const paddingOffset = bytes.length % WordSize;\n        if (paddingOffset) {\n            bytes = getBytesCopy(concat([bytes, Padding.slice(paddingOffset)]));\n        }\n        return this.#writeData(bytes);\n    }\n    // Numeric item; pad on the left *to* WordSize\n    writeValue(value) {\n        return this.#writeData(getValue(value));\n    }\n    // Inserts a numeric place-holder, returning a callback that can\n    // be used to asjust the value later\n    writeUpdatableValue() {\n        const offset = this.#data.length;\n        this.#data.push(Padding);\n        this.#dataLength += WordSize;\n        return (value) => {\n            this.#data[offset] = getValue(value);\n        };\n    }\n}\n/**\n *  @_ignore\n */\nexport class Reader {\n    // Allows incomplete unpadded data to be read; otherwise an error\n    // is raised if attempting to overrun the buffer. This is required\n    // to deal with an old Solidity bug, in which event data for\n    // external (not public thoguh) was tightly packed.\n    allowLoose;\n    #data;\n    #offset;\n    constructor(data, allowLoose) {\n        defineProperties(this, { allowLoose: !!allowLoose });\n        this.#data = getBytesCopy(data);\n        this.#offset = 0;\n    }\n    get data() { return hexlify(this.#data); }\n    get dataLength() { return this.#data.length; }\n    get consumed() { return this.#offset; }\n    get bytes() { return new Uint8Array(this.#data); }\n    #peekBytes(offset, length, loose) {\n        let alignedLength = Math.ceil(length / WordSize) * WordSize;\n        if (this.#offset + alignedLength > this.#data.length) {\n            if (this.allowLoose && loose && this.#offset + length <= this.#data.length) {\n                alignedLength = length;\n            }\n            else {\n                assert(false, \"data out-of-bounds\", \"BUFFER_OVERRUN\", {\n                    buffer: getBytesCopy(this.#data),\n                    length: this.#data.length,\n                    offset: this.#offset + alignedLength\n                });\n            }\n        }\n        return this.#data.slice(this.#offset, this.#offset + alignedLength);\n    }\n    // Create a sub-reader with the same underlying data, but offset\n    subReader(offset) {\n        return new Reader(this.#data.slice(this.#offset + offset), this.allowLoose);\n    }\n    // Read bytes\n    readBytes(length, loose) {\n        let bytes = this.#peekBytes(0, length, !!loose);\n        this.#offset += bytes.length;\n        // @TODO: Make sure the length..end bytes are all 0?\n        return bytes.slice(0, length);\n    }\n    // Read a numeric values\n    readValue() {\n        return toBigInt(this.readBytes(WordSize));\n    }\n    readIndex() {\n        return toNumber(this.readBytes(WordSize));\n    }\n}\n//# sourceMappingURL=abstract-coder.js.map","export function number(n) {\n    if (!Number.isSafeInteger(n) || n < 0)\n        throw new Error(`Wrong positive integer: ${n}`);\n}\nexport function bool(b) {\n    if (typeof b !== 'boolean')\n        throw new Error(`Expected boolean, not ${b}`);\n}\nexport function bytes(b, ...lengths) {\n    if (!(b instanceof Uint8Array))\n        throw new TypeError('Expected Uint8Array');\n    if (lengths.length > 0 && !lengths.includes(b.length))\n        throw new TypeError(`Expected Uint8Array of length ${lengths}, not of length=${b.length}`);\n}\nexport function hash(hash) {\n    if (typeof hash !== 'function' || typeof hash.create !== 'function')\n        throw new Error('Hash should be wrapped by utils.wrapConstructor');\n    number(hash.outputLen);\n    number(hash.blockLen);\n}\nexport function exists(instance, checkFinished = true) {\n    if (instance.destroyed)\n        throw new Error('Hash instance has been destroyed');\n    if (checkFinished && instance.finished)\n        throw new Error('Hash#digest() has already been called');\n}\nexport function output(out, instance) {\n    bytes(out);\n    const min = instance.outputLen;\n    if (out.length < min) {\n        throw new Error(`digestInto() expects output buffer of length at least ${min}`);\n    }\n}\nconst assert = {\n    number,\n    bool,\n    bytes,\n    hash,\n    exists,\n    output,\n};\nexport default assert;\n","const U32_MASK64 = BigInt(2 ** 32 - 1);\nconst _32n = BigInt(32);\n// We are not using BigUint64Array, because they are extremely slow as per 2022\nexport function fromBig(n, le = false) {\n    if (le)\n        return { h: Number(n & U32_MASK64), l: Number((n >> _32n) & U32_MASK64) };\n    return { h: Number((n >> _32n) & U32_MASK64) | 0, l: Number(n & U32_MASK64) | 0 };\n}\nexport function split(lst, le = false) {\n    let Ah = new Uint32Array(lst.length);\n    let Al = new Uint32Array(lst.length);\n    for (let i = 0; i < lst.length; i++) {\n        const { h, l } = fromBig(lst[i], le);\n        [Ah[i], Al[i]] = [h, l];\n    }\n    return [Ah, Al];\n}\nexport const toBig = (h, l) => (BigInt(h >>> 0) << _32n) | BigInt(l >>> 0);\n// for Shift in [0, 32)\nconst shrSH = (h, l, s) => h >>> s;\nconst shrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in [1, 32)\nconst rotrSH = (h, l, s) => (h >>> s) | (l << (32 - s));\nconst rotrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotrBH = (h, l, s) => (h << (64 - s)) | (l >>> (s - 32));\nconst rotrBL = (h, l, s) => (h >>> (s - 32)) | (l << (64 - s));\n// Right rotate for shift===32 (just swaps l&h)\nconst rotr32H = (h, l) => l;\nconst rotr32L = (h, l) => h;\n// Left rotate for Shift in [1, 32)\nconst rotlSH = (h, l, s) => (h << s) | (l >>> (32 - s));\nconst rotlSL = (h, l, s) => (l << s) | (h >>> (32 - s));\n// Left rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotlBH = (h, l, s) => (l << (s - 32)) | (h >>> (64 - s));\nconst rotlBL = (h, l, s) => (h << (s - 32)) | (l >>> (64 - s));\n// JS uses 32-bit signed integers for bitwise operations which means we cannot\n// simple take carry out of low bit sum by shift, we need to use division.\n// Removing \"export\" has 5% perf penalty -_-\nexport function add(Ah, Al, Bh, Bl) {\n    const l = (Al >>> 0) + (Bl >>> 0);\n    return { h: (Ah + Bh + ((l / 2 ** 32) | 0)) | 0, l: l | 0 };\n}\n// Addition with more than 2 elements\nconst add3L = (Al, Bl, Cl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0);\nconst add3H = (low, Ah, Bh, Ch) => (Ah + Bh + Ch + ((low / 2 ** 32) | 0)) | 0;\nconst add4L = (Al, Bl, Cl, Dl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0);\nconst add4H = (low, Ah, Bh, Ch, Dh) => (Ah + Bh + Ch + Dh + ((low / 2 ** 32) | 0)) | 0;\nconst add5L = (Al, Bl, Cl, Dl, El) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0) + (El >>> 0);\nconst add5H = (low, Ah, Bh, Ch, Dh, Eh) => (Ah + Bh + Ch + Dh + Eh + ((low / 2 ** 32) | 0)) | 0;\n// prettier-ignore\nconst u64 = {\n    fromBig, split, toBig,\n    shrSH, shrSL,\n    rotrSH, rotrSL, rotrBH, rotrBL,\n    rotr32H, rotr32L,\n    rotlSH, rotlSL, rotlBH, rotlBL,\n    add, add3L, add3H, add4L, add4H, add5H, add5L,\n};\nexport default u64;\n","export const crypto = {\n    node: undefined,\n    web: typeof self === 'object' && 'crypto' in self ? self.crypto : undefined,\n};\n","/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// The import here is via the package name. This is to ensure\n// that exports mapping/resolution does fall into place.\nimport { crypto } from '@noble/hashes/crypto';\n// Cast array to different type\nexport const u8 = (arr) => new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);\nexport const u32 = (arr) => new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));\n// Cast array to view\nexport const createView = (arr) => new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\n// The rotate right (circular right shift) operation for uint32\nexport const rotr = (word, shift) => (word << (32 - shift)) | (word >>> shift);\nexport const isLE = new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44;\n// There is almost no big endian hardware, but js typed arrays uses platform specific endianness.\n// So, just to be sure not to corrupt anything.\nif (!isLE)\n    throw new Error('Non little-endian hardware is not supported');\nconst hexes = Array.from({ length: 256 }, (v, i) => i.toString(16).padStart(2, '0'));\n/**\n * @example bytesToHex(Uint8Array.from([0xde, 0xad, 0xbe, 0xef]))\n */\nexport function bytesToHex(uint8a) {\n    // pre-caching improves the speed 6x\n    if (!(uint8a instanceof Uint8Array))\n        throw new Error('Uint8Array expected');\n    let hex = '';\n    for (let i = 0; i < uint8a.length; i++) {\n        hex += hexes[uint8a[i]];\n    }\n    return hex;\n}\n/**\n * @example hexToBytes('deadbeef')\n */\nexport function hexToBytes(hex) {\n    if (typeof hex !== 'string') {\n        throw new TypeError('hexToBytes: expected string, got ' + typeof hex);\n    }\n    if (hex.length % 2)\n        throw new Error('hexToBytes: received invalid unpadded hex');\n    const array = new Uint8Array(hex.length / 2);\n    for (let i = 0; i < array.length; i++) {\n        const j = i * 2;\n        const hexByte = hex.slice(j, j + 2);\n        const byte = Number.parseInt(hexByte, 16);\n        if (Number.isNaN(byte) || byte < 0)\n            throw new Error('Invalid byte sequence');\n        array[i] = byte;\n    }\n    return array;\n}\n// There is no setImmediate in browser and setTimeout is slow. However, call to async function will return Promise\n// which will be fullfiled only on next scheduler queue processing step and this is exactly what we need.\nexport const nextTick = async () => { };\n// Returns control to thread each 'tick' ms to avoid blocking\nexport async function asyncLoop(iters, tick, cb) {\n    let ts = Date.now();\n    for (let i = 0; i < iters; i++) {\n        cb(i);\n        // Date.now() is not monotonic, so in case if clock goes backwards we return return control too\n        const diff = Date.now() - ts;\n        if (diff >= 0 && diff < tick)\n            continue;\n        await nextTick();\n        ts += diff;\n    }\n}\nexport function utf8ToBytes(str) {\n    if (typeof str !== 'string') {\n        throw new TypeError(`utf8ToBytes expected string, got ${typeof str}`);\n    }\n    return new TextEncoder().encode(str);\n}\nexport function toBytes(data) {\n    if (typeof data === 'string')\n        data = utf8ToBytes(data);\n    if (!(data instanceof Uint8Array))\n        throw new TypeError(`Expected input type is Uint8Array (got ${typeof data})`);\n    return data;\n}\n/**\n * Concats Uint8Array-s into one; like `Buffer.concat([buf1, buf2])`\n * @example concatBytes(buf1, buf2)\n */\nexport function concatBytes(...arrays) {\n    if (!arrays.every((a) => a instanceof Uint8Array))\n        throw new Error('Uint8Array list expected');\n    if (arrays.length === 1)\n        return arrays[0];\n    const length = arrays.reduce((a, arr) => a + arr.length, 0);\n    const result = new Uint8Array(length);\n    for (let i = 0, pad = 0; i < arrays.length; i++) {\n        const arr = arrays[i];\n        result.set(arr, pad);\n        pad += arr.length;\n    }\n    return result;\n}\n// For runtime check if class implements interface\nexport class Hash {\n    // Safe version that clones internal state\n    clone() {\n        return this._cloneInto();\n    }\n}\n// Check if object doens't have custom constructor (like Uint8Array/Array)\nconst isPlainObject = (obj) => Object.prototype.toString.call(obj) === '[object Object]' && obj.constructor === Object;\nexport function checkOpts(defaults, opts) {\n    if (opts !== undefined && (typeof opts !== 'object' || !isPlainObject(opts)))\n        throw new TypeError('Options should be object or undefined');\n    const merged = Object.assign(defaults, opts);\n    return merged;\n}\nexport function wrapConstructor(hashConstructor) {\n    const hashC = (message) => hashConstructor().update(toBytes(message)).digest();\n    const tmp = hashConstructor();\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = () => hashConstructor();\n    return hashC;\n}\nexport function wrapConstructorWithOpts(hashCons) {\n    const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();\n    const tmp = hashCons({});\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = (opts) => hashCons(opts);\n    return hashC;\n}\n/**\n * Secure PRNG\n */\nexport function randomBytes(bytesLength = 32) {\n    if (crypto.web) {\n        return crypto.web.getRandomValues(new Uint8Array(bytesLength));\n    }\n    else if (crypto.node) {\n        return new Uint8Array(crypto.node.randomBytes(bytesLength).buffer);\n    }\n    else {\n        throw new Error(\"The environment doesn't have randomBytes function\");\n    }\n}\n","import assert from './_assert.js';\nimport u64 from './_u64.js';\nimport { Hash, u32, toBytes, wrapConstructor, wrapConstructorWithOpts, } from './utils.js';\n// Various per round constants calculations\nconst [SHA3_PI, SHA3_ROTL, _SHA3_IOTA] = [[], [], []];\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\nconst _2n = BigInt(2);\nconst _7n = BigInt(7);\nconst _256n = BigInt(256);\nconst _0x71n = BigInt(0x71);\nfor (let round = 0, R = _1n, x = 1, y = 0; round < 24; round++) {\n    // Pi\n    [x, y] = [y, (2 * x + 3 * y) % 5];\n    SHA3_PI.push(2 * (5 * y + x));\n    // Rotational\n    SHA3_ROTL.push((((round + 1) * (round + 2)) / 2) % 64);\n    // Iota\n    let t = _0n;\n    for (let j = 0; j < 7; j++) {\n        R = ((R << _1n) ^ ((R >> _7n) * _0x71n)) % _256n;\n        if (R & _2n)\n            t ^= _1n << ((_1n << BigInt(j)) - _1n);\n    }\n    _SHA3_IOTA.push(t);\n}\nconst [SHA3_IOTA_H, SHA3_IOTA_L] = u64.split(_SHA3_IOTA, true);\n// Left rotation (without 0, 32, 64)\nconst rotlH = (h, l, s) => s > 32 ? u64.rotlBH(h, l, s) : u64.rotlSH(h, l, s);\nconst rotlL = (h, l, s) => s > 32 ? u64.rotlBL(h, l, s) : u64.rotlSL(h, l, s);\n// Same as keccakf1600, but allows to skip some rounds\nexport function keccakP(s, rounds = 24) {\n    const B = new Uint32Array(5 * 2);\n    // NOTE: all indices are x2 since we store state as u32 instead of u64 (bigints to slow in js)\n    for (let round = 24 - rounds; round < 24; round++) {\n        // Theta θ\n        for (let x = 0; x < 10; x++)\n            B[x] = s[x] ^ s[x + 10] ^ s[x + 20] ^ s[x + 30] ^ s[x + 40];\n        for (let x = 0; x < 10; x += 2) {\n            const idx1 = (x + 8) % 10;\n            const idx0 = (x + 2) % 10;\n            const B0 = B[idx0];\n            const B1 = B[idx0 + 1];\n            const Th = rotlH(B0, B1, 1) ^ B[idx1];\n            const Tl = rotlL(B0, B1, 1) ^ B[idx1 + 1];\n            for (let y = 0; y < 50; y += 10) {\n                s[x + y] ^= Th;\n                s[x + y + 1] ^= Tl;\n            }\n        }\n        // Rho (ρ) and Pi (π)\n        let curH = s[2];\n        let curL = s[3];\n        for (let t = 0; t < 24; t++) {\n            const shift = SHA3_ROTL[t];\n            const Th = rotlH(curH, curL, shift);\n            const Tl = rotlL(curH, curL, shift);\n            const PI = SHA3_PI[t];\n            curH = s[PI];\n            curL = s[PI + 1];\n            s[PI] = Th;\n            s[PI + 1] = Tl;\n        }\n        // Chi (χ)\n        for (let y = 0; y < 50; y += 10) {\n            for (let x = 0; x < 10; x++)\n                B[x] = s[y + x];\n            for (let x = 0; x < 10; x++)\n                s[y + x] ^= ~B[(x + 2) % 10] & B[(x + 4) % 10];\n        }\n        // Iota (ι)\n        s[0] ^= SHA3_IOTA_H[round];\n        s[1] ^= SHA3_IOTA_L[round];\n    }\n    B.fill(0);\n}\nexport class Keccak extends Hash {\n    // NOTE: we accept arguments in bytes instead of bits here.\n    constructor(blockLen, suffix, outputLen, enableXOF = false, rounds = 24) {\n        super();\n        this.blockLen = blockLen;\n        this.suffix = suffix;\n        this.outputLen = outputLen;\n        this.enableXOF = enableXOF;\n        this.rounds = rounds;\n        this.pos = 0;\n        this.posOut = 0;\n        this.finished = false;\n        this.destroyed = false;\n        // Can be passed from user as dkLen\n        assert.number(outputLen);\n        // 1600 = 5x5 matrix of 64bit.  1600 bits === 200 bytes\n        if (0 >= this.blockLen || this.blockLen >= 200)\n            throw new Error('Sha3 supports only keccak-f1600 function');\n        this.state = new Uint8Array(200);\n        this.state32 = u32(this.state);\n    }\n    keccak() {\n        keccakP(this.state32, this.rounds);\n        this.posOut = 0;\n        this.pos = 0;\n    }\n    update(data) {\n        assert.exists(this);\n        const { blockLen, state } = this;\n        data = toBytes(data);\n        const len = data.length;\n        for (let pos = 0; pos < len;) {\n            const take = Math.min(blockLen - this.pos, len - pos);\n            for (let i = 0; i < take; i++)\n                state[this.pos++] ^= data[pos++];\n            if (this.pos === blockLen)\n                this.keccak();\n        }\n        return this;\n    }\n    finish() {\n        if (this.finished)\n            return;\n        this.finished = true;\n        const { state, suffix, pos, blockLen } = this;\n        // Do the padding\n        state[pos] ^= suffix;\n        if ((suffix & 0x80) !== 0 && pos === blockLen - 1)\n            this.keccak();\n        state[blockLen - 1] ^= 0x80;\n        this.keccak();\n    }\n    writeInto(out) {\n        assert.exists(this, false);\n        assert.bytes(out);\n        this.finish();\n        const bufferOut = this.state;\n        const { blockLen } = this;\n        for (let pos = 0, len = out.length; pos < len;) {\n            if (this.posOut >= blockLen)\n                this.keccak();\n            const take = Math.min(blockLen - this.posOut, len - pos);\n            out.set(bufferOut.subarray(this.posOut, this.posOut + take), pos);\n            this.posOut += take;\n            pos += take;\n        }\n        return out;\n    }\n    xofInto(out) {\n        // Sha3/Keccak usage with XOF is probably mistake, only SHAKE instances can do XOF\n        if (!this.enableXOF)\n            throw new Error('XOF is not possible for this instance');\n        return this.writeInto(out);\n    }\n    xof(bytes) {\n        assert.number(bytes);\n        return this.xofInto(new Uint8Array(bytes));\n    }\n    digestInto(out) {\n        assert.output(out, this);\n        if (this.finished)\n            throw new Error('digest() was already called');\n        this.writeInto(out);\n        this.destroy();\n        return out;\n    }\n    digest() {\n        return this.digestInto(new Uint8Array(this.outputLen));\n    }\n    destroy() {\n        this.destroyed = true;\n        this.state.fill(0);\n    }\n    _cloneInto(to) {\n        const { blockLen, suffix, outputLen, rounds, enableXOF } = this;\n        to || (to = new Keccak(blockLen, suffix, outputLen, enableXOF, rounds));\n        to.state32.set(this.state32);\n        to.pos = this.pos;\n        to.posOut = this.posOut;\n        to.finished = this.finished;\n        to.rounds = rounds;\n        // Suffix can change in cSHAKE\n        to.suffix = suffix;\n        to.outputLen = outputLen;\n        to.enableXOF = enableXOF;\n        to.destroyed = this.destroyed;\n        return to;\n    }\n}\nconst gen = (suffix, blockLen, outputLen) => wrapConstructor(() => new Keccak(blockLen, suffix, outputLen));\nexport const sha3_224 = gen(0x06, 144, 224 / 8);\n/**\n * SHA3-256 hash function\n * @param message - that would be hashed\n */\nexport const sha3_256 = gen(0x06, 136, 256 / 8);\nexport const sha3_384 = gen(0x06, 104, 384 / 8);\nexport const sha3_512 = gen(0x06, 72, 512 / 8);\nexport const keccak_224 = gen(0x01, 144, 224 / 8);\n/**\n * keccak-256 hash function. Different from SHA3-256.\n * @param message - that would be hashed\n */\nexport const keccak_256 = gen(0x01, 136, 256 / 8);\nexport const keccak_384 = gen(0x01, 104, 384 / 8);\nexport const keccak_512 = gen(0x01, 72, 512 / 8);\nconst genShake = (suffix, blockLen, outputLen) => wrapConstructorWithOpts((opts = {}) => new Keccak(blockLen, suffix, opts.dkLen === undefined ? outputLen : opts.dkLen, true));\nexport const shake128 = genShake(0x1f, 168, 128 / 8);\nexport const shake256 = genShake(0x1f, 136, 256 / 8);\n","/**\n *  Cryptographic hashing functions\n *\n *  @_subsection: api/crypto:Hash Functions [about-crypto-hashing]\n */\nimport { keccak_256 } from \"@noble/hashes/sha3\";\nimport { getBytes, hexlify } from \"../utils/index.js\";\nlet locked = false;\nconst _keccak256 = function (data) {\n    return keccak_256(data);\n};\nlet __keccak256 = _keccak256;\n/**\n *  Compute the cryptographic KECCAK256 hash of %%data%%.\n *\n *  The %%data%% **must** be a data representation, to compute the\n *  hash of UTF-8 data use the [[id]] function.\n *\n *  @returns DataHexstring\n *  @example:\n *    keccak256(\"0x\")\n *    //_result:\n *\n *    keccak256(\"0x1337\")\n *    //_result:\n *\n *    keccak256(new Uint8Array([ 0x13, 0x37 ]))\n *    //_result:\n *\n *    // Strings are assumed to be DataHexString, otherwise it will\n *    // throw. To hash UTF-8 data, see the note above.\n *    keccak256(\"Hello World\")\n *    //_error:\n */\nexport function keccak256(_data) {\n    const data = getBytes(_data, \"data\");\n    return hexlify(__keccak256(data));\n}\nkeccak256._ = _keccak256;\nkeccak256.lock = function () { locked = true; };\nkeccak256.register = function (func) {\n    if (locked) {\n        throw new TypeError(\"keccak256 is locked\");\n    }\n    __keccak256 = func;\n};\nObject.freeze(keccak256);\n//# sourceMappingURL=keccak.js.map","import { keccak256 } from \"../crypto/index.js\";\nimport { getBytes, assertArgument } from \"../utils/index.js\";\nconst BN_0 = BigInt(0);\nconst BN_36 = BigInt(36);\nfunction getChecksumAddress(address) {\n    //    if (!isHexString(address, 20)) {\n    //        logger.throwArgumentError(\"invalid address\", \"address\", address);\n    //    }\n    address = address.toLowerCase();\n    const chars = address.substring(2).split(\"\");\n    const expanded = new Uint8Array(40);\n    for (let i = 0; i < 40; i++) {\n        expanded[i] = chars[i].charCodeAt(0);\n    }\n    const hashed = getBytes(keccak256(expanded));\n    for (let i = 0; i < 40; i += 2) {\n        if ((hashed[i >> 1] >> 4) >= 8) {\n            chars[i] = chars[i].toUpperCase();\n        }\n        if ((hashed[i >> 1] & 0x0f) >= 8) {\n            chars[i + 1] = chars[i + 1].toUpperCase();\n        }\n    }\n    return \"0x\" + chars.join(\"\");\n}\n// See: https://en.wikipedia.org/wiki/International_Bank_Account_Number\n// Create lookup table\nconst ibanLookup = {};\nfor (let i = 0; i < 10; i++) {\n    ibanLookup[String(i)] = String(i);\n}\nfor (let i = 0; i < 26; i++) {\n    ibanLookup[String.fromCharCode(65 + i)] = String(10 + i);\n}\n// How many decimal digits can we process? (for 64-bit float, this is 15)\n// i.e. Math.floor(Math.log10(Number.MAX_SAFE_INTEGER));\nconst safeDigits = 15;\nfunction ibanChecksum(address) {\n    address = address.toUpperCase();\n    address = address.substring(4) + address.substring(0, 2) + \"00\";\n    let expanded = address.split(\"\").map((c) => { return ibanLookup[c]; }).join(\"\");\n    // Javascript can handle integers safely up to 15 (decimal) digits\n    while (expanded.length >= safeDigits) {\n        let block = expanded.substring(0, safeDigits);\n        expanded = parseInt(block, 10) % 97 + expanded.substring(block.length);\n    }\n    let checksum = String(98 - (parseInt(expanded, 10) % 97));\n    while (checksum.length < 2) {\n        checksum = \"0\" + checksum;\n    }\n    return checksum;\n}\n;\nconst Base36 = (function () {\n    ;\n    const result = {};\n    for (let i = 0; i < 36; i++) {\n        const key = \"0123456789abcdefghijklmnopqrstuvwxyz\"[i];\n        result[key] = BigInt(i);\n    }\n    return result;\n})();\nfunction fromBase36(value) {\n    value = value.toLowerCase();\n    let result = BN_0;\n    for (let i = 0; i < value.length; i++) {\n        result = result * BN_36 + Base36[value[i]];\n    }\n    return result;\n}\n/**\n *  Returns a normalized and checksumed address for %%address%%.\n *  This accepts non-checksum addresses, checksum addresses and\n *  [[getIcapAddress]] formats.\n *\n *  The checksum in Ethereum uses the capitalization (upper-case\n *  vs lower-case) of the characters within an address to encode\n *  its checksum, which offers, on average, a checksum of 15-bits.\n *\n *  If %%address%% contains both upper-case and lower-case, it is\n *  assumed to already be a checksum address and its checksum is\n *  validated, and if the address fails its expected checksum an\n *  error is thrown.\n *\n *  If you wish the checksum of %%address%% to be ignore, it should\n *  be converted to lower-case (i.e. ``.toLowercase()``) before\n *  being passed in. This should be a very rare situation though,\n *  that you wish to bypass the safegaurds in place to protect\n *  against an address that has been incorrectly copied from another\n *  source.\n *\n *  @example:\n *    // Adds the checksum (via upper-casing specific letters)\n *    getAddress(\"0x8ba1f109551bd432803012645ac136ddd64dba72\")\n *    //_result:\n *\n *    // Converts ICAP address and adds checksum\n *    getAddress(\"XE65GB6LDNXYOFTX0NSV3FUWKOWIXAMJK36\");\n *    //_result:\n *\n *    // Throws an error if an address contains mixed case,\n *    // but the checksum fails\n *    getAddress(\"0x8Ba1f109551bD432803012645Ac136ddd64DBA72\")\n *    //_error:\n */\nexport function getAddress(address) {\n    assertArgument(typeof (address) === \"string\", \"invalid address\", \"address\", address);\n    if (address.match(/^(0x)?[0-9a-fA-F]{40}$/)) {\n        // Missing the 0x prefix\n        if (address.substring(0, 2) !== \"0x\") {\n            address = \"0x\" + address;\n        }\n        const result = getChecksumAddress(address);\n        // It is a checksummed address with a bad checksum\n        assertArgument(!address.match(/([A-F].*[a-f])|([a-f].*[A-F])/) || result === address, \"bad address checksum\", \"address\", address);\n        return result;\n    }\n    // Maybe ICAP? (we only support direct mode)\n    if (address.match(/^XE[0-9]{2}[0-9A-Za-z]{30,31}$/)) {\n        // It is an ICAP address with a bad checksum\n        assertArgument(address.substring(2, 4) === ibanChecksum(address), \"bad icap checksum\", \"address\", address);\n        let result = fromBase36(address.substring(4)).toString(16);\n        while (result.length < 40) {\n            result = \"0\" + result;\n        }\n        return getChecksumAddress(\"0x\" + result);\n    }\n    assertArgument(false, \"invalid address\", \"address\", address);\n}\n/**\n *  The [ICAP Address format](link-icap) format is an early checksum\n *  format which attempts to be compatible with the banking\n *  industry [IBAN format](link-wiki-iban] for bank accounts.\n *\n *  It is no longer common or a recommended format.\n *\n *  @example:\n *    getIcapAddress(\"0x8ba1f109551bd432803012645ac136ddd64dba72\");\n *    //_result:\n *\n *    getIcapAddress(\"XE65GB6LDNXYOFTX0NSV3FUWKOWIXAMJK36\");\n *    //_result:\n *\n *    // Throws an error if the ICAP checksum is wrong\n *    getIcapAddress(\"XE65GB6LDNXYOFTX0NSV3FUWKOWIXAMJK37\");\n *    //_error:\n */\nexport function getIcapAddress(address) {\n    //let base36 = _base16To36(getAddress(address).substring(2)).toUpperCase();\n    let base36 = BigInt(getAddress(address)).toString(36).toUpperCase();\n    while (base36.length < 30) {\n        base36 = \"0\" + base36;\n    }\n    return \"XE\" + ibanChecksum(\"XE00\" + base36) + base36;\n}\n//# sourceMappingURL=address.js.map","/**\n *  About typed...\n *\n *  @_subsection: api/abi:Typed Values\n */\nimport { assertPrivate, defineProperties } from \"../utils/index.js\";\nconst _gaurd = {};\nfunction n(value, width) {\n    let signed = false;\n    if (width < 0) {\n        signed = true;\n        width *= -1;\n    }\n    // @TODO: Check range is valid for value\n    return new Typed(_gaurd, `${signed ? \"\" : \"u\"}int${width}`, value, { signed, width });\n}\nfunction b(value, size) {\n    // @TODO: Check range is valid for value\n    return new Typed(_gaurd, `bytes${(size) ? size : \"\"}`, value, { size });\n}\nconst _typedSymbol = Symbol.for(\"_ethers_typed\");\nexport class Typed {\n    type;\n    value;\n    #options;\n    _typedSymbol;\n    constructor(gaurd, type, value, options) {\n        if (options == null) {\n            options = null;\n        }\n        assertPrivate(_gaurd, gaurd, \"Typed\");\n        defineProperties(this, { _typedSymbol, type, value });\n        this.#options = options;\n        // Check the value is valid\n        this.format();\n    }\n    format() {\n        if (this.type === \"array\") {\n            throw new Error(\"\");\n        }\n        else if (this.type === \"dynamicArray\") {\n            throw new Error(\"\");\n        }\n        else if (this.type === \"tuple\") {\n            return `tuple(${this.value.map((v) => v.format()).join(\",\")})`;\n        }\n        return this.type;\n    }\n    defaultValue() {\n        return 0;\n    }\n    minValue() {\n        return 0;\n    }\n    maxValue() {\n        return 0;\n    }\n    isBigInt() {\n        return !!(this.type.match(/^u?int[0-9]+$/));\n    }\n    isData() {\n        return (this.type.substring(0, 5) === \"bytes\");\n    }\n    isString() {\n        return (this.type === \"string\");\n    }\n    get tupleName() {\n        if (this.type !== \"tuple\") {\n            throw TypeError(\"not a tuple\");\n        }\n        return this.#options;\n    }\n    // Returns the length of this type as an array\n    // - `null` indicates the length is unforced, it could be dynamic\n    // - `-1` indicates the length is dynamic\n    // - any other value indicates it is a static array and is its length\n    get arrayLength() {\n        if (this.type !== \"array\") {\n            throw TypeError(\"not an array\");\n        }\n        if (this.#options === true) {\n            return -1;\n        }\n        if (this.#options === false) {\n            return (this.value).length;\n        }\n        return null;\n    }\n    static from(type, value) {\n        return new Typed(_gaurd, type, value);\n    }\n    static uint8(v) { return n(v, 8); }\n    static uint16(v) { return n(v, 16); }\n    static uint24(v) { return n(v, 24); }\n    static uint32(v) { return n(v, 32); }\n    static uint40(v) { return n(v, 40); }\n    static uint48(v) { return n(v, 48); }\n    static uint56(v) { return n(v, 56); }\n    static uint64(v) { return n(v, 64); }\n    static uint72(v) { return n(v, 72); }\n    static uint80(v) { return n(v, 80); }\n    static uint88(v) { return n(v, 88); }\n    static uint96(v) { return n(v, 96); }\n    static uint104(v) { return n(v, 104); }\n    static uint112(v) { return n(v, 112); }\n    static uint120(v) { return n(v, 120); }\n    static uint128(v) { return n(v, 128); }\n    static uint136(v) { return n(v, 136); }\n    static uint144(v) { return n(v, 144); }\n    static uint152(v) { return n(v, 152); }\n    static uint160(v) { return n(v, 160); }\n    static uint168(v) { return n(v, 168); }\n    static uint176(v) { return n(v, 176); }\n    static uint184(v) { return n(v, 184); }\n    static uint192(v) { return n(v, 192); }\n    static uint200(v) { return n(v, 200); }\n    static uint208(v) { return n(v, 208); }\n    static uint216(v) { return n(v, 216); }\n    static uint224(v) { return n(v, 224); }\n    static uint232(v) { return n(v, 232); }\n    static uint240(v) { return n(v, 240); }\n    static uint248(v) { return n(v, 248); }\n    static uint256(v) { return n(v, 256); }\n    static uint(v) { return n(v, 256); }\n    static int8(v) { return n(v, -8); }\n    static int16(v) { return n(v, -16); }\n    static int24(v) { return n(v, -24); }\n    static int32(v) { return n(v, -32); }\n    static int40(v) { return n(v, -40); }\n    static int48(v) { return n(v, -48); }\n    static int56(v) { return n(v, -56); }\n    static int64(v) { return n(v, -64); }\n    static int72(v) { return n(v, -72); }\n    static int80(v) { return n(v, -80); }\n    static int88(v) { return n(v, -88); }\n    static int96(v) { return n(v, -96); }\n    static int104(v) { return n(v, -104); }\n    static int112(v) { return n(v, -112); }\n    static int120(v) { return n(v, -120); }\n    static int128(v) { return n(v, -128); }\n    static int136(v) { return n(v, -136); }\n    static int144(v) { return n(v, -144); }\n    static int152(v) { return n(v, -152); }\n    static int160(v) { return n(v, -160); }\n    static int168(v) { return n(v, -168); }\n    static int176(v) { return n(v, -176); }\n    static int184(v) { return n(v, -184); }\n    static int192(v) { return n(v, -192); }\n    static int200(v) { return n(v, -200); }\n    static int208(v) { return n(v, -208); }\n    static int216(v) { return n(v, -216); }\n    static int224(v) { return n(v, -224); }\n    static int232(v) { return n(v, -232); }\n    static int240(v) { return n(v, -240); }\n    static int248(v) { return n(v, -248); }\n    static int256(v) { return n(v, -256); }\n    static int(v) { return n(v, -256); }\n    static bytes1(v) { return b(v, 1); }\n    static bytes2(v) { return b(v, 2); }\n    static bytes3(v) { return b(v, 3); }\n    static bytes4(v) { return b(v, 4); }\n    static bytes5(v) { return b(v, 5); }\n    static bytes6(v) { return b(v, 6); }\n    static bytes7(v) { return b(v, 7); }\n    static bytes8(v) { return b(v, 8); }\n    static bytes9(v) { return b(v, 9); }\n    static bytes10(v) { return b(v, 10); }\n    static bytes11(v) { return b(v, 11); }\n    static bytes12(v) { return b(v, 12); }\n    static bytes13(v) { return b(v, 13); }\n    static bytes14(v) { return b(v, 14); }\n    static bytes15(v) { return b(v, 15); }\n    static bytes16(v) { return b(v, 16); }\n    static bytes17(v) { return b(v, 17); }\n    static bytes18(v) { return b(v, 18); }\n    static bytes19(v) { return b(v, 19); }\n    static bytes20(v) { return b(v, 20); }\n    static bytes21(v) { return b(v, 21); }\n    static bytes22(v) { return b(v, 22); }\n    static bytes23(v) { return b(v, 23); }\n    static bytes24(v) { return b(v, 24); }\n    static bytes25(v) { return b(v, 25); }\n    static bytes26(v) { return b(v, 26); }\n    static bytes27(v) { return b(v, 27); }\n    static bytes28(v) { return b(v, 28); }\n    static bytes29(v) { return b(v, 29); }\n    static bytes30(v) { return b(v, 30); }\n    static bytes31(v) { return b(v, 31); }\n    static bytes32(v) { return b(v, 32); }\n    static address(v) { return new Typed(_gaurd, \"address\", v); }\n    static bool(v) { return new Typed(_gaurd, \"bool\", !!v); }\n    static bytes(v) { return new Typed(_gaurd, \"bytes\", v); }\n    static string(v) { return new Typed(_gaurd, \"string\", v); }\n    static array(v, dynamic) {\n        throw new Error(\"not implemented yet\");\n        return new Typed(_gaurd, \"array\", v, dynamic);\n    }\n    static tuple(v, name) {\n        throw new Error(\"not implemented yet\");\n        return new Typed(_gaurd, \"tuple\", v, name);\n    }\n    static overrides(v) {\n        return new Typed(_gaurd, \"overrides\", Object.assign({}, v));\n    }\n    /**\n     *  Returns true only if %%value%% is a [[Typed]] instance.\n     */\n    static isTyped(value) {\n        return (value && value._typedSymbol === _typedSymbol);\n    }\n    /**\n     *  If the value is a [[Typed]] instance, validates the underlying value\n     *  and returns it, otherwise returns value directly.\n     *\n     *  This is useful for functions that with to accept either a [[Typed]]\n     *  object or values.\n     */\n    static dereference(value, type) {\n        if (Typed.isTyped(value)) {\n            if (value.type !== type) {\n                throw new Error(`invalid type: expecetd ${type}, got ${value.type}`);\n            }\n            return value.value;\n        }\n        return value;\n    }\n}\n//# sourceMappingURL=typed.js.map","import { getAddress } from \"../../address/index.js\";\nimport { toBeHex } from \"../../utils/maths.js\";\nimport { Typed } from \"../typed.js\";\nimport { Coder } from \"./abstract-coder.js\";\n/**\n *  @_ignore\n */\nexport class AddressCoder extends Coder {\n    constructor(localName) {\n        super(\"address\", \"address\", localName, false);\n    }\n    defaultValue() {\n        return \"0x0000000000000000000000000000000000000000\";\n    }\n    encode(writer, _value) {\n        let value = Typed.dereference(_value, \"string\");\n        try {\n            value = getAddress(value);\n        }\n        catch (error) {\n            return this._throwError(error.message, _value);\n        }\n        return writer.writeValue(value);\n    }\n    decode(reader) {\n        return getAddress(toBeHex(reader.readValue(), 20));\n    }\n}\n//# sourceMappingURL=address.js.map","import { Coder } from \"./abstract-coder.js\";\n/**\n *  Clones the functionality of an existing Coder, but without a localName\n *\n *  @_ignore\n */\nexport class AnonymousCoder extends Coder {\n    coder;\n    constructor(coder) {\n        super(coder.name, coder.type, \"_\", coder.dynamic);\n        this.coder = coder;\n    }\n    defaultValue() {\n        return this.coder.defaultValue();\n    }\n    encode(writer, value) {\n        return this.coder.encode(writer, value);\n    }\n    decode(reader) {\n        return this.coder.decode(reader);\n    }\n}\n//# sourceMappingURL=anonymous.js.map","import { defineProperties, isError, assert, assertArgument, assertArgumentCount } from \"../../utils/index.js\";\nimport { Typed } from \"../typed.js\";\nimport { Coder, Result, WordSize, Writer } from \"./abstract-coder.js\";\nimport { AnonymousCoder } from \"./anonymous.js\";\n/**\n *  @_ignore\n */\nexport function pack(writer, coders, values) {\n    let arrayValues = [];\n    if (Array.isArray(values)) {\n        arrayValues = values;\n    }\n    else if (values && typeof (values) === \"object\") {\n        let unique = {};\n        arrayValues = coders.map((coder) => {\n            const name = coder.localName;\n            assert(name, \"cannot encode object for signature with missing names\", \"INVALID_ARGUMENT\", { argument: \"values\", info: { coder }, value: values });\n            assert(unique[name], \"cannot encode object for signature with duplicate names\", \"INVALID_ARGUMENT\", { argument: \"values\", info: { coder }, value: values });\n            unique[name] = true;\n            return values[name];\n        });\n    }\n    else {\n        assertArgument(false, \"invalid tuple value\", \"tuple\", values);\n    }\n    assertArgument(coders.length === arrayValues.length, \"types/value length mismatch\", \"tuple\", values);\n    let staticWriter = new Writer();\n    let dynamicWriter = new Writer();\n    let updateFuncs = [];\n    coders.forEach((coder, index) => {\n        let value = arrayValues[index];\n        if (coder.dynamic) {\n            // Get current dynamic offset (for the future pointer)\n            let dynamicOffset = dynamicWriter.length;\n            // Encode the dynamic value into the dynamicWriter\n            coder.encode(dynamicWriter, value);\n            // Prepare to populate the correct offset once we are done\n            let updateFunc = staticWriter.writeUpdatableValue();\n            updateFuncs.push((baseOffset) => {\n                updateFunc(baseOffset + dynamicOffset);\n            });\n        }\n        else {\n            coder.encode(staticWriter, value);\n        }\n    });\n    // Backfill all the dynamic offsets, now that we know the static length\n    updateFuncs.forEach((func) => { func(staticWriter.length); });\n    let length = writer.appendWriter(staticWriter);\n    length += writer.appendWriter(dynamicWriter);\n    return length;\n}\n/**\n *  @_ignore\n */\nexport function unpack(reader, coders) {\n    let values = [];\n    let keys = [];\n    // A reader anchored to this base\n    let baseReader = reader.subReader(0);\n    coders.forEach((coder) => {\n        let value = null;\n        if (coder.dynamic) {\n            let offset = reader.readIndex();\n            let offsetReader = baseReader.subReader(offset);\n            try {\n                value = coder.decode(offsetReader);\n            }\n            catch (error) {\n                // Cannot recover from this\n                if (isError(error, \"BUFFER_OVERRUN\")) {\n                    throw error;\n                }\n                value = error;\n                value.baseType = coder.name;\n                value.name = coder.localName;\n                value.type = coder.type;\n            }\n        }\n        else {\n            try {\n                value = coder.decode(reader);\n            }\n            catch (error) {\n                // Cannot recover from this\n                if (isError(error, \"BUFFER_OVERRUN\")) {\n                    throw error;\n                }\n                value = error;\n                value.baseType = coder.name;\n                value.name = coder.localName;\n                value.type = coder.type;\n            }\n        }\n        if (value == undefined) {\n            throw new Error(\"investigate\");\n        }\n        values.push(value);\n        keys.push(coder.localName || null);\n    });\n    return Result.fromItems(values, keys);\n}\n/**\n *  @_ignore\n */\nexport class ArrayCoder extends Coder {\n    coder;\n    length;\n    constructor(coder, length, localName) {\n        const type = (coder.type + \"[\" + (length >= 0 ? length : \"\") + \"]\");\n        const dynamic = (length === -1 || coder.dynamic);\n        super(\"array\", type, localName, dynamic);\n        defineProperties(this, { coder, length });\n    }\n    defaultValue() {\n        // Verifies the child coder is valid (even if the array is dynamic or 0-length)\n        const defaultChild = this.coder.defaultValue();\n        const result = [];\n        for (let i = 0; i < this.length; i++) {\n            result.push(defaultChild);\n        }\n        return result;\n    }\n    encode(writer, _value) {\n        const value = Typed.dereference(_value, \"array\");\n        if (!Array.isArray(value)) {\n            this._throwError(\"expected array value\", value);\n        }\n        let count = this.length;\n        if (count === -1) {\n            count = value.length;\n            writer.writeValue(value.length);\n        }\n        assertArgumentCount(value.length, count, \"coder array\" + (this.localName ? (\" \" + this.localName) : \"\"));\n        let coders = [];\n        for (let i = 0; i < value.length; i++) {\n            coders.push(this.coder);\n        }\n        return pack(writer, coders, value);\n    }\n    decode(reader) {\n        let count = this.length;\n        if (count === -1) {\n            count = reader.readIndex();\n            // Check that there is *roughly* enough data to ensure\n            // stray random data is not being read as a length. Each\n            // slot requires at least 32 bytes for their value (or 32\n            // bytes as a link to the data). This could use a much\n            // tighter bound, but we are erroring on the side of safety.\n            assert(count * WordSize <= reader.dataLength, \"insufficient data length\", \"BUFFER_OVERRUN\", { buffer: reader.bytes, offset: count * WordSize, length: reader.dataLength });\n        }\n        let coders = [];\n        for (let i = 0; i < count; i++) {\n            coders.push(new AnonymousCoder(this.coder));\n        }\n        return unpack(reader, coders);\n    }\n}\n//# sourceMappingURL=array.js.map","import { Typed } from \"../typed.js\";\nimport { Coder } from \"./abstract-coder.js\";\n/**\n *  @_ignore\n */\nexport class BooleanCoder extends Coder {\n    constructor(localName) {\n        super(\"bool\", \"bool\", localName, false);\n    }\n    defaultValue() {\n        return false;\n    }\n    encode(writer, _value) {\n        const value = Typed.dereference(_value, \"bool\");\n        return writer.writeValue(value ? 1 : 0);\n    }\n    decode(reader) {\n        return !!reader.readValue();\n    }\n}\n//# sourceMappingURL=boolean.js.map","import { getBytesCopy, hexlify } from \"../../utils/index.js\";\nimport { Coder } from \"./abstract-coder.js\";\n/**\n *  @_ignore\n */\nexport class DynamicBytesCoder extends Coder {\n    constructor(type, localName) {\n        super(type, type, localName, true);\n    }\n    defaultValue() {\n        return \"0x\";\n    }\n    encode(writer, value) {\n        value = getBytesCopy(value);\n        let length = writer.writeValue(value.length);\n        length += writer.writeBytes(value);\n        return length;\n    }\n    decode(reader) {\n        return reader.readBytes(reader.readIndex(), true);\n    }\n}\n/**\n *  @_ignore\n */\nexport class BytesCoder extends DynamicBytesCoder {\n    constructor(localName) {\n        super(\"bytes\", localName);\n    }\n    decode(reader) {\n        return hexlify(super.decode(reader));\n    }\n}\n//# sourceMappingURL=bytes.js.map","import { defineProperties, getBytesCopy, hexlify } from \"../../utils/index.js\";\nimport { Typed } from \"../typed.js\";\nimport { Coder } from \"./abstract-coder.js\";\n/**\n *  @_ignore\n */\nexport class FixedBytesCoder extends Coder {\n    size;\n    constructor(size, localName) {\n        let name = \"bytes\" + String(size);\n        super(name, name, localName, false);\n        defineProperties(this, { size }, { size: \"number\" });\n    }\n    defaultValue() {\n        return (\"0x0000000000000000000000000000000000000000000000000000000000000000\").substring(0, 2 + this.size * 2);\n    }\n    encode(writer, _value) {\n        let data = getBytesCopy(Typed.dereference(_value, this.type));\n        if (data.length !== this.size) {\n            this._throwError(\"incorrect data length\", _value);\n        }\n        return writer.writeBytes(data);\n    }\n    decode(reader) {\n        return hexlify(reader.readBytes(this.size));\n    }\n}\n//# sourceMappingURL=fixed-bytes.js.map","import { Coder } from \"./abstract-coder.js\";\nconst Empty = new Uint8Array([]);\n/**\n *  @_ignore\n */\nexport class NullCoder extends Coder {\n    constructor(localName) {\n        super(\"null\", \"\", localName, false);\n    }\n    defaultValue() {\n        return null;\n    }\n    encode(writer, value) {\n        if (value != null) {\n            this._throwError(\"not null\", value);\n        }\n        return writer.writeBytes(Empty);\n    }\n    decode(reader) {\n        reader.readBytes(0);\n        return null;\n    }\n}\n//# sourceMappingURL=null.js.map","import { defineProperties, fromTwos, getBigInt, mask, toTwos } from \"../../utils/index.js\";\nimport { Typed } from \"../typed.js\";\nimport { Coder, WordSize } from \"./abstract-coder.js\";\nconst BN_0 = BigInt(0);\nconst BN_1 = BigInt(1);\nconst BN_MAX_UINT256 = BigInt(\"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\");\n/**\n *  @_ignore\n */\nexport class NumberCoder extends Coder {\n    size;\n    signed;\n    constructor(size, signed, localName) {\n        const name = ((signed ? \"int\" : \"uint\") + (size * 8));\n        super(name, name, localName, false);\n        defineProperties(this, { size, signed }, { size: \"number\", signed: \"boolean\" });\n    }\n    defaultValue() {\n        return 0;\n    }\n    encode(writer, _value) {\n        let value = getBigInt(Typed.dereference(_value, this.type));\n        // Check bounds are safe for encoding\n        let maxUintValue = mask(BN_MAX_UINT256, WordSize * 8);\n        if (this.signed) {\n            let bounds = mask(maxUintValue, (this.size * 8) - 1);\n            if (value > bounds || value < -(bounds + BN_1)) {\n                this._throwError(\"value out-of-bounds\", _value);\n            }\n            value = toTwos(value, 8 * WordSize);\n        }\n        else if (value < BN_0 || value > mask(maxUintValue, this.size * 8)) {\n            this._throwError(\"value out-of-bounds\", _value);\n        }\n        return writer.writeValue(value);\n    }\n    decode(reader) {\n        let value = mask(reader.readValue(), this.size * 8);\n        if (this.signed) {\n            value = fromTwos(value, this.size * 8);\n        }\n        return value;\n    }\n}\n//# sourceMappingURL=number.js.map","/**\n *  Using strings in Ethereum (or any security-basd system) requires\n *  additional care. These utilities attempt to mitigate some of the\n *  safety issues as well as provide the ability to recover and analyse\n *  strings.\n *\n *  @_subsection api/utils:Strings and UTF-8  [about-strings]\n */\nimport { getBytes } from \"./data.js\";\nimport { assertArgument, assertNormalize } from \"./errors.js\";\nfunction errorFunc(reason, offset, bytes, output, badCodepoint) {\n    assertArgument(false, `invalid codepoint at offset ${offset}; ${reason}`, \"bytes\", bytes);\n}\nfunction ignoreFunc(reason, offset, bytes, output, badCodepoint) {\n    // If there is an invalid prefix (including stray continuation), skip any additional continuation bytes\n    if (reason === \"BAD_PREFIX\" || reason === \"UNEXPECTED_CONTINUE\") {\n        let i = 0;\n        for (let o = offset + 1; o < bytes.length; o++) {\n            if (bytes[o] >> 6 !== 0x02) {\n                break;\n            }\n            i++;\n        }\n        return i;\n    }\n    // This byte runs us past the end of the string, so just jump to the end\n    // (but the first byte was read already read and therefore skipped)\n    if (reason === \"OVERRUN\") {\n        return bytes.length - offset - 1;\n    }\n    // Nothing to skip\n    return 0;\n}\nfunction replaceFunc(reason, offset, bytes, output, badCodepoint) {\n    // Overlong representations are otherwise \"valid\" code points; just non-deistingtished\n    if (reason === \"OVERLONG\") {\n        assertArgument(typeof (badCodepoint) === \"number\", \"invalid bad code point for replacement\", \"badCodepoint\", badCodepoint);\n        output.push(badCodepoint);\n        return 0;\n    }\n    // Put the replacement character into the output\n    output.push(0xfffd);\n    // Otherwise, process as if ignoring errors\n    return ignoreFunc(reason, offset, bytes, output, badCodepoint);\n}\n// Common error handing strategies\nexport const Utf8ErrorFuncs = Object.freeze({\n    error: errorFunc,\n    ignore: ignoreFunc,\n    replace: replaceFunc\n});\n// http://stackoverflow.com/questions/13356493/decode-utf-8-with-javascript#13691499\nfunction getUtf8CodePoints(_bytes, onError) {\n    if (onError == null) {\n        onError = Utf8ErrorFuncs.error;\n    }\n    const bytes = getBytes(_bytes, \"bytes\");\n    const result = [];\n    let i = 0;\n    // Invalid bytes are ignored\n    while (i < bytes.length) {\n        const c = bytes[i++];\n        // 0xxx xxxx\n        if (c >> 7 === 0) {\n            result.push(c);\n            continue;\n        }\n        // Multibyte; how many bytes left for this character?\n        let extraLength = null;\n        let overlongMask = null;\n        // 110x xxxx 10xx xxxx\n        if ((c & 0xe0) === 0xc0) {\n            extraLength = 1;\n            overlongMask = 0x7f;\n            // 1110 xxxx 10xx xxxx 10xx xxxx\n        }\n        else if ((c & 0xf0) === 0xe0) {\n            extraLength = 2;\n            overlongMask = 0x7ff;\n            // 1111 0xxx 10xx xxxx 10xx xxxx 10xx xxxx\n        }\n        else if ((c & 0xf8) === 0xf0) {\n            extraLength = 3;\n            overlongMask = 0xffff;\n        }\n        else {\n            if ((c & 0xc0) === 0x80) {\n                i += onError(\"UNEXPECTED_CONTINUE\", i - 1, bytes, result);\n            }\n            else {\n                i += onError(\"BAD_PREFIX\", i - 1, bytes, result);\n            }\n            continue;\n        }\n        // Do we have enough bytes in our data?\n        if (i - 1 + extraLength >= bytes.length) {\n            i += onError(\"OVERRUN\", i - 1, bytes, result);\n            continue;\n        }\n        // Remove the length prefix from the char\n        let res = c & ((1 << (8 - extraLength - 1)) - 1);\n        for (let j = 0; j < extraLength; j++) {\n            let nextChar = bytes[i];\n            // Invalid continuation byte\n            if ((nextChar & 0xc0) != 0x80) {\n                i += onError(\"MISSING_CONTINUE\", i, bytes, result);\n                res = null;\n                break;\n            }\n            ;\n            res = (res << 6) | (nextChar & 0x3f);\n            i++;\n        }\n        // See above loop for invalid continuation byte\n        if (res === null) {\n            continue;\n        }\n        // Maximum code point\n        if (res > 0x10ffff) {\n            i += onError(\"OUT_OF_RANGE\", i - 1 - extraLength, bytes, result, res);\n            continue;\n        }\n        // Reserved for UTF-16 surrogate halves\n        if (res >= 0xd800 && res <= 0xdfff) {\n            i += onError(\"UTF16_SURROGATE\", i - 1 - extraLength, bytes, result, res);\n            continue;\n        }\n        // Check for overlong sequences (more bytes than needed)\n        if (res <= overlongMask) {\n            i += onError(\"OVERLONG\", i - 1 - extraLength, bytes, result, res);\n            continue;\n        }\n        result.push(res);\n    }\n    return result;\n}\n// http://stackoverflow.com/questions/18729405/how-to-convert-utf8-string-to-byte-array\n/**\n *  Returns the UTF-8 byte representation of %%str%%.\n *\n *  If %%form%% is specified, the string is normalized.\n */\nexport function toUtf8Bytes(str, form) {\n    if (form != null) {\n        assertNormalize(form);\n        str = str.normalize(form);\n    }\n    let result = [];\n    for (let i = 0; i < str.length; i++) {\n        const c = str.charCodeAt(i);\n        if (c < 0x80) {\n            result.push(c);\n        }\n        else if (c < 0x800) {\n            result.push((c >> 6) | 0xc0);\n            result.push((c & 0x3f) | 0x80);\n        }\n        else if ((c & 0xfc00) == 0xd800) {\n            i++;\n            const c2 = str.charCodeAt(i);\n            assertArgument(i < str.length && ((c2 & 0xfc00) === 0xdc00), \"invalid surrogate pair\", \"str\", str);\n            // Surrogate Pair\n            const pair = 0x10000 + ((c & 0x03ff) << 10) + (c2 & 0x03ff);\n            result.push((pair >> 18) | 0xf0);\n            result.push(((pair >> 12) & 0x3f) | 0x80);\n            result.push(((pair >> 6) & 0x3f) | 0x80);\n            result.push((pair & 0x3f) | 0x80);\n        }\n        else {\n            result.push((c >> 12) | 0xe0);\n            result.push(((c >> 6) & 0x3f) | 0x80);\n            result.push((c & 0x3f) | 0x80);\n        }\n    }\n    return new Uint8Array(result);\n}\n;\n//export \nfunction _toUtf8String(codePoints) {\n    return codePoints.map((codePoint) => {\n        if (codePoint <= 0xffff) {\n            return String.fromCharCode(codePoint);\n        }\n        codePoint -= 0x10000;\n        return String.fromCharCode((((codePoint >> 10) & 0x3ff) + 0xd800), ((codePoint & 0x3ff) + 0xdc00));\n    }).join(\"\");\n}\n/**\n *  Returns the string represented by the UTF-8 data %%bytes%%.\n *\n *  When %%onError%% function is specified, it is called on UTF-8\n *  errors allowing recovery using the [[Utf8ErrorFunc]] API.\n *  (default: [error](Utf8ErrorFuncs-error))\n */\nexport function toUtf8String(bytes, onError) {\n    return _toUtf8String(getUtf8CodePoints(bytes, onError));\n}\n/**\n *  Returns the UTF-8 code-points for %%str%%.\n *\n *  If %%form%% is specified, the string is normalized.\n */\nexport function toUtf8CodePoints(str, form) {\n    return getUtf8CodePoints(toUtf8Bytes(str, form));\n}\n//# sourceMappingURL=utf8.js.map","import { toUtf8Bytes, toUtf8String } from \"../../utils/utf8.js\";\nimport { Typed } from \"../typed.js\";\nimport { DynamicBytesCoder } from \"./bytes.js\";\n/**\n *  @_ignore\n */\nexport class StringCoder extends DynamicBytesCoder {\n    constructor(localName) {\n        super(\"string\", localName);\n    }\n    defaultValue() {\n        return \"\";\n    }\n    encode(writer, _value) {\n        return super.encode(writer, toUtf8Bytes(Typed.dereference(_value, \"string\")));\n    }\n    decode(reader) {\n        return toUtf8String(super.decode(reader));\n    }\n}\n//# sourceMappingURL=string.js.map","import { defineProperties } from \"../../utils/properties.js\";\nimport { Typed } from \"../typed.js\";\nimport { Coder } from \"./abstract-coder.js\";\nimport { pack, unpack } from \"./array.js\";\n/**\n *  @_ignore\n */\nexport class TupleCoder extends Coder {\n    coders;\n    constructor(coders, localName) {\n        let dynamic = false;\n        const types = [];\n        coders.forEach((coder) => {\n            if (coder.dynamic) {\n                dynamic = true;\n            }\n            types.push(coder.type);\n        });\n        const type = (\"tuple(\" + types.join(\",\") + \")\");\n        super(\"tuple\", type, localName, dynamic);\n        defineProperties(this, { coders: Object.freeze(coders.slice()) });\n    }\n    defaultValue() {\n        const values = [];\n        this.coders.forEach((coder) => {\n            values.push(coder.defaultValue());\n        });\n        // We only output named properties for uniquely named coders\n        const uniqueNames = this.coders.reduce((accum, coder) => {\n            const name = coder.localName;\n            if (name) {\n                if (!accum[name]) {\n                    accum[name] = 0;\n                }\n                accum[name]++;\n            }\n            return accum;\n        }, {});\n        // Add named values\n        this.coders.forEach((coder, index) => {\n            let name = coder.localName;\n            if (!name || uniqueNames[name] !== 1) {\n                return;\n            }\n            if (name === \"length\") {\n                name = \"_length\";\n            }\n            if (values[name] != null) {\n                return;\n            }\n            values[name] = values[index];\n        });\n        return Object.freeze(values);\n    }\n    encode(writer, _value) {\n        const value = Typed.dereference(_value, \"tuple\");\n        return pack(writer, this.coders, value);\n    }\n    decode(reader) {\n        return unpack(reader, this.coders);\n    }\n}\n//# sourceMappingURL=tuple.js.map","import { keccak256 } from \"../crypto/index.js\";\nimport { toUtf8Bytes } from \"../utils/index.js\";\n/**\n *  A simple hashing function which operates on UTF-8 strings to\n *  compute an 32-byte irentifier.\n *\n *  This simply computes the [UTF-8 bytes](toUtf8Bytes) and computes\n *  the [[keccak256]].\n *\n *  @example:\n *    id(\"hello world\")\n *    //_result:\n */\nexport function id(value) {\n    return keccak256(toUtf8Bytes(value));\n}\n//# sourceMappingURL=id.js.map","/**\n *  About frgaments...\n *\n *  @_subsection api/abi/abi-coder:Fragments\n */\nimport { defineProperties, getBigInt, getNumber, assert, assertPrivate, assertArgument } from \"../utils/index.js\";\nimport { id } from \"../hash/index.js\";\n;\n// [ \"a\", \"b\" ] => { \"a\": 1, \"b\": 1 }\nfunction setify(items) {\n    const result = new Set();\n    items.forEach((k) => result.add(k));\n    return Object.freeze(result);\n}\n// Visibility Keywords\nconst _kwVisib = \"constant external internal payable private public pure view\";\nconst KwVisib = setify(_kwVisib.split(\" \"));\nconst _kwTypes = \"constructor error event fallback function receive struct\";\nconst KwTypes = setify(_kwTypes.split(\" \"));\nconst _kwModifiers = \"calldata memory storage payable indexed\";\nconst KwModifiers = setify(_kwModifiers.split(\" \"));\nconst _kwOther = \"tuple returns\";\n// All Keywords\nconst _keywords = [_kwTypes, _kwModifiers, _kwOther, _kwVisib].join(\" \");\nconst Keywords = setify(_keywords.split(\" \"));\n// Single character tokens\nconst SimpleTokens = {\n    \"(\": \"OPEN_PAREN\", \")\": \"CLOSE_PAREN\",\n    \"[\": \"OPEN_BRACKET\", \"]\": \"CLOSE_BRACKET\",\n    \",\": \"COMMA\", \"@\": \"AT\"\n};\n// Parser regexes to consume the next token\nconst regexWhitespacePrefix = new RegExp(\"^(\\\\s*)\");\nconst regexNumberPrefix = new RegExp(\"^([0-9]+)\");\nconst regexIdPrefix = new RegExp(\"^([a-zA-Z$_][a-zA-Z0-9$_]*)\");\n// Parser regexs to check validity\nconst regexId = new RegExp(\"^([a-zA-Z$_][a-zA-Z0-9$_]*)$\");\nconst regexType = new RegExp(\"^(address|bool|bytes([0-9]*)|string|u?int([0-9]*))$\");\nclass TokenString {\n    #offset;\n    #tokens;\n    get offset() { return this.#offset; }\n    get length() { return this.#tokens.length - this.#offset; }\n    constructor(tokens) {\n        this.#offset = 0;\n        this.#tokens = tokens.slice();\n    }\n    clone() { return new TokenString(this.#tokens); }\n    reset() { this.#offset = 0; }\n    #subTokenString(from = 0, to = 0) {\n        return new TokenString(this.#tokens.slice(from, to).map((t) => {\n            return Object.freeze(Object.assign({}, t, {\n                match: (t.match - from),\n                linkBack: (t.linkBack - from),\n                linkNext: (t.linkNext - from),\n            }));\n            return t;\n        }));\n    }\n    // Pops and returns the value of the next token, if it is a keyword in allowed; throws if out of tokens\n    popKeyword(allowed) {\n        const top = this.peek();\n        if (top.type !== \"KEYWORD\" || !allowed.has(top.text)) {\n            throw new Error(`expected keyword ${top.text}`);\n        }\n        return this.pop().text;\n    }\n    // Pops and returns the value of the next token if it is `type`; throws if out of tokens\n    popType(type) {\n        if (this.peek().type !== type) {\n            throw new Error(`expected ${type}; got ${JSON.stringify(this.peek())}`);\n        }\n        return this.pop().text;\n    }\n    // Pops and returns a \"(\" TOKENS \")\"\n    popParen() {\n        const top = this.peek();\n        if (top.type !== \"OPEN_PAREN\") {\n            throw new Error(\"bad start\");\n        }\n        const result = this.#subTokenString(this.#offset + 1, top.match + 1);\n        this.#offset = top.match + 1;\n        return result;\n    }\n    // Pops and returns the items within \"(\" ITEM1 \",\" ITEM2 \",\" ... \")\"\n    popParams() {\n        const top = this.peek();\n        if (top.type !== \"OPEN_PAREN\") {\n            throw new Error(\"bad start\");\n        }\n        const result = [];\n        while (this.#offset < top.match - 1) {\n            const link = this.peek().linkNext;\n            result.push(this.#subTokenString(this.#offset + 1, link));\n            this.#offset = link;\n        }\n        this.#offset = top.match + 1;\n        return result;\n    }\n    // Returns the top Token, throwing if out of tokens\n    peek() {\n        if (this.#offset >= this.#tokens.length) {\n            throw new Error(\"out-of-bounds\");\n        }\n        return this.#tokens[this.#offset];\n    }\n    // Returns the next value, if it is a keyword in `allowed`\n    peekKeyword(allowed) {\n        const top = this.peekType(\"KEYWORD\");\n        return (top != null && allowed.has(top)) ? top : null;\n    }\n    // Returns the value of the next token if it is `type`\n    peekType(type) {\n        if (this.length === 0) {\n            return null;\n        }\n        const top = this.peek();\n        return (top.type === type) ? top.text : null;\n    }\n    // Returns the next token; throws if out of tokens\n    pop() {\n        const result = this.peek();\n        this.#offset++;\n        return result;\n    }\n    toString() {\n        const tokens = [];\n        for (let i = this.#offset; i < this.#tokens.length; i++) {\n            const token = this.#tokens[i];\n            tokens.push(`${token.type}:${token.text}`);\n        }\n        return `<TokenString ${tokens.join(\" \")}>`;\n    }\n}\nfunction lex(text) {\n    const tokens = [];\n    const throwError = (message) => {\n        const token = (offset < text.length) ? JSON.stringify(text[offset]) : \"$EOI\";\n        throw new Error(`invalid token ${token} at ${offset}: ${message}`);\n    };\n    let brackets = [];\n    let commas = [];\n    let offset = 0;\n    while (offset < text.length) {\n        // Strip off any leading whitespace\n        let cur = text.substring(offset);\n        let match = cur.match(regexWhitespacePrefix);\n        if (match) {\n            offset += match[1].length;\n            cur = text.substring(offset);\n        }\n        const token = { depth: brackets.length, linkBack: -1, linkNext: -1, match: -1, type: \"\", text: \"\", offset, value: -1 };\n        tokens.push(token);\n        let type = (SimpleTokens[cur[0]] || \"\");\n        if (type) {\n            token.type = type;\n            token.text = cur[0];\n            offset++;\n            if (type === \"OPEN_PAREN\") {\n                brackets.push(tokens.length - 1);\n                commas.push(tokens.length - 1);\n            }\n            else if (type == \"CLOSE_PAREN\") {\n                if (brackets.length === 0) {\n                    throwError(\"no matching open bracket\");\n                }\n                token.match = brackets.pop();\n                (tokens[token.match]).match = tokens.length - 1;\n                token.depth--;\n                token.linkBack = commas.pop();\n                (tokens[token.linkBack]).linkNext = tokens.length - 1;\n            }\n            else if (type === \"COMMA\") {\n                token.linkBack = commas.pop();\n                (tokens[token.linkBack]).linkNext = tokens.length - 1;\n                commas.push(tokens.length - 1);\n            }\n            else if (type === \"OPEN_BRACKET\") {\n                token.type = \"BRACKET\";\n            }\n            else if (type === \"CLOSE_BRACKET\") {\n                // Remove the CLOSE_BRACKET\n                let suffix = tokens.pop().text;\n                if (tokens.length > 0 && tokens[tokens.length - 1].type === \"NUMBER\") {\n                    const value = tokens.pop().text;\n                    suffix = value + suffix;\n                    (tokens[tokens.length - 1]).value = getNumber(value);\n                }\n                if (tokens.length === 0 || tokens[tokens.length - 1].type !== \"BRACKET\") {\n                    throw new Error(\"missing opening bracket\");\n                }\n                (tokens[tokens.length - 1]).text += suffix;\n            }\n            continue;\n        }\n        match = cur.match(regexIdPrefix);\n        if (match) {\n            token.text = match[1];\n            offset += token.text.length;\n            if (Keywords.has(token.text)) {\n                token.type = \"KEYWORD\";\n                continue;\n            }\n            if (token.text.match(regexType)) {\n                token.type = \"TYPE\";\n                continue;\n            }\n            token.type = \"ID\";\n            continue;\n        }\n        match = cur.match(regexNumberPrefix);\n        if (match) {\n            token.text = match[1];\n            token.type = \"NUMBER\";\n            offset += token.text.length;\n            continue;\n        }\n        throw new Error(`unexpected token ${JSON.stringify(cur[0])} at position ${offset}`);\n    }\n    return new TokenString(tokens.map((t) => Object.freeze(t)));\n}\n// Check only one of `allowed` is in `set`\nfunction allowSingle(set, allowed) {\n    let included = [];\n    for (const key in allowed.keys()) {\n        if (set.has(key)) {\n            included.push(key);\n        }\n    }\n    if (included.length > 1) {\n        throw new Error(`conflicting types: ${included.join(\", \")}`);\n    }\n}\n// Functions to process a Solidity Signature TokenString from left-to-right for...\n// ...the name with an optional type, returning the name\nfunction consumeName(type, tokens) {\n    if (tokens.peekKeyword(KwTypes)) {\n        const keyword = tokens.pop().text;\n        if (keyword !== type) {\n            throw new Error(`expected ${type}, got ${keyword}`);\n        }\n    }\n    return tokens.popType(\"ID\");\n}\n// ...all keywords matching allowed, returning the keywords\nfunction consumeKeywords(tokens, allowed) {\n    const keywords = new Set();\n    while (true) {\n        const keyword = tokens.peekType(\"KEYWORD\");\n        if (keyword == null || (allowed && !allowed.has(keyword))) {\n            break;\n        }\n        tokens.pop();\n        if (keywords.has(keyword)) {\n            throw new Error(`duplicate keywords: ${JSON.stringify(keyword)}`);\n        }\n        keywords.add(keyword);\n    }\n    return Object.freeze(keywords);\n}\n// ...all visibility keywords, returning the coalesced mutability\nfunction consumeMutability(tokens) {\n    let modifiers = consumeKeywords(tokens, KwVisib);\n    // Detect conflicting modifiers\n    allowSingle(modifiers, setify(\"constant payable nonpayable\".split(\" \")));\n    allowSingle(modifiers, setify(\"pure view payable nonpayable\".split(\" \")));\n    // Process mutability states\n    if (modifiers.has(\"view\")) {\n        return \"view\";\n    }\n    if (modifiers.has(\"pure\")) {\n        return \"pure\";\n    }\n    if (modifiers.has(\"payable\")) {\n        return \"payable\";\n    }\n    if (modifiers.has(\"nonpayable\")) {\n        return \"nonpayable\";\n    }\n    // Process legacy `constant` last\n    if (modifiers.has(\"constant\")) {\n        return \"view\";\n    }\n    return \"nonpayable\";\n}\n// ...a parameter list, returning the ParamType list\nfunction consumeParams(tokens, allowIndexed) {\n    return tokens.popParams().map((t) => ParamType.from(t, allowIndexed));\n}\n// ...a gas limit, returning a BigNumber or null if none\nfunction consumeGas(tokens) {\n    if (tokens.peekType(\"AT\")) {\n        tokens.pop();\n        if (tokens.peekType(\"NUMBER\")) {\n            return getBigInt(tokens.pop().text);\n        }\n        throw new Error(\"invalid gas\");\n    }\n    return null;\n}\nfunction consumeEoi(tokens) {\n    if (tokens.length) {\n        throw new Error(`unexpected tokens: ${tokens.toString()}`);\n    }\n}\nconst regexArrayType = new RegExp(/^(.*)\\[([0-9]*)\\]$/);\nfunction verifyBasicType(type) {\n    const match = type.match(regexType);\n    assertArgument(match, \"invalid type\", \"type\", type);\n    if (type === \"uint\") {\n        return \"uint256\";\n    }\n    if (type === \"int\") {\n        return \"int256\";\n    }\n    if (match[2]) {\n        // bytesXX\n        const length = parseInt(match[2]);\n        assertArgument(length !== 0 && length <= 32, \"invalid bytes length\", \"type\", type);\n    }\n    else if (match[3]) {\n        // intXX or uintXX\n        const size = parseInt(match[3]);\n        assertArgument(size !== 0 && size <= 256 && (size % 8) === 0, \"invalid numeric width\", \"type\", type);\n    }\n    return type;\n}\n// Make the Fragment constructors effectively private\nconst _guard = {};\nconst internal = Symbol.for(\"_ethers_internal\");\nconst ParamTypeInternal = \"_ParamTypeInternal\";\nconst ErrorFragmentInternal = \"_ErrorInternal\";\nconst EventFragmentInternal = \"_EventInternal\";\nconst ConstructorFragmentInternal = \"_ConstructorInternal\";\nconst FallbackFragmentInternal = \"_FallbackInternal\";\nconst FunctionFragmentInternal = \"_FunctionInternal\";\nconst StructFragmentInternal = \"_StructInternal\";\n/**\n *  Each input and output of a [[Fragment]] is an Array of **PAramType**.\n */\nexport class ParamType {\n    /**\n     *  The local name of the parameter (or ``\"\"`` if unbound)\n     */\n    name;\n    /**\n     *  The fully qualified type (e.g. ``\"address\"``, ``\"tuple(address)\"``,\n     *  ``\"uint256[3][]\"``)\n     */\n    type;\n    /**\n     *  The base type (e.g. ``\"address\"``, ``\"tuple\"``, ``\"array\"``)\n     */\n    baseType;\n    /**\n     *  True if the parameters is indexed.\n     *\n     *  For non-indexable types (see [[ParamType_isIndexable]]) this\n     *  is ``null``.\n     */\n    indexed;\n    /**\n     *  The components for the tuple.\n     *\n     *  For non-tuple types (see [[ParamType_isTuple]]) this is ``null``.\n     */\n    components;\n    /**\n     *  The array length, or ``-1`` for dynamic-lengthed arrays.\n     *\n     *  For non-array types (see [[ParamType_isArray]]) this is ``null``.\n     */\n    arrayLength;\n    /**\n     *  The type of each child in the array.\n     *\n     *  For non-array types (see [[ParamType_isArray]]) this is ``null``.\n     */\n    arrayChildren;\n    /**\n     *  @private\n     */\n    constructor(guard, name, type, baseType, indexed, components, arrayLength, arrayChildren) {\n        assertPrivate(guard, _guard, \"ParamType\");\n        Object.defineProperty(this, internal, { value: ParamTypeInternal });\n        if (components) {\n            components = Object.freeze(components.slice());\n        }\n        if (baseType === \"array\") {\n            if (arrayLength == null || arrayChildren == null) {\n                throw new Error(\"\");\n            }\n        }\n        else if (arrayLength != null || arrayChildren != null) {\n            throw new Error(\"\");\n        }\n        if (baseType === \"tuple\") {\n            if (components == null) {\n                throw new Error(\"\");\n            }\n        }\n        else if (components != null) {\n            throw new Error(\"\");\n        }\n        defineProperties(this, {\n            name, type, baseType, indexed, components, arrayLength, arrayChildren\n        });\n    }\n    /**\n     *  Return a string representation of this type.\n     *\n     *  For example,\n     *\n     *  ``sighash\" => \"(uint256,address)\"``\n     *\n     *  ``\"minimal\" => \"tuple(uint256,address) indexed\"``\n     *\n     *  ``\"full\" => \"tuple(uint256 foo, address bar) indexed baz\"``\n     */\n    format(format) {\n        if (format == null) {\n            format = \"sighash\";\n        }\n        if (format === \"json\") {\n            let result = {\n                type: ((this.baseType === \"tuple\") ? \"tuple\" : this.type),\n                name: (this.name || undefined)\n            };\n            if (typeof (this.indexed) === \"boolean\") {\n                result.indexed = this.indexed;\n            }\n            if (this.isTuple()) {\n                result.components = this.components.map((c) => JSON.parse(c.format(format)));\n            }\n            return JSON.stringify(result);\n        }\n        let result = \"\";\n        // Array\n        if (this.isArray()) {\n            result += this.arrayChildren.format(format);\n            result += `[${(this.arrayLength < 0 ? \"\" : String(this.arrayLength))}]`;\n        }\n        else {\n            if (this.isTuple()) {\n                if (format !== \"sighash\") {\n                    result += this.type;\n                }\n                result += \"(\" + this.components.map((comp) => comp.format(format)).join((format === \"full\") ? \", \" : \",\") + \")\";\n            }\n            else {\n                result += this.type;\n            }\n        }\n        if (format !== \"sighash\") {\n            if (this.indexed === true) {\n                result += \" indexed\";\n            }\n            if (format === \"full\" && this.name) {\n                result += \" \" + this.name;\n            }\n        }\n        return result;\n    }\n    /*\n     *  Returns true if %%value%% is an Array type.\n     *\n     *  This provides a type gaurd ensuring that the\n     *  [[arrayChildren]] and [[arrayLength]] are non-null.\n     */\n    //static isArray(value: any): value is { arrayChildren: ParamType, arrayLength: number } {\n    //    return value && (value.baseType === \"array\")\n    //}\n    /**\n     *  Returns true if %%this%% is an Array type.\n     *\n     *  This provides a type gaurd ensuring that [[arrayChildren]]\n     *  and [[arrayLength]] are non-null.\n     */\n    isArray() {\n        return (this.baseType === \"array\");\n    }\n    /**\n     *  Returns true if %%this%% is a Tuple type.\n     *\n     *  This provides a type gaurd ensuring that [[components]]\n     *  is non-null.\n     */\n    isTuple() {\n        return (this.baseType === \"tuple\");\n    }\n    /**\n     *  Returns true if %%this%% is an Indexable type.\n     *\n     *  This provides a type gaurd ensuring that [[indexed]]\n     *  is non-null.\n     */\n    isIndexable() {\n        return (this.indexed != null);\n    }\n    /**\n     *  Walks the **ParamType** with %%value%%, calling %%process%%\n     *  on each type, destructing the %%value%% recursively.\n     */\n    walk(value, process) {\n        if (this.isArray()) {\n            if (!Array.isArray(value)) {\n                throw new Error(\"invlaid array value\");\n            }\n            if (this.arrayLength !== -1 && value.length !== this.arrayLength) {\n                throw new Error(\"array is wrong length\");\n            }\n            const _this = this;\n            return value.map((v) => (_this.arrayChildren.walk(v, process)));\n        }\n        if (this.isTuple()) {\n            if (!Array.isArray(value)) {\n                throw new Error(\"invlaid tuple value\");\n            }\n            if (value.length !== this.components.length) {\n                throw new Error(\"array is wrong length\");\n            }\n            const _this = this;\n            return value.map((v, i) => (_this.components[i].walk(v, process)));\n        }\n        return process(this.type, value);\n    }\n    #walkAsync(promises, value, process, setValue) {\n        if (this.isArray()) {\n            if (!Array.isArray(value)) {\n                throw new Error(\"invlaid array value\");\n            }\n            if (this.arrayLength !== -1 && value.length !== this.arrayLength) {\n                throw new Error(\"array is wrong length\");\n            }\n            const childType = this.arrayChildren;\n            const result = value.slice();\n            result.forEach((value, index) => {\n                childType.#walkAsync(promises, value, process, (value) => {\n                    result[index] = value;\n                });\n            });\n            setValue(result);\n            return;\n        }\n        if (this.isTuple()) {\n            const components = this.components;\n            // Convert the object into an array\n            let result;\n            if (Array.isArray(value)) {\n                result = value.slice();\n            }\n            else {\n                if (value == null || typeof (value) !== \"object\") {\n                    throw new Error(\"invlaid tuple value\");\n                }\n                result = components.map((param) => {\n                    if (!param.name) {\n                        throw new Error(\"cannot use object value with unnamed components\");\n                    }\n                    if (!(param.name in value)) {\n                        throw new Error(`missing value for component ${param.name}`);\n                    }\n                    return value[param.name];\n                });\n            }\n            if (result.length !== this.components.length) {\n                throw new Error(\"array is wrong length\");\n            }\n            result.forEach((value, index) => {\n                components[index].#walkAsync(promises, value, process, (value) => {\n                    result[index] = value;\n                });\n            });\n            setValue(result);\n            return;\n        }\n        const result = process(this.type, value);\n        if (result.then) {\n            promises.push((async function () { setValue(await result); })());\n        }\n        else {\n            setValue(result);\n        }\n    }\n    /**\n     *  Walks the **ParamType** with %%value%%, asynchronously calling\n     *  %%process%% on each type, destructing the %%value%% recursively.\n     *\n     *  This can be used to resolve ENS naes by walking and resolving each\n     *  ``\"address\"`` type.\n     */\n    async walkAsync(value, process) {\n        const promises = [];\n        const result = [value];\n        this.#walkAsync(promises, value, process, (value) => {\n            result[0] = value;\n        });\n        if (promises.length) {\n            await Promise.all(promises);\n        }\n        return result[0];\n    }\n    /**\n     *  Creates a new **ParamType** for %%obj%%.\n     *\n     *  If %%allowIndexed%% then the ``indexed`` keyword is permitted,\n     *  otherwise the ``indexed`` keyword will throw an error.\n     */\n    static from(obj, allowIndexed) {\n        if (ParamType.isParamType(obj)) {\n            return obj;\n        }\n        if (typeof (obj) === \"string\") {\n            return ParamType.from(lex(obj), allowIndexed);\n        }\n        else if (obj instanceof TokenString) {\n            let type = \"\", baseType = \"\";\n            let comps = null;\n            if (consumeKeywords(obj, setify([\"tuple\"])).has(\"tuple\") || obj.peekType(\"OPEN_PAREN\")) {\n                // Tuple\n                baseType = \"tuple\";\n                comps = obj.popParams().map((t) => ParamType.from(t));\n                type = `tuple(${comps.map((c) => c.format()).join(\",\")})`;\n            }\n            else {\n                // Normal\n                type = verifyBasicType(obj.popType(\"TYPE\"));\n                baseType = type;\n            }\n            // Check for Array\n            let arrayChildren = null;\n            let arrayLength = null;\n            while (obj.length && obj.peekType(\"BRACKET\")) {\n                const bracket = obj.pop(); //arrays[i];\n                arrayChildren = new ParamType(_guard, \"\", type, baseType, null, comps, arrayLength, arrayChildren);\n                arrayLength = bracket.value;\n                type += bracket.text;\n                baseType = \"array\";\n                comps = null;\n            }\n            let indexed = null;\n            const keywords = consumeKeywords(obj, KwModifiers);\n            if (keywords.has(\"indexed\")) {\n                if (!allowIndexed) {\n                    throw new Error(\"\");\n                }\n                indexed = true;\n            }\n            const name = (obj.peekType(\"ID\") ? obj.pop().text : \"\");\n            if (obj.length) {\n                throw new Error(\"leftover tokens\");\n            }\n            return new ParamType(_guard, name, type, baseType, indexed, comps, arrayLength, arrayChildren);\n        }\n        const name = obj.name;\n        assertArgument(!name || (typeof (name) === \"string\" && name.match(regexId)), \"invalid name\", \"obj.name\", name);\n        let indexed = obj.indexed;\n        if (indexed != null) {\n            assertArgument(allowIndexed, \"parameter cannot be indexed\", \"obj.indexed\", obj.indexed);\n            indexed = !!indexed;\n        }\n        let type = obj.type;\n        let arrayMatch = type.match(regexArrayType);\n        if (arrayMatch) {\n            const arrayLength = parseInt(arrayMatch[2] || \"-1\");\n            const arrayChildren = ParamType.from({\n                type: arrayMatch[1],\n                components: obj.components\n            });\n            return new ParamType(_guard, name || \"\", type, \"array\", indexed, null, arrayLength, arrayChildren);\n        }\n        if (type === \"tuple\" || type.substring(0, 5) === \"tuple(\" || type[0] === \"(\") {\n            const comps = (obj.components != null) ? obj.components.map((c) => ParamType.from(c)) : null;\n            const tuple = new ParamType(_guard, name || \"\", type, \"tuple\", indexed, comps, null, null);\n            // @TODO: use lexer to validate and normalize type\n            return tuple;\n        }\n        type = verifyBasicType(obj.type);\n        return new ParamType(_guard, name || \"\", type, type, indexed, null, null, null);\n    }\n    /**\n     *  Returns true if %%value%% is a **ParamType**.\n     */\n    static isParamType(value) {\n        return (value && value[internal] === ParamTypeInternal);\n    }\n}\n/**\n *  An abstract class to represent An individual fragment from a parse ABI.\n */\nexport class Fragment {\n    /**\n     *  The type of the fragment.\n     */\n    type;\n    /**\n     *  The inputs for the fragment.\n     */\n    inputs;\n    /**\n     *  @private\n     */\n    constructor(guard, type, inputs) {\n        assertPrivate(guard, _guard, \"Fragment\");\n        inputs = Object.freeze(inputs.slice());\n        defineProperties(this, { type, inputs });\n    }\n    /**\n     *  Creates a new **Fragment** for %%obj%%, wich can be any supported\n     *  ABI frgament type.\n     */\n    static from(obj) {\n        if (typeof (obj) === \"string\") {\n            // Try parsing JSON...\n            try {\n                Fragment.from(JSON.parse(obj));\n            }\n            catch (e) { }\n            // ...otherwise, use the human-readable lexer\n            return Fragment.from(lex(obj));\n        }\n        if (obj instanceof TokenString) {\n            // Human-readable ABI (already lexed)\n            const type = obj.peekKeyword(KwTypes);\n            switch (type) {\n                case \"constructor\": return ConstructorFragment.from(obj);\n                case \"error\": return ErrorFragment.from(obj);\n                case \"event\": return EventFragment.from(obj);\n                case \"fallback\":\n                case \"receive\":\n                    return FallbackFragment.from(obj);\n                case \"function\": return FunctionFragment.from(obj);\n                case \"struct\": return StructFragment.from(obj);\n            }\n        }\n        else if (typeof (obj) === \"object\") {\n            // JSON ABI\n            switch (obj.type) {\n                case \"constructor\": return ConstructorFragment.from(obj);\n                case \"error\": return ErrorFragment.from(obj);\n                case \"event\": return EventFragment.from(obj);\n                case \"fallback\":\n                case \"receive\":\n                    return FallbackFragment.from(obj);\n                case \"function\": return FunctionFragment.from(obj);\n                case \"struct\": return StructFragment.from(obj);\n            }\n            assert(false, `unsupported type: ${obj.type}`, \"UNSUPPORTED_OPERATION\", {\n                operation: \"Fragment.from\"\n            });\n        }\n        assertArgument(false, \"unsupported frgament object\", \"obj\", obj);\n    }\n    /**\n     *  Returns true if %%value%% is a [[ConstructorFragment]].\n     */\n    static isConstructor(value) {\n        return ConstructorFragment.isFragment(value);\n    }\n    /**\n     *  Returns true if %%value%% is an [[ErrorFragment]].\n     */\n    static isError(value) {\n        return ErrorFragment.isFragment(value);\n    }\n    /**\n     *  Returns true if %%value%% is an [[EventFragment]].\n     */\n    static isEvent(value) {\n        return EventFragment.isFragment(value);\n    }\n    /**\n     *  Returns true if %%value%% is a [[FunctionFragment]].\n     */\n    static isFunction(value) {\n        return FunctionFragment.isFragment(value);\n    }\n    /**\n     *  Returns true if %%value%% is a [[StructFragment]].\n     */\n    static isStruct(value) {\n        return StructFragment.isFragment(value);\n    }\n}\n/**\n *  An abstract class to represent An individual fragment\n *  which has a name from a parse ABI.\n */\nexport class NamedFragment extends Fragment {\n    /**\n     *  The name of the fragment.\n     */\n    name;\n    /**\n     *  @private\n     */\n    constructor(guard, type, name, inputs) {\n        super(guard, type, inputs);\n        assertArgument(typeof (name) === \"string\" && name.match(regexId), \"invalid identifier\", \"name\", name);\n        inputs = Object.freeze(inputs.slice());\n        defineProperties(this, { name });\n    }\n}\nfunction joinParams(format, params) {\n    return \"(\" + params.map((p) => p.format(format)).join((format === \"full\") ? \", \" : \",\") + \")\";\n}\n/**\n *  A Fragment which represents a //Custom Error//.\n */\nexport class ErrorFragment extends NamedFragment {\n    /**\n     *  @private\n     */\n    constructor(guard, name, inputs) {\n        super(guard, \"error\", name, inputs);\n        Object.defineProperty(this, internal, { value: ErrorFragmentInternal });\n    }\n    /**\n     *  The Custom Error selector.\n     */\n    get selector() {\n        return id(this.format(\"sighash\")).substring(0, 10);\n    }\n    format(format) {\n        if (format == null) {\n            format = \"sighash\";\n        }\n        if (format === \"json\") {\n            return JSON.stringify({\n                type: \"error\",\n                name: this.name,\n                inputs: this.inputs.map((input) => JSON.parse(input.format(format))),\n            });\n        }\n        const result = [];\n        if (format !== \"sighash\") {\n            result.push(\"error\");\n        }\n        result.push(this.name + joinParams(format, this.inputs));\n        return result.join(\" \");\n    }\n    static from(obj) {\n        if (ErrorFragment.isFragment(obj)) {\n            return obj;\n        }\n        if (typeof (obj) === \"string\") {\n            return ErrorFragment.from(lex(obj));\n        }\n        else if (obj instanceof TokenString) {\n            const name = consumeName(\"error\", obj);\n            const inputs = consumeParams(obj);\n            consumeEoi(obj);\n            return new ErrorFragment(_guard, name, inputs);\n        }\n        return new ErrorFragment(_guard, obj.name, obj.inputs ? obj.inputs.map(ParamType.from) : []);\n    }\n    static isFragment(value) {\n        return (value && value[internal] === ErrorFragmentInternal);\n    }\n}\n/**\n *  A Fragment which represents an Event.\n */\nexport class EventFragment extends NamedFragment {\n    anonymous;\n    /**\n     *  @private\n     */\n    constructor(guard, name, inputs, anonymous) {\n        super(guard, \"event\", name, inputs);\n        Object.defineProperty(this, internal, { value: EventFragmentInternal });\n        defineProperties(this, { anonymous });\n    }\n    /**\n     *  The Event topic hash.\n     */\n    get topicHash() {\n        return id(this.format(\"sighash\"));\n    }\n    format(format) {\n        if (format == null) {\n            format = \"sighash\";\n        }\n        if (format === \"json\") {\n            return JSON.stringify({\n                type: \"event\",\n                anonymous: this.anonymous,\n                name: this.name,\n                inputs: this.inputs.map((i) => JSON.parse(i.format(format)))\n            });\n        }\n        const result = [];\n        if (format !== \"sighash\") {\n            result.push(\"event\");\n        }\n        result.push(this.name + joinParams(format, this.inputs));\n        if (format !== \"sighash\" && this.anonymous) {\n            result.push(\"anonymous\");\n        }\n        return result.join(\" \");\n    }\n    static getTopicHash(name, params) {\n        params = (params || []).map((p) => ParamType.from(p));\n        const fragment = new EventFragment(_guard, name, params, false);\n        return fragment.topicHash;\n    }\n    static from(obj) {\n        if (EventFragment.isFragment(obj)) {\n            return obj;\n        }\n        if (typeof (obj) === \"string\") {\n            return EventFragment.from(lex(obj));\n        }\n        else if (obj instanceof TokenString) {\n            const name = consumeName(\"event\", obj);\n            const inputs = consumeParams(obj, true);\n            const anonymous = !!consumeKeywords(obj, setify([\"anonymous\"])).has(\"anonymous\");\n            consumeEoi(obj);\n            return new EventFragment(_guard, name, inputs, anonymous);\n        }\n        return new EventFragment(_guard, obj.name, obj.inputs ? obj.inputs.map((p) => ParamType.from(p, true)) : [], !!obj.anonymous);\n    }\n    static isFragment(value) {\n        return (value && value[internal] === EventFragmentInternal);\n    }\n}\n/**\n *  A Fragment which represents a constructor.\n */\nexport class ConstructorFragment extends Fragment {\n    payable;\n    gas;\n    /**\n     *  @private\n     */\n    constructor(guard, type, inputs, payable, gas) {\n        super(guard, type, inputs);\n        Object.defineProperty(this, internal, { value: ConstructorFragmentInternal });\n        defineProperties(this, { payable, gas });\n    }\n    format(format) {\n        assert(format != null && format !== \"sighash\", \"cannot format a constructor for sighash\", \"UNSUPPORTED_OPERATION\", { operation: \"format(sighash)\" });\n        if (format === \"json\") {\n            return JSON.stringify({\n                type: \"constructor\",\n                stateMutability: (this.payable ? \"payable\" : \"undefined\"),\n                payable: this.payable,\n                gas: ((this.gas != null) ? this.gas : undefined),\n                inputs: this.inputs.map((i) => JSON.parse(i.format(format)))\n            });\n        }\n        const result = [`constructor${joinParams(format, this.inputs)}`];\n        result.push((this.payable) ? \"payable\" : \"nonpayable\");\n        if (this.gas != null) {\n            result.push(`@${this.gas.toString()}`);\n        }\n        return result.join(\" \");\n    }\n    static from(obj) {\n        if (ConstructorFragment.isFragment(obj)) {\n            return obj;\n        }\n        if (typeof (obj) === \"string\") {\n            return ConstructorFragment.from(lex(obj));\n        }\n        else if (obj instanceof TokenString) {\n            consumeKeywords(obj, setify([\"constructor\"]));\n            const inputs = consumeParams(obj);\n            const payable = !!consumeKeywords(obj, setify([\"payable\"])).has(\"payable\");\n            const gas = consumeGas(obj);\n            consumeEoi(obj);\n            return new ConstructorFragment(_guard, \"constructor\", inputs, payable, gas);\n        }\n        return new ConstructorFragment(_guard, \"constructor\", obj.inputs ? obj.inputs.map(ParamType.from) : [], !!obj.payable, (obj.gas != null) ? obj.gas : null);\n    }\n    static isFragment(value) {\n        return (value && value[internal] === ConstructorFragmentInternal);\n    }\n}\n/**\n *  A Fragment which represents a method.\n */\nexport class FallbackFragment extends Fragment {\n    /**\n     *  If the function can be sent value during invocation.\n     */\n    payable;\n    constructor(guard, inputs, payable) {\n        super(guard, \"fallback\", inputs);\n        Object.defineProperty(this, internal, { value: FallbackFragmentInternal });\n        defineProperties(this, { payable });\n    }\n    format(format) {\n        const type = ((this.inputs.length === 0) ? \"receive\" : \"fallback\");\n        if (format === \"json\") {\n            const stateMutability = (this.payable ? \"payable\" : \"nonpayable\");\n            return JSON.stringify({ type, stateMutability });\n        }\n        return `${type}()${this.payable ? \" payable\" : \"\"}`;\n    }\n    static from(obj) {\n        if (FallbackFragment.isFragment(obj)) {\n            return obj;\n        }\n        if (typeof (obj) === \"string\") {\n            return FallbackFragment.from(lex(obj));\n        }\n        else if (obj instanceof TokenString) {\n            const errorObj = obj.toString();\n            const topIsValid = obj.peekKeyword(setify([\"fallback\", \"receive\"]));\n            assertArgument(topIsValid, \"type must be fallback or receive\", \"obj\", errorObj);\n            const type = obj.popKeyword(setify([\"fallback\", \"receive\"]));\n            // receive()\n            if (type === \"receive\") {\n                const inputs = consumeParams(obj);\n                assertArgument(inputs.length === 0, `receive cannot have arguments`, \"obj.inputs\", inputs);\n                consumeKeywords(obj, setify([\"payable\"]));\n                consumeEoi(obj);\n                return new FallbackFragment(_guard, [], true);\n            }\n            // fallback() [payable]\n            // fallback(bytes) [payable] returns (bytes)\n            let inputs = consumeParams(obj);\n            if (inputs.length) {\n                assertArgument(inputs.length === 1 && inputs[0].type === \"bytes\", \"invalid fallback inputs\", \"obj.inputs\", inputs.map((i) => i.format(\"minimal\")).join(\", \"));\n            }\n            else {\n                inputs = [ParamType.from(\"bytes\")];\n            }\n            const mutability = consumeMutability(obj);\n            assertArgument(mutability === \"nonpayable\" || mutability === \"payable\", \"fallback cannot be constants\", \"obj.stateMutability\", mutability);\n            if (consumeKeywords(obj, setify([\"returns\"])).has(\"returns\")) {\n                const outputs = consumeParams(obj);\n                assertArgument(outputs.length === 1 && outputs[0].type === \"bytes\", \"invalid fallback outputs\", \"obj.outputs\", outputs.map((i) => i.format(\"minimal\")).join(\", \"));\n            }\n            consumeEoi(obj);\n            return new FallbackFragment(_guard, inputs, mutability === \"payable\");\n        }\n        if (obj.type === \"receive\") {\n            return new FallbackFragment(_guard, [], true);\n        }\n        if (obj.type === \"fallback\") {\n            const inputs = [ParamType.from(\"bytes\")];\n            const payable = (obj.stateMutability === \"payable\");\n            return new FallbackFragment(_guard, inputs, payable);\n        }\n        assertArgument(false, \"invalid fallback description\", \"obj\", obj);\n    }\n    static isFragment(value) {\n        return (value && value[internal] === FallbackFragmentInternal);\n    }\n}\n/**\n *  A Fragment which represents a method.\n */\nexport class FunctionFragment extends NamedFragment {\n    /**\n     *  If the function is constant (e.g. ``pure`` or ``view`` functions).\n     */\n    constant;\n    /**\n     *  The returned types for the result of calling this function.\n     */\n    outputs;\n    /**\n     *  The state mutability (e.g. ``payable``, ``nonpayable``, ``view``\n     *  or ``pure``)\n     */\n    stateMutability;\n    /**\n     *  If the function can be sent value during invocation.\n     */\n    payable;\n    /**\n     *  The amount of gas to send when calling this function\n     */\n    gas;\n    /**\n     *  @private\n     */\n    constructor(guard, name, stateMutability, inputs, outputs, gas) {\n        super(guard, \"function\", name, inputs);\n        Object.defineProperty(this, internal, { value: FunctionFragmentInternal });\n        outputs = Object.freeze(outputs.slice());\n        const constant = (stateMutability === \"view\" || stateMutability === \"pure\");\n        const payable = (stateMutability === \"payable\");\n        defineProperties(this, { constant, gas, outputs, payable, stateMutability });\n    }\n    /**\n     *  The Function selector.\n     */\n    get selector() {\n        return id(this.format(\"sighash\")).substring(0, 10);\n    }\n    format(format) {\n        if (format == null) {\n            format = \"sighash\";\n        }\n        if (format === \"json\") {\n            return JSON.stringify({\n                type: \"function\",\n                name: this.name,\n                constant: this.constant,\n                stateMutability: ((this.stateMutability !== \"nonpayable\") ? this.stateMutability : undefined),\n                payable: this.payable,\n                gas: ((this.gas != null) ? this.gas : undefined),\n                inputs: this.inputs.map((i) => JSON.parse(i.format(format))),\n                outputs: this.outputs.map((o) => JSON.parse(o.format(format))),\n            });\n        }\n        const result = [];\n        if (format !== \"sighash\") {\n            result.push(\"function\");\n        }\n        result.push(this.name + joinParams(format, this.inputs));\n        if (format !== \"sighash\") {\n            if (this.stateMutability !== \"nonpayable\") {\n                result.push(this.stateMutability);\n            }\n            if (this.outputs && this.outputs.length) {\n                result.push(\"returns\");\n                result.push(joinParams(format, this.outputs));\n            }\n            if (this.gas != null) {\n                result.push(`@${this.gas.toString()}`);\n            }\n        }\n        return result.join(\" \");\n    }\n    static getSelector(name, params) {\n        params = (params || []).map((p) => ParamType.from(p));\n        const fragment = new FunctionFragment(_guard, name, \"view\", params, [], null);\n        return fragment.selector;\n    }\n    static from(obj) {\n        if (FunctionFragment.isFragment(obj)) {\n            return obj;\n        }\n        if (typeof (obj) === \"string\") {\n            return FunctionFragment.from(lex(obj));\n        }\n        else if (obj instanceof TokenString) {\n            const name = consumeName(\"function\", obj);\n            const inputs = consumeParams(obj);\n            const mutability = consumeMutability(obj);\n            let outputs = [];\n            if (consumeKeywords(obj, setify([\"returns\"])).has(\"returns\")) {\n                outputs = consumeParams(obj);\n            }\n            const gas = consumeGas(obj);\n            consumeEoi(obj);\n            return new FunctionFragment(_guard, name, mutability, inputs, outputs, gas);\n        }\n        // @TODO: verifyState for stateMutability\n        return new FunctionFragment(_guard, obj.name, obj.stateMutability, obj.inputs ? obj.inputs.map(ParamType.from) : [], obj.outputs ? obj.outputs.map(ParamType.from) : [], (obj.gas != null) ? obj.gas : null);\n    }\n    static isFragment(value) {\n        return (value && value[internal] === FunctionFragmentInternal);\n    }\n}\n/**\n *  A Fragment which represents a structure.\n */\nexport class StructFragment extends NamedFragment {\n    /**\n     *  @private\n     */\n    constructor(guard, name, inputs) {\n        super(guard, \"struct\", name, inputs);\n        Object.defineProperty(this, internal, { value: StructFragmentInternal });\n    }\n    format() {\n        throw new Error(\"@TODO\");\n    }\n    static from(obj) {\n        if (typeof (obj) === \"string\") {\n            return StructFragment.from(lex(obj));\n        }\n        else if (obj instanceof TokenString) {\n            const name = consumeName(\"struct\", obj);\n            const inputs = consumeParams(obj);\n            consumeEoi(obj);\n            return new StructFragment(_guard, name, inputs);\n        }\n        return new StructFragment(_guard, obj.name, obj.inputs ? obj.inputs.map(ParamType.from) : []);\n    }\n    static isFragment(value) {\n        return (value && value[internal] === StructFragmentInternal);\n    }\n}\n//# sourceMappingURL=fragments.js.map","/**\n *  When sending values to or receiving values from a [[Contract]], the\n *  data is generally encoded using the [ABI standard](solc-abi-standard).\n *\n *  The AbiCoder provides a utility to encode values to ABI data and\n *  decode values from ABI data.\n *\n *  Most of the time, developers should favour the [[Contract]] class,\n *  which further abstracts a lot of the finer details of ABI data.\n *\n *  @_section api/abi/abi-coder:ABI Encoding\n */\n// See: https://github.com/ethereum/wiki/wiki/Ethereum-Contract-ABI\nimport { assertArgumentCount, assertArgument } from \"../utils/index.js\";\nimport { Reader, Writer } from \"./coders/abstract-coder.js\";\nimport { AddressCoder } from \"./coders/address.js\";\nimport { ArrayCoder } from \"./coders/array.js\";\nimport { BooleanCoder } from \"./coders/boolean.js\";\nimport { BytesCoder } from \"./coders/bytes.js\";\nimport { FixedBytesCoder } from \"./coders/fixed-bytes.js\";\nimport { NullCoder } from \"./coders/null.js\";\nimport { NumberCoder } from \"./coders/number.js\";\nimport { StringCoder } from \"./coders/string.js\";\nimport { TupleCoder } from \"./coders/tuple.js\";\nimport { ParamType } from \"./fragments.js\";\nimport { getAddress } from \"../address/index.js\";\nimport { getBytes, hexlify, makeError } from \"../utils/index.js\";\n// https://docs.soliditylang.org/en/v0.8.17/control-structures.html\nconst PanicReasons = new Map();\nPanicReasons.set(0x00, \"GENERIC_PANIC\");\nPanicReasons.set(0x01, \"ASSERT_FALSE\");\nPanicReasons.set(0x11, \"OVERFLOW\");\nPanicReasons.set(0x12, \"DIVIDE_BY_ZERO\");\nPanicReasons.set(0x21, \"ENUM_RANGE_ERROR\");\nPanicReasons.set(0x22, \"BAD_STORAGE_DATA\");\nPanicReasons.set(0x31, \"STACK_UNDERFLOW\");\nPanicReasons.set(0x32, \"ARRAY_RANGE_ERROR\");\nPanicReasons.set(0x41, \"OUT_OF_MEMORY\");\nPanicReasons.set(0x51, \"UNINITIALIZED_FUNCTION_CALL\");\nconst paramTypeBytes = new RegExp(/^bytes([0-9]*)$/);\nconst paramTypeNumber = new RegExp(/^(u?int)([0-9]*)$/);\nlet defaultCoder = null;\nfunction getBuiltinCallException(action, tx, data, abiCoder) {\n    let message = \"missing revert data\";\n    let reason = null;\n    const invocation = null;\n    let revert = null;\n    if (data) {\n        message = \"execution reverted\";\n        const bytes = getBytes(data);\n        data = hexlify(data);\n        if (bytes.length % 32 !== 4) {\n            message += \" (could not decode reason; invalid data length)\";\n        }\n        else if (hexlify(bytes.slice(0, 4)) === \"0x08c379a0\") {\n            // Error(string)\n            try {\n                reason = abiCoder.decode([\"string\"], bytes.slice(4))[0];\n                revert = {\n                    signature: \"Error(string)\",\n                    name: \"Error\",\n                    args: [reason]\n                };\n                message += `: ${JSON.stringify(reason)}`;\n            }\n            catch (error) {\n                console.log(error);\n                message += \" (could not decode reason; invalid data)\";\n            }\n        }\n        else if (hexlify(bytes.slice(0, 4)) === \"0x4e487b71\") {\n            // Panic(uint256)\n            try {\n                const code = Number(abiCoder.decode([\"uint256\"], bytes.slice(4))[0]);\n                revert = {\n                    signature: \"Panic(uint256)\",\n                    name: \"Panic\",\n                    args: [code]\n                };\n                reason = `Panic due to ${PanicReasons.get(code) || \"UNKNOWN\"}(${code})`;\n                message += `: ${reason}`;\n            }\n            catch (error) {\n                console.log(error);\n                message += \" (could not decode panic reason)\";\n            }\n        }\n        else {\n            message += \" (unknown custom error)\";\n        }\n    }\n    const transaction = {\n        to: (tx.to ? getAddress(tx.to) : null),\n        data: (tx.data || \"0x\")\n    };\n    if (tx.from) {\n        transaction.from = getAddress(tx.from);\n    }\n    return makeError(message, \"CALL_EXCEPTION\", {\n        action, data, reason, transaction, invocation, revert\n    });\n}\n/**\n  * About AbiCoder\n  */\nexport class AbiCoder {\n    #getCoder(param) {\n        if (param.isArray()) {\n            return new ArrayCoder(this.#getCoder(param.arrayChildren), param.arrayLength, param.name);\n        }\n        if (param.isTuple()) {\n            return new TupleCoder(param.components.map((c) => this.#getCoder(c)), param.name);\n        }\n        switch (param.baseType) {\n            case \"address\":\n                return new AddressCoder(param.name);\n            case \"bool\":\n                return new BooleanCoder(param.name);\n            case \"string\":\n                return new StringCoder(param.name);\n            case \"bytes\":\n                return new BytesCoder(param.name);\n            case \"\":\n                return new NullCoder(param.name);\n        }\n        // u?int[0-9]*\n        let match = param.type.match(paramTypeNumber);\n        if (match) {\n            let size = parseInt(match[2] || \"256\");\n            assertArgument(size !== 0 && size <= 256 && (size % 8) === 0, \"invalid \" + match[1] + \" bit length\", \"param\", param);\n            return new NumberCoder(size / 8, (match[1] === \"int\"), param.name);\n        }\n        // bytes[0-9]+\n        match = param.type.match(paramTypeBytes);\n        if (match) {\n            let size = parseInt(match[1]);\n            assertArgument(size !== 0 && size <= 32, \"invalid bytes length\", \"param\", param);\n            return new FixedBytesCoder(size, param.name);\n        }\n        assertArgument(false, \"invalid type\", \"type\", param.type);\n    }\n    /**\n     *  Get the default values for the given %%types%%.\n     *\n     *  For example, a ``uint`` is by default ``0`` and ``bool``\n     *  is by default ``false``.\n     */\n    getDefaultValue(types) {\n        const coders = types.map((type) => this.#getCoder(ParamType.from(type)));\n        const coder = new TupleCoder(coders, \"_\");\n        return coder.defaultValue();\n    }\n    /**\n     *  Encode the %%values%% as the %%types%% into ABI data.\n     *\n     *  @returns DataHexstring\n     */\n    encode(types, values) {\n        assertArgumentCount(values.length, types.length, \"types/values length mismatch\");\n        const coders = types.map((type) => this.#getCoder(ParamType.from(type)));\n        const coder = (new TupleCoder(coders, \"_\"));\n        const writer = new Writer();\n        coder.encode(writer, values);\n        return writer.data;\n    }\n    /**\n     *  Decode the ABI %%data%% as the %%types%% into values.\n     *\n     *  If %%loose%% decoding is enabled, then strict padding is\n     *  not enforced. Some older versions of Solidity incorrectly\n     *  padded event data emitted from ``external`` functions.\n     */\n    decode(types, data, loose) {\n        const coders = types.map((type) => this.#getCoder(ParamType.from(type)));\n        const coder = new TupleCoder(coders, \"_\");\n        return coder.decode(new Reader(data, loose));\n    }\n    /**\n     *  Returns the shared singleton instance of a default [[AbiCoder]].\n     *\n     *  On the first call, the instance is created internally.\n     */\n    static defaultAbiCoder() {\n        if (defaultCoder == null) {\n            defaultCoder = new AbiCoder();\n        }\n        return defaultCoder;\n    }\n    /**\n     *  Returns an ethers-compatible [[CALL_EXCEPTION]] Error for the given\n     *  result %%data%% for the [[CallExceptionAction]] %%action%% against\n     *  the Transaction %%tx%%.\n     */\n    static getBuiltinCallException(action, tx, data) {\n        return getBuiltinCallException(action, tx, data, AbiCoder.defaultAbiCoder());\n    }\n}\n//# sourceMappingURL=abi-coder.js.map","import { assert, assertArgument } from \"../utils/index.js\";\nimport { getAddress } from \"./address.js\";\n/**\n *  Returns true if %%value%% is an object which implements the\n *  [[Addressable]] interface.\n *\n *  @example:\n *    // Wallets and AbstractSigner sub-classes\n *    isAddressable(Wallet.createRandom())\n *    //_result:\n *\n *    // Contracts\n *    contract = new Contract(\"dai.tokens.ethers.eth\", [ ], provider)\n *    isAddressable(contract)\n *    //_result:\n */\nexport function isAddressable(value) {\n    return (value && typeof (value.getAddress) === \"function\");\n}\n/**\n *  Returns true if %%value%% is a valid address.\n *\n *  @example:\n *    // Valid address\n *    isAddress(\"0x8ba1f109551bD432803012645Ac136ddd64DBA72\")\n *    //_result:\n *\n *    // Valid ICAP address\n *    isAddress(\"XE65GB6LDNXYOFTX0NSV3FUWKOWIXAMJK36\")\n *    //_result:\n *\n *    // Invalid checksum\n *    isAddress(\"0x8Ba1f109551bD432803012645Ac136ddd64DBa72\")\n *    //_result:\n *\n *    // Invalid ICAP checksum\n *    isAddress(\"0x8Ba1f109551bD432803012645Ac136ddd64DBA72\")\n *    //_result:\n *\n *    // Not an address (an ENS name requires a provided and an\n *    // asynchronous API to access)\n *    isAddress(\"ricmoo.eth\")\n *    //_result:\n */\nexport function isAddress(value) {\n    try {\n        getAddress(value);\n        return true;\n    }\n    catch (error) { }\n    return false;\n}\nasync function checkAddress(target, promise) {\n    const result = await promise;\n    if (result == null || result === \"0x0000000000000000000000000000000000000000\") {\n        assert(typeof (target) !== \"string\", \"unconfigured name\", \"UNCONFIGURED_NAME\", { value: target });\n        assertArgument(false, \"invalid AddressLike value; did not resolve to a value address\", \"target\", target);\n    }\n    return getAddress(result);\n}\n/**\n *  Resolves to an address for the %%target%%, which may be any\n *  supported address type, an [[Addressable]] or a Promise which\n *  resolves to an address.\n *\n *  If an ENS name is provided, but that name has not been correctly\n *  configured a [[UnconfiguredNameError]] is thrown.\n *\n *  @example:\n *    addr = \"0x6B175474E89094C44Da98b954EedeAC495271d0F\"\n *\n *    // Addresses are return synchronously\n *    resolveAddress(addr, provider)\n *    //_result:\n *\n *    // Address promises are resolved asynchronously\n *    resolveAddress(Promise.resolve(addr))\n *    //_result:\n *\n *    // ENS names are resolved asynchronously\n *    resolveAddress(\"dai.tokens.ethers.eth\", provider)\n *    //_result:\n *\n *    // Addressable objects are resolved asynchronously\n *    contract = new Contract(addr, [ ])\n *    resolveAddress(contract, provider)\n *    //_result:\n *\n *    // Unconfigured ENS names reject\n *    resolveAddress(\"nothing-here.ricmoo.eth\", provider)\n *    //_error:\n *\n *    // ENS names require a NameResolver object passed in\n *    // (notice the provider was omitted)\n *    resolveAddress(\"nothing-here.ricmoo.eth\")\n *    //_error:\n */\nexport function resolveAddress(target, resolver) {\n    if (typeof (target) === \"string\") {\n        if (target.match(/^0x[0-9a-f]{40}$/i)) {\n            return getAddress(target);\n        }\n        assert(resolver != null, \"ENS resolution requires a provider\", \"UNSUPPORTED_OPERATION\", { operation: \"resolveName\" });\n        return checkAddress(target, resolver.resolveName(target));\n    }\n    else if (isAddressable(target)) {\n        return checkAddress(target, target.getAddress());\n    }\n    else if (target && typeof (target.then) === \"function\") {\n        return checkAddress(target, target);\n    }\n    assertArgument(false, \"unsupported addressable value\", \"target\", target);\n}\n//# sourceMappingURL=checks.js.map","//import { TypedDataDomain, TypedDataField } from \"@ethersproject/providerabstract-signer\";\nimport { getAddress } from \"../address/index.js\";\nimport { keccak256 } from \"../crypto/index.js\";\nimport { concat, defineProperties, getBigInt, getBytes, hexlify, isHexString, mask, toBeHex, toTwos, zeroPadValue, assertArgument } from \"../utils/index.js\";\nimport { id } from \"./id.js\";\nconst padding = new Uint8Array(32);\npadding.fill(0);\nconst BN__1 = BigInt(-1);\nconst BN_0 = BigInt(0);\nconst BN_1 = BigInt(1);\nconst BN_MAX_UINT256 = BigInt(\"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\");\n;\n;\nfunction hexPadRight(value) {\n    const bytes = getBytes(value);\n    const padOffset = bytes.length % 32;\n    if (padOffset) {\n        return concat([bytes, padding.slice(padOffset)]);\n    }\n    return hexlify(bytes);\n}\nconst hexTrue = toBeHex(BN_1, 32);\nconst hexFalse = toBeHex(BN_0, 32);\nconst domainFieldTypes = {\n    name: \"string\",\n    version: \"string\",\n    chainId: \"uint256\",\n    verifyingContract: \"address\",\n    salt: \"bytes32\"\n};\nconst domainFieldNames = [\n    \"name\", \"version\", \"chainId\", \"verifyingContract\", \"salt\"\n];\nfunction checkString(key) {\n    return function (value) {\n        assertArgument(typeof (value) === \"string\", `invalid domain value for ${JSON.stringify(key)}`, `domain.${key}`, value);\n        return value;\n    };\n}\nconst domainChecks = {\n    name: checkString(\"name\"),\n    version: checkString(\"version\"),\n    chainId: function (value) {\n        return getBigInt(value, \"domain.chainId\");\n    },\n    verifyingContract: function (value) {\n        try {\n            return getAddress(value).toLowerCase();\n        }\n        catch (error) { }\n        assertArgument(false, `invalid domain value \"verifyingContract\"`, \"domain.verifyingContract\", value);\n    },\n    salt: function (value) {\n        const bytes = getBytes(value, \"domain.salt\");\n        assertArgument(bytes.length === 32, `invalid domain value \"salt\"`, \"domain.salt\", value);\n        return hexlify(bytes);\n    }\n};\nfunction getBaseEncoder(type) {\n    // intXX and uintXX\n    {\n        const match = type.match(/^(u?)int(\\d*)$/);\n        if (match) {\n            const signed = (match[1] === \"\");\n            const width = parseInt(match[2] || \"256\");\n            assertArgument(width % 8 === 0 && width !== 0 && width <= 256 && (match[2] == null || match[2] === String(width)), \"invalid numeric width\", \"type\", type);\n            const boundsUpper = mask(BN_MAX_UINT256, signed ? (width - 1) : width);\n            const boundsLower = signed ? ((boundsUpper + BN_1) * BN__1) : BN_0;\n            return function (_value) {\n                const value = getBigInt(_value, \"value\");\n                assertArgument(value >= boundsLower && value <= boundsUpper, `value out-of-bounds for ${type}`, \"value\", value);\n                return toBeHex(toTwos(value, 256), 32);\n            };\n        }\n    }\n    // bytesXX\n    {\n        const match = type.match(/^bytes(\\d+)$/);\n        if (match) {\n            const width = parseInt(match[1]);\n            assertArgument(width !== 0 && width <= 32 && match[1] === String(width), \"invalid bytes width\", \"type\", type);\n            return function (value) {\n                const bytes = getBytes(value);\n                assertArgument(bytes.length === width, `invalid length for ${type}`, \"value\", value);\n                return hexPadRight(value);\n            };\n        }\n    }\n    switch (type) {\n        case \"address\": return function (value) {\n            return zeroPadValue(getAddress(value), 32);\n        };\n        case \"bool\": return function (value) {\n            return ((!value) ? hexFalse : hexTrue);\n        };\n        case \"bytes\": return function (value) {\n            return keccak256(value);\n        };\n        case \"string\": return function (value) {\n            return id(value);\n        };\n    }\n    return null;\n}\nfunction encodeType(name, fields) {\n    return `${name}(${fields.map(({ name, type }) => (type + \" \" + name)).join(\",\")})`;\n}\nexport class TypedDataEncoder {\n    primaryType;\n    #types;\n    get types() {\n        return JSON.parse(this.#types);\n    }\n    #fullTypes;\n    #encoderCache;\n    constructor(types) {\n        this.#types = JSON.stringify(types);\n        this.#fullTypes = new Map();\n        this.#encoderCache = new Map();\n        // Link struct types to their direct child structs\n        const links = new Map();\n        // Link structs to structs which contain them as a child\n        const parents = new Map();\n        // Link all subtypes within a given struct\n        const subtypes = new Map();\n        Object.keys(types).forEach((type) => {\n            links.set(type, new Set());\n            parents.set(type, []);\n            subtypes.set(type, new Set());\n        });\n        for (const name in types) {\n            const uniqueNames = new Set();\n            for (const field of types[name]) {\n                // Check each field has a unique name\n                assertArgument(!uniqueNames.has(field.name), `duplicate variable name ${JSON.stringify(field.name)} in ${JSON.stringify(name)}`, \"types\", types);\n                uniqueNames.add(field.name);\n                // Get the base type (drop any array specifiers)\n                const baseType = (field.type.match(/^([^\\x5b]*)(\\x5b|$)/))[1] || null;\n                assertArgument(baseType !== name, `circular type reference to ${JSON.stringify(baseType)}`, \"types\", types);\n                // Is this a base encoding type?\n                const encoder = getBaseEncoder(baseType);\n                if (encoder) {\n                    continue;\n                }\n                assertArgument(parents.has(baseType), `unknown type ${JSON.stringify(baseType)}`, \"types\", types);\n                // Add linkage\n                parents.get(baseType).push(name);\n                links.get(name).add(baseType);\n            }\n        }\n        // Deduce the primary type\n        const primaryTypes = Array.from(parents.keys()).filter((n) => (parents.get(n).length === 0));\n        assertArgument(primaryTypes.length !== 0, \"missing primary type\", \"types\", types);\n        assertArgument(primaryTypes.length === 1, `ambiguous primary types or unused types: ${primaryTypes.map((t) => (JSON.stringify(t))).join(\", \")}`, \"types\", types);\n        defineProperties(this, { primaryType: primaryTypes[0] });\n        // Check for circular type references\n        function checkCircular(type, found) {\n            assertArgument(!found.has(type), `circular type reference to ${JSON.stringify(type)}`, \"types\", types);\n            found.add(type);\n            for (const child of links.get(type)) {\n                if (!parents.has(child)) {\n                    continue;\n                }\n                // Recursively check children\n                checkCircular(child, found);\n                // Mark all ancestors as having this decendant\n                for (const subtype of found) {\n                    subtypes.get(subtype).add(child);\n                }\n            }\n            found.delete(type);\n        }\n        checkCircular(this.primaryType, new Set());\n        // Compute each fully describe type\n        for (const [name, set] of subtypes) {\n            const st = Array.from(set);\n            st.sort();\n            this.#fullTypes.set(name, encodeType(name, types[name]) + st.map((t) => encodeType(t, types[t])).join(\"\"));\n        }\n    }\n    getEncoder(type) {\n        let encoder = this.#encoderCache.get(type);\n        if (!encoder) {\n            encoder = this.#getEncoder(type);\n            this.#encoderCache.set(type, encoder);\n        }\n        return encoder;\n    }\n    #getEncoder(type) {\n        // Basic encoder type (address, bool, uint256, etc)\n        {\n            const encoder = getBaseEncoder(type);\n            if (encoder) {\n                return encoder;\n            }\n        }\n        // Array\n        const match = type.match(/^(.*)(\\x5b(\\d*)\\x5d)$/);\n        if (match) {\n            const subtype = match[1];\n            const subEncoder = this.getEncoder(subtype);\n            return (value) => {\n                assertArgument(!match[3] || parseInt(match[3]) === value.length, `array length mismatch; expected length ${parseInt(match[3])}`, \"value\", value);\n                let result = value.map(subEncoder);\n                if (this.#fullTypes.has(subtype)) {\n                    result = result.map(keccak256);\n                }\n                return keccak256(concat(result));\n            };\n        }\n        // Struct\n        const fields = this.types[type];\n        if (fields) {\n            const encodedType = id(this.#fullTypes.get(type));\n            return (value) => {\n                const values = fields.map(({ name, type }) => {\n                    const result = this.getEncoder(type)(value[name]);\n                    if (this.#fullTypes.has(type)) {\n                        return keccak256(result);\n                    }\n                    return result;\n                });\n                values.unshift(encodedType);\n                return concat(values);\n            };\n        }\n        assertArgument(false, `unknown type: ${type}`, \"type\", type);\n    }\n    encodeType(name) {\n        const result = this.#fullTypes.get(name);\n        assertArgument(result, `unknown type: ${JSON.stringify(name)}`, \"name\", name);\n        return result;\n    }\n    encodeData(type, value) {\n        return this.getEncoder(type)(value);\n    }\n    hashStruct(name, value) {\n        return keccak256(this.encodeData(name, value));\n    }\n    encode(value) {\n        return this.encodeData(this.primaryType, value);\n    }\n    hash(value) {\n        return this.hashStruct(this.primaryType, value);\n    }\n    _visit(type, value, callback) {\n        // Basic encoder type (address, bool, uint256, etc)\n        {\n            const encoder = getBaseEncoder(type);\n            if (encoder) {\n                return callback(type, value);\n            }\n        }\n        // Array\n        const match = type.match(/^(.*)(\\x5b(\\d*)\\x5d)$/);\n        if (match) {\n            assertArgument(!match[3] || parseInt(match[3]) === value.length, `array length mismatch; expected length ${parseInt(match[3])}`, \"value\", value);\n            return value.map((v) => this._visit(match[1], v, callback));\n        }\n        // Struct\n        const fields = this.types[type];\n        if (fields) {\n            return fields.reduce((accum, { name, type }) => {\n                accum[name] = this._visit(type, value[name], callback);\n                return accum;\n            }, {});\n        }\n        assertArgument(false, `unknown type: ${type}`, \"type\", type);\n    }\n    visit(value, callback) {\n        return this._visit(this.primaryType, value, callback);\n    }\n    static from(types) {\n        return new TypedDataEncoder(types);\n    }\n    static getPrimaryType(types) {\n        return TypedDataEncoder.from(types).primaryType;\n    }\n    static hashStruct(name, types, value) {\n        return TypedDataEncoder.from(types).hashStruct(name, value);\n    }\n    static hashDomain(domain) {\n        const domainFields = [];\n        for (const name in domain) {\n            const type = domainFieldTypes[name];\n            assertArgument(type, `invalid typed-data domain key: ${JSON.stringify(name)}`, \"domain\", domain);\n            domainFields.push({ name, type });\n        }\n        domainFields.sort((a, b) => {\n            return domainFieldNames.indexOf(a.name) - domainFieldNames.indexOf(b.name);\n        });\n        return TypedDataEncoder.hashStruct(\"EIP712Domain\", { EIP712Domain: domainFields }, domain);\n    }\n    static encode(domain, types, value) {\n        return concat([\n            \"0x1901\",\n            TypedDataEncoder.hashDomain(domain),\n            TypedDataEncoder.from(types).hash(value)\n        ]);\n    }\n    static hash(domain, types, value) {\n        return keccak256(TypedDataEncoder.encode(domain, types, value));\n    }\n    // Replaces all address types with ENS names with their looked up address\n    static async resolveNames(domain, types, value, resolveName) {\n        // Make a copy to isolate it from the object passed in\n        domain = Object.assign({}, domain);\n        // Look up all ENS names\n        const ensCache = {};\n        // Do we need to look up the domain's verifyingContract?\n        if (domain.verifyingContract && !isHexString(domain.verifyingContract, 20)) {\n            ensCache[domain.verifyingContract] = \"0x\";\n        }\n        // We are going to use the encoder to visit all the base values\n        const encoder = TypedDataEncoder.from(types);\n        // Get a list of all the addresses\n        encoder.visit(value, (type, value) => {\n            if (type === \"address\" && !isHexString(value, 20)) {\n                ensCache[value] = \"0x\";\n            }\n            return value;\n        });\n        // Lookup each name\n        for (const name in ensCache) {\n            ensCache[name] = await resolveName(name);\n        }\n        // Replace the domain verifyingContract if needed\n        if (domain.verifyingContract && ensCache[domain.verifyingContract]) {\n            domain.verifyingContract = ensCache[domain.verifyingContract];\n        }\n        // Replace all ENS names with their address\n        value = encoder.visit(value, (type, value) => {\n            if (type === \"address\" && ensCache[value]) {\n                return ensCache[value];\n            }\n            return value;\n        });\n        return { domain, value };\n    }\n    static getPayload(domain, types, value) {\n        // Validate the domain fields\n        TypedDataEncoder.hashDomain(domain);\n        // Derive the EIP712Domain Struct reference type\n        const domainValues = {};\n        const domainTypes = [];\n        domainFieldNames.forEach((name) => {\n            const value = domain[name];\n            if (value == null) {\n                return;\n            }\n            domainValues[name] = domainChecks[name](value);\n            domainTypes.push({ name, type: domainFieldTypes[name] });\n        });\n        const encoder = TypedDataEncoder.from(types);\n        const typesWithDomain = Object.assign({}, types);\n        assertArgument(typesWithDomain.EIP712Domain == null, \"types must not contain EIP712Domain type\", \"types.EIP712Domain\", types);\n        typesWithDomain.EIP712Domain = domainTypes;\n        // Validate the data structures and types\n        encoder.encode(value);\n        return {\n            types: typesWithDomain,\n            domain: domainValues,\n            primaryType: encoder.primaryType,\n            message: encoder.visit(value, (type, value) => {\n                // bytes\n                if (type.match(/^bytes(\\d*)/)) {\n                    return hexlify(getBytes(value));\n                }\n                // uint or int\n                if (type.match(/^u?int/)) {\n                    return getBigInt(value).toString();\n                }\n                switch (type) {\n                    case \"address\":\n                        return value.toLowerCase();\n                    case \"bool\":\n                        return !!value;\n                    case \"string\":\n                        assertArgument(typeof (value) === \"string\", \"invalid string\", \"value\", value);\n                        return value;\n                }\n                assertArgument(false, \"unsupported type\", \"type\", type);\n            })\n        };\n    }\n}\n//# sourceMappingURL=typed-data.js.map","import { getAddress } from \"../address/index.js\";\nimport { assertArgument, isHexString } from \"../utils/index.js\";\nfunction accessSetify(addr, storageKeys) {\n    return {\n        address: getAddress(addr),\n        storageKeys: storageKeys.map((storageKey, index) => {\n            assertArgument(isHexString(storageKey, 32), \"invalid slot\", `storageKeys[${index}]`, storageKey);\n            return storageKey.toLowerCase();\n        })\n    };\n}\n/**\n *  Returns a [[AccessList]] from any ethers-supported access-list structure.\n */\nexport function accessListify(value) {\n    if (Array.isArray(value)) {\n        return value.map((set, index) => {\n            if (Array.isArray(set)) {\n                assertArgument(set.length === 2, \"invalid slot set\", `value[${index}]`, set);\n                return accessSetify(set[0], set[1]);\n            }\n            assertArgument(set != null && typeof (set) === \"object\", \"invalid address-slot set\", \"value\", value);\n            return accessSetify(set.address, set.storageKeys);\n        });\n    }\n    assertArgument(value != null && typeof (value) === \"object\", \"invalid access list\", \"value\", value);\n    const result = Object.keys(value).map((addr) => {\n        const storageKeys = value[addr].reduce((accum, storageKey) => {\n            accum[storageKey] = true;\n            return accum;\n        }, {});\n        return accessSetify(addr, Object.keys(storageKeys).sort());\n    });\n    result.sort((a, b) => (a.address.localeCompare(b.address)));\n    return result;\n}\n//# sourceMappingURL=accesslist.js.map","// utils/base64-browser\nimport { getBytes } from \"./data.js\";\nexport function decodeBase64(textData) {\n    textData = atob(textData);\n    const data = new Uint8Array(textData.length);\n    for (let i = 0; i < textData.length; i++) {\n        data[i] = textData.charCodeAt(i);\n    }\n    return getBytes(data);\n}\nexport function encodeBase64(_data) {\n    const data = getBytes(_data);\n    let textData = \"\";\n    for (let i = 0; i < data.length; i++) {\n        textData += String.fromCharCode(data[i]);\n    }\n    return btoa(textData);\n}\n//# sourceMappingURL=base64-browser.js.map","import { assert } from \"./errors.js\";\n// @TODO: timeout is completely ignored; start a Promise.any with a reject?\nexport async function getUrl(req, _signal) {\n    const protocol = req.url.split(\":\")[0].toLowerCase();\n    assert(protocol === \"http\" || protocol === \"https\", `unsupported protocol ${protocol}`, \"UNSUPPORTED_OPERATION\", {\n        info: { protocol },\n        operation: \"request\"\n    });\n    assert(!req.credentials || req.allowInsecureAuthentication, \"insecure authorized connections unsupported\", \"UNSUPPORTED_OPERATION\", {\n        operation: \"request\"\n    });\n    let signal = undefined;\n    if (_signal) {\n        const controller = new AbortController();\n        signal = controller.signal;\n        _signal.addListener(() => { controller.abort(); });\n    }\n    const init = {\n        method: req.method,\n        headers: new Headers(Array.from(req)),\n        body: req.body || undefined,\n        signal\n    };\n    const resp = await fetch(req.url, init);\n    const headers = {};\n    resp.headers.forEach((value, key) => {\n        headers[key.toLowerCase()] = value;\n    });\n    const respBody = await resp.arrayBuffer();\n    const body = (respBody == null) ? null : new Uint8Array(respBody);\n    return {\n        statusCode: resp.status,\n        statusMessage: resp.statusText,\n        headers, body\n    };\n}\n//# sourceMappingURL=geturl-browser.js.map","/**\n *  Explain fetching here...\n *\n *  @_section api/utils/fetching:Fetching Web Content  [about-fetch]\n */\nimport { decodeBase64, encodeBase64 } from \"./base64.js\";\nimport { hexlify } from \"./data.js\";\nimport { assert, assertArgument } from \"./errors.js\";\nimport { defineProperties } from \"./properties.js\";\nimport { toUtf8Bytes, toUtf8String } from \"./utf8.js\";\nimport { getUrl } from \"./geturl.js\";\nconst MAX_ATTEMPTS = 12;\nconst SLOT_INTERVAL = 250;\n// The global FetchGetUrlFunc implementation.\nlet getUrlFunc = getUrl;\nconst reData = new RegExp(\"^data:([^;:]*)?(;base64)?,(.*)$\", \"i\");\nconst reIpfs = new RegExp(\"^ipfs:/\\/(ipfs/)?(.*)$\", \"i\");\n// If locked, new Gateways cannot be added\nlet locked = false;\n// https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/Data_URLs\nasync function dataGatewayFunc(url, signal) {\n    try {\n        const match = url.match(reData);\n        if (!match) {\n            throw new Error(\"invalid data\");\n        }\n        return new FetchResponse(200, \"OK\", {\n            \"content-type\": (match[1] || \"text/plain\"),\n        }, (match[2] ? decodeBase64(match[3]) : unpercent(match[3])));\n    }\n    catch (error) {\n        return new FetchResponse(599, \"BAD REQUEST (invalid data: URI)\", {}, null, new FetchRequest(url));\n    }\n}\n/**\n *  Returns a [[FetchGatewayFunc]] for fetching content from a standard\n *  IPFS gateway hosted at %%baseUrl%%.\n */\nfunction getIpfsGatewayFunc(baseUrl) {\n    async function gatewayIpfs(url, signal) {\n        try {\n            const match = url.match(reIpfs);\n            if (!match) {\n                throw new Error(\"invalid link\");\n            }\n            return new FetchRequest(`${baseUrl}${match[2]}`);\n        }\n        catch (error) {\n            return new FetchResponse(599, \"BAD REQUEST (invalid IPFS URI)\", {}, null, new FetchRequest(url));\n        }\n    }\n    return gatewayIpfs;\n}\nconst Gateways = {\n    \"data\": dataGatewayFunc,\n    \"ipfs\": getIpfsGatewayFunc(\"https:/\\/gateway.ipfs.io/ipfs/\")\n};\nconst fetchSignals = new WeakMap();\n/**\n *  @_ignore\n */\nexport class FetchCancelSignal {\n    #listeners;\n    #cancelled;\n    constructor(request) {\n        this.#listeners = [];\n        this.#cancelled = false;\n        fetchSignals.set(request, () => {\n            if (this.#cancelled) {\n                return;\n            }\n            this.#cancelled = true;\n            for (const listener of this.#listeners) {\n                setTimeout(() => { listener(); }, 0);\n            }\n            this.#listeners = [];\n        });\n    }\n    addListener(listener) {\n        assert(!this.#cancelled, \"singal already cancelled\", \"UNSUPPORTED_OPERATION\", {\n            operation: \"fetchCancelSignal.addCancelListener\"\n        });\n        this.#listeners.push(listener);\n    }\n    get cancelled() { return this.#cancelled; }\n    checkSignal() {\n        assert(!this.cancelled, \"cancelled\", \"CANCELLED\", {});\n    }\n}\n// Check the signal, throwing if it is cancelled\nfunction checkSignal(signal) {\n    if (signal == null) {\n        throw new Error(\"missing signal; should not happen\");\n    }\n    signal.checkSignal();\n    return signal;\n}\n/**\n *  Represents a request for a resource using a URI.\n *\n *  By default, the supported schemes are ``HTTP``, ``HTTPS``, ``data:``,\n *  and ``IPFS:``.\n *\n *  Additional schemes can be added globally using [[registerGateway]].\n *\n *  @example:\n *    req = new FetchRequest(\"https://www.ricmoo.com\")\n *    resp = await req.send()\n *    resp.body.length\n *    //_result:\n */\nexport class FetchRequest {\n    #allowInsecure;\n    #gzip;\n    #headers;\n    #method;\n    #timeout;\n    #url;\n    #body;\n    #bodyType;\n    #creds;\n    // Hooks\n    #preflight;\n    #process;\n    #retry;\n    #signal;\n    #throttle;\n    /**\n     *  The fetch URI to requrest.\n     */\n    get url() { return this.#url; }\n    set url(url) {\n        this.#url = String(url);\n    }\n    /**\n     *  The fetch body, if any, to send as the request body. //(default: null)//\n     *\n     *  When setting a body, the intrinsic ``Content-Type`` is automatically\n     *  set and will be used if **not overridden** by setting a custom\n     *  header.\n     *\n     *  If %%body%% is null, the body is cleared (along with the\n     *  intrinsic ``Content-Type``) and the .\n     *\n     *  If %%body%% is a string, the intrincis ``Content-Type`` is set to\n     *  ``text/plain``.\n     *\n     *  If %%body%% is a Uint8Array, the intrincis ``Content-Type`` is set to\n     *  ``application/octet-stream``.\n     *\n     *  If %%body%% is any other object, the intrincis ``Content-Type`` is\n     *  set to ``application/json``.\n     */\n    get body() {\n        if (this.#body == null) {\n            return null;\n        }\n        return new Uint8Array(this.#body);\n    }\n    set body(body) {\n        if (body == null) {\n            this.#body = undefined;\n            this.#bodyType = undefined;\n        }\n        else if (typeof (body) === \"string\") {\n            this.#body = toUtf8Bytes(body);\n            this.#bodyType = \"text/plain\";\n        }\n        else if (body instanceof Uint8Array) {\n            this.#body = body;\n            this.#bodyType = \"application/octet-stream\";\n        }\n        else if (typeof (body) === \"object\") {\n            this.#body = toUtf8Bytes(JSON.stringify(body));\n            this.#bodyType = \"application/json\";\n        }\n        else {\n            throw new Error(\"invalid body\");\n        }\n    }\n    /**\n     *  Returns true if the request has a body.\n     */\n    hasBody() {\n        return (this.#body != null);\n    }\n    /**\n     *  The HTTP method to use when requesting the URI. If no method\n     *  has been explicitly set, then ``GET`` is used if the body is\n     *  null and ``POST`` otherwise.\n     */\n    get method() {\n        if (this.#method) {\n            return this.#method;\n        }\n        if (this.hasBody()) {\n            return \"POST\";\n        }\n        return \"GET\";\n    }\n    set method(method) {\n        if (method == null) {\n            method = \"\";\n        }\n        this.#method = String(method).toUpperCase();\n    }\n    /**\n     *  The headers that will be used when requesting the URI. All\n     *  keys are lower-case.\n     *\n     *  This object is a copy, so any chnages will **NOT** be reflected\n     *  in the ``FetchRequest``.\n     *\n     *  To set a header entry, use the ``setHeader`` method.\n     */\n    get headers() {\n        const headers = Object.assign({}, this.#headers);\n        if (this.#creds) {\n            headers[\"authorization\"] = `Basic ${encodeBase64(toUtf8Bytes(this.#creds))}`;\n        }\n        ;\n        if (this.allowGzip) {\n            headers[\"accept-encoding\"] = \"gzip\";\n        }\n        if (headers[\"content-type\"] == null && this.#bodyType) {\n            headers[\"content-type\"] = this.#bodyType;\n        }\n        if (this.body) {\n            headers[\"content-length\"] = String(this.body.length);\n        }\n        return headers;\n    }\n    /**\n     *  Get the header for %%key%%, ignoring case.\n     */\n    getHeader(key) {\n        return this.headers[key.toLowerCase()];\n    }\n    /**\n     *  Set the header for %%key%% to %%value%%. All values are coerced\n     *  to a string.\n     */\n    setHeader(key, value) {\n        this.#headers[String(key).toLowerCase()] = String(value);\n    }\n    /**\n     *  Clear all headers, resetting all intrinsic headers.\n     */\n    clearHeaders() {\n        this.#headers = {};\n    }\n    [Symbol.iterator]() {\n        const headers = this.headers;\n        const keys = Object.keys(headers);\n        let index = 0;\n        return {\n            next: () => {\n                if (index < keys.length) {\n                    const key = keys[index++];\n                    return {\n                        value: [key, headers[key]], done: false\n                    };\n                }\n                return { value: undefined, done: true };\n            }\n        };\n    }\n    /**\n     *  The value that will be sent for the ``Authorization`` header.\n     *\n     *  To set the credentials, use the ``setCredentials`` method.\n     */\n    get credentials() {\n        return this.#creds || null;\n    }\n    /**\n     *  Sets an ``Authorization`` for %%username%% with %%password%%.\n     */\n    setCredentials(username, password) {\n        assertArgument(!username.match(/:/), \"invalid basic authentication username\", \"username\", \"[REDACTED]\");\n        this.#creds = `${username}:${password}`;\n    }\n    /**\n     *  Enable and request gzip-encoded responses. The response will\n     *  automatically be decompressed. //(default: true)//\n     */\n    get allowGzip() {\n        return this.#gzip;\n    }\n    set allowGzip(value) {\n        this.#gzip = !!value;\n    }\n    /**\n     *  Allow ``Authentication`` credentials to be sent over insecure\n     *  channels. //(default: false)//\n     */\n    get allowInsecureAuthentication() {\n        return !!this.#allowInsecure;\n    }\n    set allowInsecureAuthentication(value) {\n        this.#allowInsecure = !!value;\n    }\n    /**\n     *  The timeout (in milliseconds) to wait for a complere response.\n     *  //(default: 5 minutes)//\n     */\n    get timeout() { return this.#timeout; }\n    set timeout(timeout) {\n        assertArgument(timeout >= 0, \"timeout must be non-zero\", \"timeout\", timeout);\n        this.#timeout = timeout;\n    }\n    /**\n     *  This function is called prior to each request, for example\n     *  during a redirection or retry in case of server throttling.\n     *\n     *  This offers an opportunity to populate headers or update\n     *  content before sending a request.\n     */\n    get preflightFunc() {\n        return this.#preflight || null;\n    }\n    set preflightFunc(preflight) {\n        this.#preflight = preflight;\n    }\n    /**\n     *  This function is called after each response, offering an\n     *  opportunity to provide client-level throttling or updating\n     *  response data.\n     *\n     *  Any error thrown in this causes the ``send()`` to throw.\n     *\n     *  To schedule a retry attempt (assuming the maximum retry limit\n     *  has not been reached), use [[response.throwThrottleError]].\n     */\n    get processFunc() {\n        return this.#process || null;\n    }\n    set processFunc(process) {\n        this.#process = process;\n    }\n    /**\n     *  This function is called on each retry attempt.\n     */\n    get retryFunc() {\n        return this.#retry || null;\n    }\n    set retryFunc(retry) {\n        this.#retry = retry;\n    }\n    /**\n     *  Create a new FetchRequest instance with default values.\n     *\n     *  Once created, each property may be set before issuing a\n     *  ``.send()`` to make teh request.\n     */\n    constructor(url) {\n        this.#url = String(url);\n        this.#allowInsecure = false;\n        this.#gzip = true;\n        this.#headers = {};\n        this.#method = \"\";\n        this.#timeout = 300000;\n        this.#throttle = {\n            slotInterval: SLOT_INTERVAL,\n            maxAttempts: MAX_ATTEMPTS\n        };\n    }\n    toString() {\n        return `<FetchRequest method=${JSON.stringify(this.method)} url=${JSON.stringify(this.url)} headers=${JSON.stringify(this.headers)} body=${this.#body ? hexlify(this.#body) : \"null\"}>`;\n    }\n    /**\n     *  Update the throttle parameters used to determine maximum\n     *  attempts and exponential-backoff properties.\n     */\n    setThrottleParams(params) {\n        if (params.slotInterval != null) {\n            this.#throttle.slotInterval = params.slotInterval;\n        }\n        if (params.maxAttempts != null) {\n            this.#throttle.maxAttempts = params.maxAttempts;\n        }\n    }\n    async #send(attempt, expires, delay, _request, _response) {\n        if (attempt >= this.#throttle.maxAttempts) {\n            return _response.makeServerError(\"exceeded maximum retry limit\");\n        }\n        assert(getTime() <= expires, \"timeout\", \"TIMEOUT\", {\n            operation: \"request.send\", reason: \"timeout\", request: _request\n        });\n        if (delay > 0) {\n            await wait(delay);\n        }\n        let req = this.clone();\n        const scheme = (req.url.split(\":\")[0] || \"\").toLowerCase();\n        // Process any Gateways\n        if (scheme in Gateways) {\n            const result = await Gateways[scheme](req.url, checkSignal(_request.#signal));\n            if (result instanceof FetchResponse) {\n                let response = result;\n                if (this.processFunc) {\n                    checkSignal(_request.#signal);\n                    try {\n                        response = await this.processFunc(req, response);\n                    }\n                    catch (error) {\n                        // Something went wrong during processing; throw a 5xx server error\n                        if (error.throttle == null || typeof (error.stall) !== \"number\") {\n                            response.makeServerError(\"error in post-processing function\", error).assertOk();\n                        }\n                        // Ignore throttling\n                    }\n                }\n                return response;\n            }\n            req = result;\n        }\n        // We have a preflight function; update the request\n        if (this.preflightFunc) {\n            req = await this.preflightFunc(req);\n        }\n        const resp = await getUrlFunc(req, checkSignal(_request.#signal));\n        let response = new FetchResponse(resp.statusCode, resp.statusMessage, resp.headers, resp.body, _request);\n        if (response.statusCode === 301 || response.statusCode === 302) {\n            // Redirect\n            try {\n                const location = response.headers.location || \"\";\n                return req.redirect(location).#send(attempt + 1, expires, 0, _request, response);\n            }\n            catch (error) { }\n            // Things won't get any better on another attempt; abort\n            return response;\n        }\n        else if (response.statusCode === 429) {\n            // Throttle\n            if (this.retryFunc == null || (await this.retryFunc(req, response, attempt))) {\n                const retryAfter = response.headers[\"retry-after\"];\n                let delay = this.#throttle.slotInterval * Math.trunc(Math.random() * Math.pow(2, attempt));\n                if (typeof (retryAfter) === \"string\" && retryAfter.match(/^[1-9][0-9]*$/)) {\n                    delay = parseInt(retryAfter);\n                }\n                return req.clone().#send(attempt + 1, expires, delay, _request, response);\n            }\n        }\n        if (this.processFunc) {\n            checkSignal(_request.#signal);\n            try {\n                response = await this.processFunc(req, response);\n            }\n            catch (error) {\n                // Something went wrong during processing; throw a 5xx server error\n                if (error.throttle == null || typeof (error.stall) !== \"number\") {\n                    response.makeServerError(\"error in post-processing function\", error).assertOk();\n                }\n                // Throttle\n                let delay = this.#throttle.slotInterval * Math.trunc(Math.random() * Math.pow(2, attempt));\n                ;\n                if (error.stall >= 0) {\n                    delay = error.stall;\n                }\n                return req.clone().#send(attempt + 1, expires, delay, _request, response);\n            }\n        }\n        return response;\n    }\n    /**\n     *  Resolves to the response by sending the request.\n     */\n    send() {\n        assert(this.#signal == null, \"request already sent\", \"UNSUPPORTED_OPERATION\", { operation: \"fetchRequest.send\" });\n        this.#signal = new FetchCancelSignal(this);\n        return this.#send(0, getTime() + this.timeout, 0, this, new FetchResponse(0, \"\", {}, null, this));\n    }\n    /**\n     *  Cancels the inflight response, causing a ``CANCELLED``\n     *  error to be rejected from the [[send]].\n     */\n    cancel() {\n        assert(this.#signal != null, \"request has not been sent\", \"UNSUPPORTED_OPERATION\", { operation: \"fetchRequest.cancel\" });\n        const signal = fetchSignals.get(this);\n        if (!signal) {\n            throw new Error(\"missing signal; should not happen\");\n        }\n        signal();\n    }\n    /**\n     *  Returns a new [[FetchRequest]] that represents the redirection\n     *  to %%location%%.\n     */\n    redirect(location) {\n        // Redirection; for now we only support absolute locataions\n        const current = this.url.split(\":\")[0].toLowerCase();\n        const target = location.split(\":\")[0].toLowerCase();\n        // Don't allow redirecting:\n        // - non-GET requests\n        // - downgrading the security (e.g. https => http)\n        // - to non-HTTP (or non-HTTPS) protocols [this could be relaxed?]\n        assert(this.method === \"GET\" && (current !== \"https\" || target !== \"http\") && location.match(/^https?:/), `unsupported redirect`, \"UNSUPPORTED_OPERATION\", {\n            operation: `redirect(${this.method} ${JSON.stringify(this.url)} => ${JSON.stringify(location)})`\n        });\n        // Create a copy of this request, with a new URL\n        const req = new FetchRequest(location);\n        req.method = \"GET\";\n        req.allowGzip = this.allowGzip;\n        req.timeout = this.timeout;\n        req.#headers = Object.assign({}, this.#headers);\n        if (this.#body) {\n            req.#body = new Uint8Array(this.#body);\n        }\n        req.#bodyType = this.#bodyType;\n        // Do not forward credentials unless on the same domain; only absolute\n        //req.allowInsecure = false;\n        // paths are currently supported; may want a way to specify to forward?\n        //setStore(req.#props, \"creds\", getStore(this.#pros, \"creds\"));\n        return req;\n    }\n    /**\n     *  Create a new copy of this request.\n     */\n    clone() {\n        const clone = new FetchRequest(this.url);\n        // Preserve \"default method\" (i.e. null)\n        clone.#method = this.#method;\n        // Preserve \"default body\" with type, copying the Uint8Array is present\n        if (this.#body) {\n            clone.#body = this.#body;\n        }\n        clone.#bodyType = this.#bodyType;\n        // Preserve \"default headers\"\n        clone.#headers = Object.assign({}, this.#headers);\n        // Credentials is readonly, so we copy internally\n        clone.#creds = this.#creds;\n        if (this.allowGzip) {\n            clone.allowGzip = true;\n        }\n        clone.timeout = this.timeout;\n        if (this.allowInsecureAuthentication) {\n            clone.allowInsecureAuthentication = true;\n        }\n        clone.#preflight = this.#preflight;\n        clone.#process = this.#process;\n        clone.#retry = this.#retry;\n        return clone;\n    }\n    /**\n     *  Locks all static configuration for gateways and FetchGetUrlFunc\n     *  registration.\n     */\n    static lockConfig() {\n        locked = true;\n    }\n    /**\n     *  Get the current Gateway function for %%scheme%%.\n     */\n    static getGateway(scheme) {\n        return Gateways[scheme.toLowerCase()] || null;\n    }\n    /**\n     *  Use the %%func%% when fetching URIs using %%scheme%%.\n     *\n     *  This method affects all requests globally.\n     *\n     *  If [[lockConfig]] has been called, no change is made and this\n     *  throws.\n     */\n    static registerGateway(scheme, func) {\n        scheme = scheme.toLowerCase();\n        if (scheme === \"http\" || scheme === \"https\") {\n            throw new Error(`cannot intercept ${scheme}; use registerGetUrl`);\n        }\n        if (locked) {\n            throw new Error(\"gateways locked\");\n        }\n        Gateways[scheme] = func;\n    }\n    /**\n     *  Use %%getUrl%% when fetching URIs over HTTP and HTTPS requests.\n     *\n     *  This method affects all requests globally.\n     *\n     *  If [[lockConfig]] has been called, no change is made and this\n     *  throws.\n     */\n    static registerGetUrl(getUrl) {\n        if (locked) {\n            throw new Error(\"gateways locked\");\n        }\n        getUrlFunc = getUrl;\n    }\n    /**\n     *  Creates a function that can \"fetch\" data URIs.\n     *\n     *  Note that this is automatically done internally to support\n     *  data URIs, so it is not necessary to register it.\n     *\n     *  This is not generally something that is needed, but may\n     *  be useful in a wrapper to perfom custom data URI functionality.\n     */\n    static createDataGateway() {\n        return dataGatewayFunc;\n    }\n    /**\n     *  Creates a function that will fetch IPFS (unvalidated) from\n     *  a custom gateway baseUrl.\n     *\n     *  The default IPFS gateway used internally is\n     *  ``\"https:/\\/gateway.ipfs.io/ipfs/\"``.\n     */\n    static createIpfsGatewayFunc(baseUrl) {\n        return getIpfsGatewayFunc(baseUrl);\n    }\n}\n;\n/**\n *  The response for a FetchREquest.\n */\nexport class FetchResponse {\n    #statusCode;\n    #statusMessage;\n    #headers;\n    #body;\n    #request;\n    #error;\n    toString() {\n        return `<FetchResponse status=${this.statusCode} body=${this.#body ? hexlify(this.#body) : \"null\"}>`;\n    }\n    /**\n     *  The response status code.\n     */\n    get statusCode() { return this.#statusCode; }\n    /**\n     *  The response status message.\n     */\n    get statusMessage() { return this.#statusMessage; }\n    /**\n     *  The response headers. All keys are lower-case.\n     */\n    get headers() { return Object.assign({}, this.#headers); }\n    /**\n     *  The response body, or ``null`` if there was no body.\n     */\n    get body() {\n        return (this.#body == null) ? null : new Uint8Array(this.#body);\n    }\n    /**\n     *  The response body as a UTF-8 encoded string, or the empty\n     *  string (i.e. ``\"\"``) if there was no body.\n     *\n     *  An error is thrown if the body is invalid UTF-8 data.\n     */\n    get bodyText() {\n        try {\n            return (this.#body == null) ? \"\" : toUtf8String(this.#body);\n        }\n        catch (error) {\n            assert(false, \"response body is not valid UTF-8 data\", \"UNSUPPORTED_OPERATION\", {\n                operation: \"bodyText\", info: { response: this }\n            });\n        }\n    }\n    /**\n     *  The response body, decoded as JSON.\n     *\n     *  An error is thrown if the body is invalid JSON-encoded data\n     *  or if there was no body.\n     */\n    get bodyJson() {\n        try {\n            return JSON.parse(this.bodyText);\n        }\n        catch (error) {\n            assert(false, \"response body is not valid JSON\", \"UNSUPPORTED_OPERATION\", {\n                operation: \"bodyJson\", info: { response: this }\n            });\n        }\n    }\n    [Symbol.iterator]() {\n        const headers = this.headers;\n        const keys = Object.keys(headers);\n        let index = 0;\n        return {\n            next: () => {\n                if (index < keys.length) {\n                    const key = keys[index++];\n                    return {\n                        value: [key, headers[key]], done: false\n                    };\n                }\n                return { value: undefined, done: true };\n            }\n        };\n    }\n    constructor(statusCode, statusMessage, headers, body, request) {\n        this.#statusCode = statusCode;\n        this.#statusMessage = statusMessage;\n        this.#headers = Object.keys(headers).reduce((accum, k) => {\n            accum[k.toLowerCase()] = String(headers[k]);\n            return accum;\n        }, {});\n        this.#body = ((body == null) ? null : new Uint8Array(body));\n        this.#request = (request || null);\n        this.#error = { message: \"\" };\n    }\n    /**\n     *  Return a Response with matching headers and body, but with\n     *  an error status code (i.e. 599) and %%message%% with an\n     *  optional %%error%%.\n     */\n    makeServerError(message, error) {\n        let statusMessage;\n        if (!message) {\n            message = `${this.statusCode} ${this.statusMessage}`;\n            statusMessage = `CLIENT ESCALATED SERVER ERROR (${message})`;\n        }\n        else {\n            statusMessage = `CLIENT ESCALATED SERVER ERROR (${this.statusCode} ${this.statusMessage}; ${message})`;\n        }\n        const response = new FetchResponse(599, statusMessage, this.headers, this.body, this.#request || undefined);\n        response.#error = { message, error };\n        return response;\n    }\n    /**\n     *  If called within a [request.processFunc](FetchRequest-processFunc)\n     *  call, causes the request to retry as if throttled for %%stall%%\n     *  milliseconds.\n     */\n    throwThrottleError(message, stall) {\n        if (stall == null) {\n            stall = -1;\n        }\n        else {\n            assertArgument(Number.isInteger(stall) && stall >= 0, \"invalid stall timeout\", \"stall\", stall);\n        }\n        const error = new Error(message || \"throttling requests\");\n        defineProperties(error, { stall, throttle: true });\n        throw error;\n    }\n    /**\n     *  Get the header value for %%key%%, ignoring case.\n     */\n    getHeader(key) {\n        return this.headers[key.toLowerCase()];\n    }\n    /**\n     *  Returns true of the response has a body.\n     */\n    hasBody() {\n        return (this.#body != null);\n    }\n    /**\n     *  The request made for this response.\n     */\n    get request() { return this.#request; }\n    /**\n     *  Returns true if this response was a success statusCode.\n     */\n    ok() {\n        return (this.#error.message === \"\" && this.statusCode >= 200 && this.statusCode < 300);\n    }\n    /**\n     *  Throws a ``SERVER_ERROR`` if this response is not ok.\n     */\n    assertOk() {\n        if (this.ok()) {\n            return;\n        }\n        let { message, error } = this.#error;\n        if (message === \"\") {\n            message = `server response ${this.statusCode} ${this.statusMessage}`;\n        }\n        assert(false, message, \"SERVER_ERROR\", {\n            request: (this.request || \"unknown request\"), response: this, error\n        });\n    }\n}\nfunction getTime() { return (new Date()).getTime(); }\nfunction unpercent(value) {\n    return toUtf8Bytes(value.replace(/%([0-9a-f][0-9a-f])/gi, (all, code) => {\n        return String.fromCharCode(parseInt(code, 16));\n    }));\n}\nfunction wait(delay) {\n    return new Promise((resolve) => setTimeout(resolve, delay));\n}\n//# sourceMappingURL=fetch.js.map","/**\n *  A constant for the zero hash.\n *\n *  (**i.e.** ``\"0x0000000000000000000000000000000000000000000000000000000000000000\"``)\n */\nexport const ZeroHash = \"0x0000000000000000000000000000000000000000000000000000000000000000\";\n//# sourceMappingURL=hashes.js.map","/**\n *  About Interface\n *\n *  @_subsection api/abi:Interfaces  [interfaces]\n */\nimport { keccak256 } from \"../crypto/index.js\";\nimport { id } from \"../hash/index.js\";\nimport { concat, dataSlice, getBigInt, getBytes, getBytesCopy, hexlify, zeroPadValue, isHexString, defineProperties, assertArgument, toBeHex, assert } from \"../utils/index.js\";\nimport { AbiCoder } from \"./abi-coder.js\";\nimport { checkResultErrors, Result } from \"./coders/abstract-coder.js\";\nimport { ConstructorFragment, ErrorFragment, EventFragment, Fragment, FunctionFragment, ParamType } from \"./fragments.js\";\nimport { Typed } from \"./typed.js\";\nexport { checkResultErrors, Result };\nexport class LogDescription {\n    fragment;\n    name;\n    signature;\n    topic;\n    args;\n    constructor(fragment, topic, args) {\n        const name = fragment.name, signature = fragment.format();\n        defineProperties(this, {\n            fragment, name, signature, topic, args\n        });\n    }\n}\nexport class TransactionDescription {\n    fragment;\n    name;\n    args;\n    signature;\n    selector;\n    value;\n    constructor(fragment, selector, args, value) {\n        const name = fragment.name, signature = fragment.format();\n        defineProperties(this, {\n            fragment, name, args, signature, selector, value\n        });\n    }\n}\nexport class ErrorDescription {\n    fragment;\n    name;\n    args;\n    signature;\n    selector;\n    constructor(fragment, selector, args) {\n        const name = fragment.name, signature = fragment.format();\n        defineProperties(this, {\n            fragment, name, args, signature, selector\n        });\n    }\n}\nexport class Indexed {\n    hash;\n    _isIndexed;\n    static isIndexed(value) {\n        return !!(value && value._isIndexed);\n    }\n    constructor(hash) {\n        defineProperties(this, { hash, _isIndexed: true });\n    }\n}\n// https://docs.soliditylang.org/en/v0.8.13/control-structures.html?highlight=panic#panic-via-assert-and-error-via-require\nconst PanicReasons = {\n    \"0\": \"generic panic\",\n    \"1\": \"assert(false)\",\n    \"17\": \"arithmetic overflow\",\n    \"18\": \"division or modulo by zero\",\n    \"33\": \"enum overflow\",\n    \"34\": \"invalid encoded storage byte array accessed\",\n    \"49\": \"out-of-bounds array access; popping on an empty array\",\n    \"50\": \"out-of-bounds access of an array or bytesN\",\n    \"65\": \"out of memory\",\n    \"81\": \"uninitialized function\",\n};\nconst BuiltinErrors = {\n    \"0x08c379a0\": {\n        signature: \"Error(string)\",\n        name: \"Error\",\n        inputs: [\"string\"],\n        reason: (message) => {\n            return `reverted with reason string ${JSON.stringify(message)}`;\n        }\n    },\n    \"0x4e487b71\": {\n        signature: \"Panic(uint256)\",\n        name: \"Panic\",\n        inputs: [\"uint256\"],\n        reason: (code) => {\n            let reason = \"unknown panic code\";\n            if (code >= 0 && code <= 0xff && PanicReasons[code.toString()]) {\n                reason = PanicReasons[code.toString()];\n            }\n            return `reverted with panic code 0x${code.toString(16)} (${reason})`;\n        }\n    }\n};\n/**\n *  An Interface abstracts many of the low-level details for\n *  encoding and decoding the data on the blockchain.\n *\n *  An ABI provides information on how to encode data to send to\n *  a Contract, how to decode the results and events and how to\n *  interpret revert errors.\n *\n *  The ABI can be specified by [any supported format](InterfaceAbi).\n */\nexport class Interface {\n    /**\n     *  All the Contract ABI members (i.e. methods, events, errors, etc).\n     */\n    fragments;\n    /**\n     *  The Contract constructor.\n     */\n    deploy;\n    /**\n     *  The Fallback method, if any.\n     */\n    fallback;\n    /**\n     *  If receiving ether is supported.\n     */\n    receive;\n    #errors;\n    #events;\n    #functions;\n    //    #structs: Map<string, StructFragment>;\n    #abiCoder;\n    /**\n     *  Create a new Interface for the %%fragments%%.\n     */\n    constructor(fragments) {\n        let abi = [];\n        if (typeof (fragments) === \"string\") {\n            abi = JSON.parse(fragments);\n        }\n        else {\n            abi = fragments;\n        }\n        this.#functions = new Map();\n        this.#errors = new Map();\n        this.#events = new Map();\n        //        this.#structs = new Map();\n        const frags = [];\n        for (const a of abi) {\n            try {\n                frags.push(Fragment.from(a));\n            }\n            catch (error) {\n                console.log(\"EE\", error);\n            }\n        }\n        defineProperties(this, {\n            fragments: Object.freeze(frags)\n        });\n        let fallback = null;\n        let receive = false;\n        this.#abiCoder = this.getAbiCoder();\n        // Add all fragments by their signature\n        this.fragments.forEach((fragment, index) => {\n            let bucket;\n            switch (fragment.type) {\n                case \"constructor\":\n                    if (this.deploy) {\n                        console.log(\"duplicate definition - constructor\");\n                        return;\n                    }\n                    //checkNames(fragment, \"input\", fragment.inputs);\n                    defineProperties(this, { deploy: fragment });\n                    return;\n                case \"fallback\":\n                    if (fragment.inputs.length === 0) {\n                        receive = true;\n                    }\n                    else {\n                        assertArgument(!fallback || fragment.payable !== fallback.payable, \"conflicting fallback fragments\", `fragments[${index}]`, fragment);\n                        fallback = fragment;\n                        receive = fallback.payable;\n                    }\n                    return;\n                case \"function\":\n                    //checkNames(fragment, \"input\", fragment.inputs);\n                    //checkNames(fragment, \"output\", (<FunctionFragment>fragment).outputs);\n                    bucket = this.#functions;\n                    break;\n                case \"event\":\n                    //checkNames(fragment, \"input\", fragment.inputs);\n                    bucket = this.#events;\n                    break;\n                case \"error\":\n                    bucket = this.#errors;\n                    break;\n                default:\n                    return;\n            }\n            // Two identical entries; ignore it\n            const signature = fragment.format();\n            if (bucket.has(signature)) {\n                return;\n            }\n            bucket.set(signature, fragment);\n        });\n        // If we do not have a constructor add a default\n        if (!this.deploy) {\n            defineProperties(this, {\n                deploy: ConstructorFragment.from(\"constructor()\")\n            });\n        }\n        defineProperties(this, { fallback, receive });\n    }\n    /**\n     *  Returns the entire Human-Readable ABI, as an array of\n     *  signatures, optionally as %%minimal%% strings, which\n     *  removes parameter names and unneceesary spaces.\n     */\n    format(minimal) {\n        const format = (minimal ? \"minimal\" : \"full\");\n        const abi = this.fragments.map((f) => f.format(format));\n        return abi;\n    }\n    /**\n     *  Return the JSON-encoded ABI. This is the format Solidiy\n     *  returns.\n     */\n    formatJson() {\n        const abi = this.fragments.map((f) => f.format(\"json\"));\n        // We need to re-bundle the JSON fragments a bit\n        return JSON.stringify(abi.map((j) => JSON.parse(j)));\n    }\n    /**\n     *  The ABI coder that will be used to encode and decode binary\n     *  data.\n     */\n    getAbiCoder() {\n        return AbiCoder.defaultAbiCoder();\n    }\n    // Find a function definition by any means necessary (unless it is ambiguous)\n    #getFunction(key, values, forceUnique) {\n        // Selector\n        if (isHexString(key)) {\n            const selector = key.toLowerCase();\n            for (const fragment of this.#functions.values()) {\n                if (selector === fragment.selector) {\n                    return fragment;\n                }\n            }\n            return null;\n        }\n        // It is a bare name, look up the function (will return null if ambiguous)\n        if (key.indexOf(\"(\") === -1) {\n            const matching = [];\n            for (const [name, fragment] of this.#functions) {\n                if (name.split(\"(\" /* fix:) */)[0] === key) {\n                    matching.push(fragment);\n                }\n            }\n            if (values) {\n                const lastValue = (values.length > 0) ? values[values.length - 1] : null;\n                let valueLength = values.length;\n                let allowOptions = true;\n                if (Typed.isTyped(lastValue) && lastValue.type === \"overrides\") {\n                    allowOptions = false;\n                    valueLength--;\n                }\n                // Remove all matches that don't have a compatible length. The args\n                // may contain an overrides, so the match may have n or n - 1 parameters\n                for (let i = matching.length - 1; i >= 0; i--) {\n                    const inputs = matching[i].inputs.length;\n                    if (inputs !== valueLength && (!allowOptions || inputs !== valueLength - 1)) {\n                        matching.splice(i, 1);\n                    }\n                }\n                // Remove all matches that don't match the Typed signature\n                for (let i = matching.length - 1; i >= 0; i--) {\n                    const inputs = matching[i].inputs;\n                    for (let j = 0; j < values.length; j++) {\n                        // Not a typed value\n                        if (!Typed.isTyped(values[j])) {\n                            continue;\n                        }\n                        // We are past the inputs\n                        if (j >= inputs.length) {\n                            if (values[j].type === \"overrides\") {\n                                continue;\n                            }\n                            matching.splice(i, 1);\n                            break;\n                        }\n                        // Make sure the value type matches the input type\n                        if (values[j].type !== inputs[j].baseType) {\n                            matching.splice(i, 1);\n                            break;\n                        }\n                    }\n                }\n            }\n            // We found a single matching signature with an overrides, but the\n            // last value is something that cannot possibly be an options\n            if (matching.length === 1 && values && values.length !== matching[0].inputs.length) {\n                const lastArg = values[values.length - 1];\n                if (lastArg == null || Array.isArray(lastArg) || typeof (lastArg) !== \"object\") {\n                    matching.splice(0, 1);\n                }\n            }\n            if (matching.length === 0) {\n                return null;\n            }\n            if (matching.length > 1 && forceUnique) {\n                const matchStr = matching.map((m) => JSON.stringify(m.format())).join(\", \");\n                assertArgument(false, `ambiguous function description (i.e. matches ${matchStr})`, \"key\", key);\n            }\n            return matching[0];\n        }\n        // Normalize the signature and lookup the function\n        const result = this.#functions.get(FunctionFragment.from(key).format());\n        if (result) {\n            return result;\n        }\n        return null;\n    }\n    /**\n     *  Get the function name for %%key%%, which may be a function selector,\n     *  function name or function signature that belongs to the ABI.\n     */\n    getFunctionName(key) {\n        const fragment = this.#getFunction(key, null, false);\n        assertArgument(fragment, \"no matching function\", \"key\", key);\n        return fragment.name;\n    }\n    /**\n     *  Get the [[FunctionFragment]] for %%key%%, which may be a function\n     *  selector, function name or function signature that belongs to the ABI.\n     *\n     *  If %%values%% is provided, it will use the Typed API to handle\n     *  ambiguous cases where multiple functions match by name.\n     *\n     *  If the %%key%% and %%values%% do not refine to a single function in\n     *  the ABI, this will throw.\n     */\n    getFunction(key, values) {\n        return this.#getFunction(key, values || null, true);\n    }\n    /**\n     *  Iterate over all functions, calling %%callback%%, sorted by their name.\n     */\n    forEachFunction(callback) {\n        const names = Array.from(this.#functions.keys());\n        names.sort((a, b) => a.localeCompare(b));\n        for (let i = 0; i < names.length; i++) {\n            const name = names[i];\n            callback((this.#functions.get(name)), i);\n        }\n    }\n    // Find an event definition by any means necessary (unless it is ambiguous)\n    #getEvent(key, values, forceUnique) {\n        // EventTopic\n        if (isHexString(key)) {\n            const eventTopic = key.toLowerCase();\n            for (const fragment of this.#events.values()) {\n                if (eventTopic === fragment.topicHash) {\n                    return fragment;\n                }\n            }\n            return null;\n        }\n        // It is a bare name, look up the function (will return null if ambiguous)\n        if (key.indexOf(\"(\") === -1) {\n            const matching = [];\n            for (const [name, fragment] of this.#events) {\n                if (name.split(\"(\" /* fix:) */)[0] === key) {\n                    matching.push(fragment);\n                }\n            }\n            if (values) {\n                // Remove all matches that don't have a compatible length.\n                for (let i = matching.length - 1; i >= 0; i--) {\n                    if (matching[i].inputs.length < values.length) {\n                        matching.splice(i, 1);\n                    }\n                }\n                // Remove all matches that don't match the Typed signature\n                for (let i = matching.length - 1; i >= 0; i--) {\n                    const inputs = matching[i].inputs;\n                    for (let j = 0; j < values.length; j++) {\n                        // Not a typed value\n                        if (!Typed.isTyped(values[j])) {\n                            continue;\n                        }\n                        // Make sure the value type matches the input type\n                        if (values[j].type !== inputs[j].baseType) {\n                            matching.splice(i, 1);\n                            break;\n                        }\n                    }\n                }\n            }\n            if (matching.length === 0) {\n                return null;\n            }\n            if (matching.length > 1 && forceUnique) {\n                const matchStr = matching.map((m) => JSON.stringify(m.format())).join(\", \");\n                assertArgument(false, `ambiguous event description (i.e. matches ${matchStr})`, \"key\", key);\n            }\n            return matching[0];\n        }\n        // Normalize the signature and lookup the function\n        const result = this.#events.get(EventFragment.from(key).format());\n        if (result) {\n            return result;\n        }\n        return null;\n    }\n    /**\n     *  Get the event name for %%key%%, which may be a topic hash,\n     *  event name or event signature that belongs to the ABI.\n     */\n    getEventName(key) {\n        const fragment = this.#getEvent(key, null, false);\n        assertArgument(fragment, \"no matching event\", \"key\", key);\n        return fragment.name;\n    }\n    /**\n     *  Get the [[EventFragment]] for %%key%%, which may be a topic hash,\n     *  event name or event signature that belongs to the ABI.\n     *\n     *  If %%values%% is provided, it will use the Typed API to handle\n     *  ambiguous cases where multiple events match by name.\n     *\n     *  If the %%key%% and %%values%% do not refine to a single event in\n     *  the ABI, this will throw.\n     */\n    getEvent(key, values) {\n        return this.#getEvent(key, values || null, true);\n    }\n    /**\n     *  Iterate over all events, calling %%callback%%, sorted by their name.\n     */\n    forEachEvent(callback) {\n        const names = Array.from(this.#events.keys());\n        names.sort((a, b) => a.localeCompare(b));\n        for (let i = 0; i < names.length; i++) {\n            const name = names[i];\n            callback((this.#events.get(name)), i);\n        }\n    }\n    /**\n     *  Get the [[ErrorFragment]] for %%key%%, which may be an error\n     *  selector, error name or error signature that belongs to the ABI.\n     *\n     *  If %%values%% is provided, it will use the Typed API to handle\n     *  ambiguous cases where multiple errors match by name.\n     *\n     *  If the %%key%% and %%values%% do not refine to a single error in\n     *  the ABI, this will throw.\n     */\n    getError(key, values) {\n        if (isHexString(key)) {\n            const selector = key.toLowerCase();\n            if (BuiltinErrors[selector]) {\n                return ErrorFragment.from(BuiltinErrors[selector].signature);\n            }\n            for (const fragment of this.#errors.values()) {\n                if (selector === fragment.selector) {\n                    return fragment;\n                }\n            }\n            return null;\n        }\n        // It is a bare name, look up the function (will return null if ambiguous)\n        if (key.indexOf(\"(\") === -1) {\n            const matching = [];\n            for (const [name, fragment] of this.#errors) {\n                if (name.split(\"(\" /* fix:) */)[0] === key) {\n                    matching.push(fragment);\n                }\n            }\n            if (matching.length === 0) {\n                if (key === \"Error\") {\n                    return ErrorFragment.from(\"error Error(string)\");\n                }\n                if (key === \"Panic\") {\n                    return ErrorFragment.from(\"error Panic(uint256)\");\n                }\n                return null;\n            }\n            else if (matching.length > 1) {\n                const matchStr = matching.map((m) => JSON.stringify(m.format())).join(\", \");\n                assertArgument(false, `ambiguous error description (i.e. ${matchStr})`, \"name\", key);\n            }\n            return matching[0];\n        }\n        // Normalize the signature and lookup the function\n        key = ErrorFragment.from(key).format();\n        if (key === \"Error(string)\") {\n            return ErrorFragment.from(\"error Error(string)\");\n        }\n        if (key === \"Panic(uint256)\") {\n            return ErrorFragment.from(\"error Panic(uint256)\");\n        }\n        const result = this.#errors.get(key);\n        if (result) {\n            return result;\n        }\n        return null;\n    }\n    /**\n     *  Iterate over all errors, calling %%callback%%, sorted by their name.\n     */\n    forEachError(callback) {\n        const names = Array.from(this.#errors.keys());\n        names.sort((a, b) => a.localeCompare(b));\n        for (let i = 0; i < names.length; i++) {\n            const name = names[i];\n            callback((this.#errors.get(name)), i);\n        }\n    }\n    // Get the 4-byte selector used by Solidity to identify a function\n    /*\ngetSelector(fragment: ErrorFragment | FunctionFragment): string {\n    if (typeof(fragment) === \"string\") {\n        const matches: Array<Fragment> = [ ];\n\n        try { matches.push(this.getFunction(fragment)); } catch (error) { }\n        try { matches.push(this.getError(<string>fragment)); } catch (_) { }\n\n        if (matches.length === 0) {\n            logger.throwArgumentError(\"unknown fragment\", \"key\", fragment);\n        } else if (matches.length > 1) {\n            logger.throwArgumentError(\"ambiguous fragment matches function and error\", \"key\", fragment);\n        }\n\n        fragment = matches[0];\n    }\n\n    return dataSlice(id(fragment.format()), 0, 4);\n}\n    */\n    // Get the 32-byte topic hash used by Solidity to identify an event\n    /*\n    getEventTopic(fragment: EventFragment): string {\n        //if (typeof(fragment) === \"string\") { fragment = this.getEvent(eventFragment); }\n        return id(fragment.format());\n    }\n    */\n    _decodeParams(params, data) {\n        return this.#abiCoder.decode(params, data);\n    }\n    _encodeParams(params, values) {\n        return this.#abiCoder.encode(params, values);\n    }\n    /**\n     *  Encodes a ``tx.data`` object for deploying the Contract with\n     *  the %%values%% as the constructor arguments.\n     */\n    encodeDeploy(values) {\n        return this._encodeParams(this.deploy.inputs, values || []);\n    }\n    /**\n     *  Decodes the result %%data%% (e.g. from an ``eth_call``) for the\n     *  specified error (see [[getError]] for valid values for\n     *  %%key%%).\n     *\n     *  Most developers should prefer the [[parseResult]] method instead,\n     *  which will automatically detect a ``CALL_EXCEPTION`` and throw the\n     *  corresponding error.\n     */\n    decodeErrorResult(fragment, data) {\n        if (typeof (fragment) === \"string\") {\n            const f = this.getError(fragment);\n            assertArgument(f, \"unknown error\", \"fragment\", fragment);\n            fragment = f;\n        }\n        assertArgument(dataSlice(data, 0, 4) === fragment.selector, `data signature does not match error ${fragment.name}.`, \"data\", data);\n        return this._decodeParams(fragment.inputs, dataSlice(data, 4));\n    }\n    /**\n     *  Encodes the transaction revert data for a call result that\n     *  reverted from the the Contract with the sepcified %%error%%\n     *  (see [[getError]] for valid values for %%fragment%%) with the %%values%%.\n     *\n     *  This is generally not used by most developers, unless trying to mock\n     *  a result from a Contract.\n     */\n    encodeErrorResult(fragment, values) {\n        if (typeof (fragment) === \"string\") {\n            const f = this.getError(fragment);\n            assertArgument(f, \"unknown error\", \"fragment\", fragment);\n            fragment = f;\n        }\n        return concat([\n            fragment.selector,\n            this._encodeParams(fragment.inputs, values || [])\n        ]);\n    }\n    /**\n     *  Decodes the %%data%% from a transaction ``tx.data`` for\n     *  the function specified (see [[getFunction]] for valid values\n     *  for %%fragment%%).\n     *\n     *  Most developers should prefer the [[parseTransaction]] method\n     *  instead, which will automatically detect the fragment.\n     */\n    decodeFunctionData(fragment, data) {\n        if (typeof (fragment) === \"string\") {\n            const f = this.getFunction(fragment);\n            assertArgument(f, \"unknown function\", \"fragment\", fragment);\n            fragment = f;\n        }\n        assertArgument(dataSlice(data, 0, 4) === fragment.selector, `data signature does not match function ${fragment.name}.`, \"data\", data);\n        return this._decodeParams(fragment.inputs, dataSlice(data, 4));\n    }\n    /**\n     *  Encodes the ``tx.data`` for a transaction that calls the function\n     *  specified (see [[getFunction]] for valid values for %%fragment%%) with\n     *  the %%values%%.\n     */\n    encodeFunctionData(fragment, values) {\n        if (typeof (fragment) === \"string\") {\n            const f = this.getFunction(fragment);\n            assertArgument(f, \"unknown function\", \"fragment\", fragment);\n            fragment = f;\n        }\n        return concat([\n            fragment.selector,\n            this._encodeParams(fragment.inputs, values || [])\n        ]);\n    }\n    /**\n     *  Decodes the result %%data%% (e.g. from an ``eth_call``) for the\n     *  specified function (see [[getFunction]] for valid values for\n     *  %%key%%).\n     *\n     *  Most developers should prefer the [[parseResult]] method instead,\n     *  which will automatically detect a ``CALL_EXCEPTION`` and throw the\n     *  corresponding error.\n     */\n    decodeFunctionResult(fragment, data) {\n        if (typeof (fragment) === \"string\") {\n            const f = this.getFunction(fragment);\n            assertArgument(f, \"unknown function\", \"fragment\", fragment);\n            fragment = f;\n        }\n        let message = \"invalid length for result data\";\n        const bytes = getBytesCopy(data);\n        if ((bytes.length % 32) === 0) {\n            try {\n                return this.#abiCoder.decode(fragment.outputs, bytes);\n            }\n            catch (error) {\n                message = \"could not decode result data\";\n            }\n        }\n        // Call returned data with no error, but the data is junk\n        assert(false, message, \"BAD_DATA\", {\n            value: hexlify(bytes),\n            info: { method: fragment.name, signature: fragment.format() }\n        });\n    }\n    makeError(_data, tx) {\n        const data = getBytes(_data, \"data\");\n        const error = AbiCoder.getBuiltinCallException(\"call\", tx, data);\n        // Not a built-in error; try finding a custom error\n        if (!error.message.match(/could not decode/)) {\n            const selector = hexlify(data.slice(0, 4));\n            error.message = \"execution reverted (unknown custom error)\";\n            const ef = this.getError(selector);\n            if (ef) {\n                try {\n                    error.revert = {\n                        name: ef.name,\n                        signature: ef.format(),\n                        args: this.#abiCoder.decode(ef.inputs, data.slice(4))\n                    };\n                    error.reason = error.revert.signature;\n                    error.message = `execution reverted: ${error.reason}`;\n                }\n                catch (e) {\n                    error.message = `execution reverted (coult not decode custom error)`;\n                }\n            }\n        }\n        // Add the invocation, if available\n        const parsed = this.parseTransaction(tx);\n        if (parsed) {\n            error.invocation = {\n                method: parsed.name,\n                signature: parsed.signature,\n                args: parsed.args\n            };\n        }\n        return error;\n    }\n    /**\n     *  Encodes the result data (e.g. from an ``eth_call``) for the\n     *  specified function (see [[getFunction]] for valid values\n     *  for %%fragment%%) with %%values%%.\n     *\n     *  This is generally not used by most developers, unless trying to mock\n     *  a result from a Contract.\n     */\n    encodeFunctionResult(fragment, values) {\n        if (typeof (fragment) === \"string\") {\n            const f = this.getFunction(fragment);\n            assertArgument(f, \"unknown function\", \"fragment\", fragment);\n            fragment = f;\n        }\n        return hexlify(this.#abiCoder.encode(fragment.outputs, values || []));\n    }\n    /*\n        spelunk(inputs: Array<ParamType>, values: ReadonlyArray<any>, processfunc: (type: string, value: any) => Promise<any>): Promise<Array<any>> {\n            const promises: Array<Promise<>> = [ ];\n            const process = function(type: ParamType, value: any): any {\n                if (type.baseType === \"array\") {\n                    return descend(type.child\n                }\n                if (type. === \"address\") {\n                }\n            };\n    \n            const descend = function (inputs: Array<ParamType>, values: ReadonlyArray<any>) {\n                if (inputs.length !== values.length) { throw new Error(\"length mismatch\"); }\n                \n            };\n    \n            const result: Array<any> = [ ];\n            values.forEach((value, index) => {\n                if (value == null) {\n                    topics.push(null);\n                } else if (param.baseType === \"array\" || param.baseType === \"tuple\") {\n                    logger.throwArgumentError(\"filtering with tuples or arrays not supported\", (\"contract.\" + param.name), value);\n                } else if (Array.isArray(value)) {\n                    topics.push(value.map((value) => encodeTopic(param, value)));\n                } else {\n                    topics.push(encodeTopic(param, value));\n                }\n            });\n        }\n    */\n    // Create the filter for the event with search criteria (e.g. for eth_filterLog)\n    encodeFilterTopics(fragment, values) {\n        if (typeof (fragment) === \"string\") {\n            const f = this.getEvent(fragment);\n            assertArgument(f, \"unknown event\", \"eventFragment\", fragment);\n            fragment = f;\n        }\n        assert(values.length <= fragment.inputs.length, `too many arguments for ${fragment.format()}`, \"UNEXPECTED_ARGUMENT\", { count: values.length, expectedCount: fragment.inputs.length });\n        const topics = [];\n        if (!fragment.anonymous) {\n            topics.push(fragment.topicHash);\n        }\n        // @TODO: Use the coders for this; to properly support tuples, etc.\n        const encodeTopic = (param, value) => {\n            if (param.type === \"string\") {\n                return id(value);\n            }\n            else if (param.type === \"bytes\") {\n                return keccak256(hexlify(value));\n            }\n            if (param.type === \"bool\" && typeof (value) === \"boolean\") {\n                value = (value ? \"0x01\" : \"0x00\");\n            }\n            if (param.type.match(/^u?int/)) {\n                value = toBeHex(value);\n            }\n            // Check addresses are valid\n            if (param.type === \"address\") {\n                this.#abiCoder.encode([\"address\"], [value]);\n            }\n            return zeroPadValue(hexlify(value), 32);\n            //@TOOD should probably be return toHex(value, 32)\n        };\n        values.forEach((value, index) => {\n            const param = fragment.inputs[index];\n            if (!param.indexed) {\n                assertArgument(value == null, \"cannot filter non-indexed parameters; must be null\", (\"contract.\" + param.name), value);\n                return;\n            }\n            if (value == null) {\n                topics.push(null);\n            }\n            else if (param.baseType === \"array\" || param.baseType === \"tuple\") {\n                assertArgument(false, \"filtering with tuples or arrays not supported\", (\"contract.\" + param.name), value);\n            }\n            else if (Array.isArray(value)) {\n                topics.push(value.map((value) => encodeTopic(param, value)));\n            }\n            else {\n                topics.push(encodeTopic(param, value));\n            }\n        });\n        // Trim off trailing nulls\n        while (topics.length && topics[topics.length - 1] === null) {\n            topics.pop();\n        }\n        return topics;\n    }\n    encodeEventLog(fragment, values) {\n        if (typeof (fragment) === \"string\") {\n            const f = this.getEvent(fragment);\n            assertArgument(f, \"unknown event\", \"eventFragment\", fragment);\n            fragment = f;\n        }\n        const topics = [];\n        const dataTypes = [];\n        const dataValues = [];\n        if (!fragment.anonymous) {\n            topics.push(fragment.topicHash);\n        }\n        assertArgument(values.length === fragment.inputs.length, \"event arguments/values mismatch\", \"values\", values);\n        fragment.inputs.forEach((param, index) => {\n            const value = values[index];\n            if (param.indexed) {\n                if (param.type === \"string\") {\n                    topics.push(id(value));\n                }\n                else if (param.type === \"bytes\") {\n                    topics.push(keccak256(value));\n                }\n                else if (param.baseType === \"tuple\" || param.baseType === \"array\") {\n                    // @TODO\n                    throw new Error(\"not implemented\");\n                }\n                else {\n                    topics.push(this.#abiCoder.encode([param.type], [value]));\n                }\n            }\n            else {\n                dataTypes.push(param);\n                dataValues.push(value);\n            }\n        });\n        return {\n            data: this.#abiCoder.encode(dataTypes, dataValues),\n            topics: topics\n        };\n    }\n    // Decode a filter for the event and the search criteria\n    decodeEventLog(fragment, data, topics) {\n        if (typeof (fragment) === \"string\") {\n            const f = this.getEvent(fragment);\n            assertArgument(f, \"unknown event\", \"eventFragment\", fragment);\n            fragment = f;\n        }\n        if (topics != null && !fragment.anonymous) {\n            const eventTopic = fragment.topicHash;\n            assertArgument(isHexString(topics[0], 32) && topics[0].toLowerCase() === eventTopic, \"fragment/topic mismatch\", \"topics[0]\", topics[0]);\n            topics = topics.slice(1);\n        }\n        const indexed = [];\n        const nonIndexed = [];\n        const dynamic = [];\n        fragment.inputs.forEach((param, index) => {\n            if (param.indexed) {\n                if (param.type === \"string\" || param.type === \"bytes\" || param.baseType === \"tuple\" || param.baseType === \"array\") {\n                    indexed.push(ParamType.from({ type: \"bytes32\", name: param.name }));\n                    dynamic.push(true);\n                }\n                else {\n                    indexed.push(param);\n                    dynamic.push(false);\n                }\n            }\n            else {\n                nonIndexed.push(param);\n                dynamic.push(false);\n            }\n        });\n        const resultIndexed = (topics != null) ? this.#abiCoder.decode(indexed, concat(topics)) : null;\n        const resultNonIndexed = this.#abiCoder.decode(nonIndexed, data, true);\n        //const result: (Array<any> & { [ key: string ]: any }) = [ ];\n        const values = [];\n        const keys = [];\n        let nonIndexedIndex = 0, indexedIndex = 0;\n        fragment.inputs.forEach((param, index) => {\n            let value = null;\n            if (param.indexed) {\n                if (resultIndexed == null) {\n                    value = new Indexed(null);\n                }\n                else if (dynamic[index]) {\n                    value = new Indexed(resultIndexed[indexedIndex++]);\n                }\n                else {\n                    try {\n                        value = resultIndexed[indexedIndex++];\n                    }\n                    catch (error) {\n                        value = error;\n                    }\n                }\n            }\n            else {\n                try {\n                    value = resultNonIndexed[nonIndexedIndex++];\n                }\n                catch (error) {\n                    value = error;\n                }\n            }\n            values.push(value);\n            keys.push(param.name || null);\n        });\n        return Result.fromItems(values, keys);\n    }\n    /**\n     *  Parses a transaction, finding the matching function and extracts\n     *  the parameter values along with other useful function details.\n     *\n     *  If the matching function cannot be found, return null.\n     */\n    parseTransaction(tx) {\n        const data = getBytes(tx.data, \"tx.data\");\n        const value = getBigInt((tx.value != null) ? tx.value : 0, \"tx.value\");\n        const fragment = this.getFunction(hexlify(data.slice(0, 4)));\n        if (!fragment) {\n            return null;\n        }\n        const args = this.#abiCoder.decode(fragment.inputs, data.slice(4));\n        return new TransactionDescription(fragment, fragment.selector, args, value);\n    }\n    parseCallResult(data) {\n        throw new Error(\"@TODO\");\n    }\n    /**\n     *  Parses a receipt log, finding the matching event and extracts\n     *  the parameter values along with other useful event details.\n     *\n     *  If the matching event cannot be found, returns null.\n     */\n    parseLog(log) {\n        const fragment = this.getEvent(log.topics[0]);\n        if (!fragment || fragment.anonymous) {\n            return null;\n        }\n        // @TODO: If anonymous, and the only method, and the input count matches, should we parse?\n        //        Probably not, because just because it is the only event in the ABI does\n        //        not mean we have the full ABI; maybe just a fragment?\n        return new LogDescription(fragment, fragment.topicHash, this.decodeEventLog(fragment, log.data, log.topics));\n    }\n    /**\n     *  Parses a revert data, finding the matching error and extracts\n     *  the parameter values along with other useful error details.\n     *\n     *  If the matching event cannot be found, returns null.\n     */\n    parseError(data) {\n        const hexData = hexlify(data);\n        const fragment = this.getError(dataSlice(hexData, 0, 4));\n        if (!fragment) {\n            return null;\n        }\n        const args = this.#abiCoder.decode(fragment.inputs, dataSlice(hexData, 4));\n        return new ErrorDescription(fragment, fragment.selector, args);\n    }\n    /**\n     *  Creates a new [[Interface]] from the ABI %%value%%.\n     *\n     *  The %%value%% may be provided as an existing [[Interface]] object,\n     *  a JSON-encoded ABI or any Human-Readable ABI format.\n     */\n    static from(value) {\n        // Already an Interface, which is immutable\n        if (value instanceof Interface) {\n            return value;\n        }\n        // JSON\n        if (typeof (value) === \"string\") {\n            return new Interface(JSON.parse(value));\n        }\n        // Maybe an interface from an older version, or from a symlinked copy\n        if (typeof (value.format) === \"function\") {\n            return new Interface(value.format(\"json\"));\n        }\n        // Array of fragments\n        return new Interface(value);\n    }\n}\n//# sourceMappingURL=interface.js.map","//import { resolveAddress } from \"@ethersproject/address\";\nimport { defineProperties, getBigInt, getNumber, hexlify, resolveProperties, assert, assertArgument, isError, makeError } from \"../utils/index.js\";\nimport { accessListify } from \"../transaction/index.js\";\nconst BN_0 = BigInt(0);\n// -----------------------\nfunction getValue(value) {\n    if (value == null) {\n        return null;\n    }\n    return value;\n}\nfunction toJson(value) {\n    if (value == null) {\n        return null;\n    }\n    return value.toString();\n}\n// @TODO? <T extends FeeData = { }> implements Required<T>\n/**\n *  A **FeeData** wraps all the fee-related values associated with\n *  the network.\n */\nexport class FeeData {\n    /**\n     *  The gas price for legacy networks.\n     */\n    gasPrice;\n    /**\n     *  The maximum fee to pay per gas.\n     *\n     *  The base fee per gas is defined by the network and based on\n     *  congestion, increasing the cost during times of heavy load\n     *  and lowering when less busy.\n     *\n     *  The actual fee per gas will be the base fee for the block\n     *  and the priority fee, up to the max fee per gas.\n     *\n     *  This will be ``null`` on legacy networks (i.e. [pre-EIP-1559](link-eip-1559))\n     */\n    maxFeePerGas;\n    /**\n     *  The additional amout to pay per gas to encourage a validator\n     *  to include the transaction.\n     *\n     *  The purpose of this is to compensate the validator for the\n     *  adjusted risk for including a given transaction.\n     *\n     *  This will be ``null`` on legacy networks (i.e. [pre-EIP-1559](link-eip-1559))\n     */\n    maxPriorityFeePerGas;\n    /**\n     *  Creates a new FeeData for %%gasPrice%%, %%maxFeePerGas%% and\n     *  %%maxPriorityFeePerGas%%.\n     */\n    constructor(gasPrice, maxFeePerGas, maxPriorityFeePerGas) {\n        defineProperties(this, {\n            gasPrice: getValue(gasPrice),\n            maxFeePerGas: getValue(maxFeePerGas),\n            maxPriorityFeePerGas: getValue(maxPriorityFeePerGas)\n        });\n    }\n    /**\n     *  Returns a JSON-friendly value.\n     */\n    toJSON() {\n        const { gasPrice, maxFeePerGas, maxPriorityFeePerGas } = this;\n        return {\n            _type: \"FeeData\",\n            gasPrice: toJson(gasPrice),\n            maxFeePerGas: toJson(maxFeePerGas),\n            maxPriorityFeePerGas: toJson(maxPriorityFeePerGas),\n        };\n    }\n}\n;\nexport function copyRequest(req) {\n    const result = {};\n    // These could be addresses, ENS names or Addressables\n    if (req.to) {\n        result.to = req.to;\n    }\n    if (req.from) {\n        result.from = req.from;\n    }\n    if (req.data) {\n        result.data = hexlify(req.data);\n    }\n    const bigIntKeys = \"chainId,gasLimit,gasPrice,maxFeePerGas, maxPriorityFeePerGas,value\".split(/,/);\n    for (const key of bigIntKeys) {\n        if (!(key in req) || req[key] == null) {\n            continue;\n        }\n        result[key] = getBigInt(req[key], `request.${key}`);\n    }\n    const numberKeys = \"type,nonce\".split(/,/);\n    for (const key of numberKeys) {\n        if (!(key in req) || req[key] == null) {\n            continue;\n        }\n        result[key] = getNumber(req[key], `request.${key}`);\n    }\n    if (req.accessList) {\n        result.accessList = accessListify(req.accessList);\n    }\n    if (\"blockTag\" in req) {\n        result.blockTag = req.blockTag;\n    }\n    if (\"enableCcipRead\" in req) {\n        result.enableCcipReadEnabled = !!req.enableCcipRead;\n    }\n    if (\"customData\" in req) {\n        result.customData = req.customData;\n    }\n    return result;\n}\n/**\n *  A **Block** represents the data associated with a full block on\n *  Ethereum.\n */\nexport class Block {\n    /**\n     *  The provider connected to the block used to fetch additional details\n     *  if necessary.\n     */\n    provider;\n    /**\n     *  The block number, sometimes called the block height. This is a\n     *  sequential number that is one higher than the parent block.\n     */\n    number;\n    /**\n     *  The block hash.\n     */\n    hash;\n    /**\n     *  The timestamp for this block, which is the number of seconds since\n     *  epoch that this block was included.\n     */\n    timestamp;\n    /**\n     *  The block hash of the parent block.\n     */\n    parentHash;\n    /**\n     *  The nonce.\n     *\n     *  On legacy networks, this is the random number inserted which\n     *  permitted the difficulty target to be reached.\n     */\n    nonce;\n    /**\n     *  The difficulty target.\n     *\n     *  On legacy networks, this is the proof-of-work target required\n     *  for a block to meet the protocol rules to be included.\n     *\n     *  On modern networks, this is a random number arrived at using\n     *  randao.  @TODO: Find links?\n     */\n    difficulty;\n    /**\n     *  The total gas limit for this block.\n     */\n    gasLimit;\n    /**\n     *  The total gas used in this block.\n     */\n    gasUsed;\n    /**\n     *  The miner coinbase address, wihch receives any subsidies for\n     *  including this block.\n     */\n    miner;\n    /**\n     *  Any extra data the validator wished to include.\n     */\n    extraData;\n    /**\n     *  The base fee per gas that all transactions in this block were\n     *  charged.\n     *\n     *  This adjusts after each block, depending on how congested the network\n     *  is.\n     */\n    baseFeePerGas;\n    #transactions;\n    /**\n     *  Create a new **Block** object.\n     *\n     *  This should generally not be necessary as the unless implementing a\n     *  low-level library.\n     */\n    constructor(block, provider) {\n        this.#transactions = block.transactions.map((tx) => {\n            if (typeof (tx) !== \"string\") {\n                return new TransactionResponse(tx, provider);\n            }\n            return tx;\n        });\n        defineProperties(this, {\n            provider,\n            hash: getValue(block.hash),\n            number: block.number,\n            timestamp: block.timestamp,\n            parentHash: block.parentHash,\n            nonce: block.nonce,\n            difficulty: block.difficulty,\n            gasLimit: block.gasLimit,\n            gasUsed: block.gasUsed,\n            miner: block.miner,\n            extraData: block.extraData,\n            baseFeePerGas: getValue(block.baseFeePerGas)\n        });\n    }\n    /**\n     *  Returns the list of transaction hashes.\n     */\n    get transactions() {\n        return this.#transactions.map((tx) => {\n            if (typeof (tx) === \"string\") {\n                return tx;\n            }\n            return tx.hash;\n        });\n    }\n    /**\n     *  Returns the complete transactions for blocks which\n     *  prefetched them, by passing ``true`` to %%prefetchTxs%%\n     *  into [[provider_getBlock]].\n     */\n    get prefetchedTransactions() {\n        const txs = this.#transactions.slice();\n        // Doesn't matter...\n        if (txs.length === 0) {\n            return [];\n        }\n        // Make sure we prefetched the transactions\n        assert(typeof (txs[0]) === \"object\", \"transactions were not prefetched with block request\", \"UNSUPPORTED_OPERATION\", {\n            operation: \"transactionResponses()\"\n        });\n        return txs;\n    }\n    /**\n     *  Returns a JSON-friendly value.\n     */\n    toJSON() {\n        const { baseFeePerGas, difficulty, extraData, gasLimit, gasUsed, hash, miner, nonce, number, parentHash, timestamp, transactions } = this;\n        return {\n            _type: \"Block\",\n            baseFeePerGas: toJson(baseFeePerGas),\n            difficulty: toJson(difficulty),\n            extraData,\n            gasLimit: toJson(gasLimit),\n            gasUsed: toJson(gasUsed),\n            hash, miner, nonce, number, parentHash, timestamp,\n            transactions,\n        };\n    }\n    [Symbol.iterator]() {\n        let index = 0;\n        const txs = this.transactions;\n        return {\n            next: () => {\n                if (index < this.length) {\n                    return {\n                        value: txs[index++], done: false\n                    };\n                }\n                return { value: undefined, done: true };\n            }\n        };\n    }\n    /**\n     *  The number of transactions in this block.\n     */\n    get length() { return this.#transactions.length; }\n    /**\n     *  The [[link-js-date]] this block was included at.\n     */\n    get date() {\n        if (this.timestamp == null) {\n            return null;\n        }\n        return new Date(this.timestamp * 1000);\n    }\n    /**\n     *  Get the transaction at %%indexe%% within this block.\n     */\n    async getTransaction(indexOrHash) {\n        // Find the internal value by its index or hash\n        let tx = undefined;\n        if (typeof (indexOrHash) === \"number\") {\n            tx = this.#transactions[indexOrHash];\n        }\n        else {\n            const hash = indexOrHash.toLowerCase();\n            for (const v of this.#transactions) {\n                if (typeof (v) === \"string\") {\n                    if (v !== hash) {\n                        continue;\n                    }\n                    tx = v;\n                    break;\n                }\n                else {\n                    if (v.hash === hash) {\n                        continue;\n                    }\n                    tx = v;\n                    break;\n                }\n            }\n        }\n        if (tx == null) {\n            throw new Error(\"no such tx\");\n        }\n        if (typeof (tx) === \"string\") {\n            return (await this.provider.getTransaction(tx));\n        }\n        else {\n            return tx;\n        }\n    }\n    getPrefetchedTransaction(indexOrHash) {\n        const txs = this.prefetchedTransactions;\n        if (typeof (indexOrHash) === \"number\") {\n            return txs[indexOrHash];\n        }\n        indexOrHash = indexOrHash.toLowerCase();\n        for (const tx of txs) {\n            if (tx.hash === indexOrHash) {\n                return tx;\n            }\n        }\n        assertArgument(false, \"no matching transaction\", \"indexOrHash\", indexOrHash);\n    }\n    /**\n     *  Has this block been mined.\n     *\n     *  If true, the block has been typed-gaurded that all mined\n     *  properties are non-null.\n     */\n    isMined() { return !!this.hash; }\n    /**\n     *\n     */\n    isLondon() {\n        return !!this.baseFeePerGas;\n    }\n    orphanedEvent() {\n        if (!this.isMined()) {\n            throw new Error(\"\");\n        }\n        return createOrphanedBlockFilter(this);\n    }\n}\n//////////////////////\n// Log\nexport class Log {\n    provider;\n    transactionHash;\n    blockHash;\n    blockNumber;\n    removed;\n    address;\n    data;\n    topics;\n    index;\n    transactionIndex;\n    constructor(log, provider) {\n        this.provider = provider;\n        const topics = Object.freeze(log.topics.slice());\n        defineProperties(this, {\n            transactionHash: log.transactionHash,\n            blockHash: log.blockHash,\n            blockNumber: log.blockNumber,\n            removed: log.removed,\n            address: log.address,\n            data: log.data,\n            topics,\n            index: log.index,\n            transactionIndex: log.transactionIndex,\n        });\n    }\n    toJSON() {\n        const { address, blockHash, blockNumber, data, index, removed, topics, transactionHash, transactionIndex } = this;\n        return {\n            _type: \"log\",\n            address, blockHash, blockNumber, data, index,\n            removed, topics, transactionHash, transactionIndex\n        };\n    }\n    async getBlock() {\n        const block = await this.provider.getBlock(this.blockHash);\n        assert(!!block, \"failed to find transaction\", \"UNKNOWN_ERROR\", {});\n        return block;\n    }\n    async getTransaction() {\n        const tx = await this.provider.getTransaction(this.transactionHash);\n        assert(!!tx, \"failed to find transaction\", \"UNKNOWN_ERROR\", {});\n        return tx;\n    }\n    async getTransactionReceipt() {\n        const receipt = await this.provider.getTransactionReceipt(this.transactionHash);\n        assert(!!receipt, \"failed to find transaction receipt\", \"UNKNOWN_ERROR\", {});\n        return receipt;\n    }\n    removedEvent() {\n        return createRemovedLogFilter(this);\n    }\n}\n//////////////////////\n// Transaction Receipt\n/*\nexport interface LegacyTransactionReceipt {\n    byzantium: false;\n    status: null;\n    root: string;\n}\n\nexport interface ByzantiumTransactionReceipt {\n    byzantium: true;\n    status: number;\n    root: null;\n}\n*/\nexport class TransactionReceipt {\n    provider;\n    to;\n    from;\n    contractAddress;\n    hash;\n    index;\n    blockHash;\n    blockNumber;\n    logsBloom;\n    gasUsed;\n    cumulativeGasUsed;\n    gasPrice;\n    type;\n    //readonly byzantium!: boolean;\n    status;\n    root;\n    #logs;\n    constructor(tx, provider) {\n        this.#logs = Object.freeze(tx.logs.map((log) => {\n            return new Log(log, provider);\n        }));\n        defineProperties(this, {\n            provider,\n            to: tx.to,\n            from: tx.from,\n            contractAddress: tx.contractAddress,\n            hash: tx.hash,\n            index: tx.index,\n            blockHash: tx.blockHash,\n            blockNumber: tx.blockNumber,\n            logsBloom: tx.logsBloom,\n            gasUsed: tx.gasUsed,\n            cumulativeGasUsed: tx.cumulativeGasUsed,\n            gasPrice: (tx.effectiveGasPrice || tx.gasPrice),\n            type: tx.type,\n            //byzantium: tx.byzantium,\n            status: tx.status,\n            root: tx.root\n        });\n    }\n    get logs() { return this.#logs; }\n    toJSON() {\n        const { to, from, contractAddress, hash, index, blockHash, blockNumber, logsBloom, logs, //byzantium, \n        status, root } = this;\n        return {\n            _type: \"TransactionReceipt\",\n            blockHash, blockNumber,\n            //byzantium, \n            contractAddress,\n            cumulativeGasUsed: toJson(this.cumulativeGasUsed),\n            from,\n            gasPrice: toJson(this.gasPrice),\n            gasUsed: toJson(this.gasUsed),\n            hash, index, logs, logsBloom, root, status, to\n        };\n    }\n    get length() { return this.logs.length; }\n    [Symbol.iterator]() {\n        let index = 0;\n        return {\n            next: () => {\n                if (index < this.length) {\n                    return { value: this.logs[index++], done: false };\n                }\n                return { value: undefined, done: true };\n            }\n        };\n    }\n    get fee() {\n        return this.gasUsed * this.gasPrice;\n    }\n    async getBlock() {\n        const block = await this.provider.getBlock(this.blockHash);\n        if (block == null) {\n            throw new Error(\"TODO\");\n        }\n        return block;\n    }\n    async getTransaction() {\n        const tx = await this.provider.getTransaction(this.hash);\n        if (tx == null) {\n            throw new Error(\"TODO\");\n        }\n        return tx;\n    }\n    async getResult() {\n        return (await this.provider.getTransactionResult(this.hash));\n    }\n    async confirmations() {\n        return (await this.provider.getBlockNumber()) - this.blockNumber + 1;\n    }\n    removedEvent() {\n        return createRemovedTransactionFilter(this);\n    }\n    reorderedEvent(other) {\n        assert(!other || other.isMined(), \"unmined 'other' transction cannot be orphaned\", \"UNSUPPORTED_OPERATION\", { operation: \"reorderedEvent(other)\" });\n        return createReorderedTransactionFilter(this, other);\n    }\n}\n/*\nexport type ReplacementDetectionSetup = {\n    to: string;\n    from: string;\n    value: bigint;\n    data: string;\n    nonce: number;\n    block: number;\n};\n*/\nexport class TransactionResponse {\n    provider;\n    blockNumber;\n    blockHash;\n    index;\n    hash;\n    type;\n    to;\n    from;\n    nonce;\n    gasLimit;\n    gasPrice;\n    maxPriorityFeePerGas;\n    maxFeePerGas;\n    data;\n    value;\n    chainId;\n    signature;\n    accessList;\n    #startBlock;\n    constructor(tx, provider) {\n        this.provider = provider;\n        this.blockNumber = (tx.blockNumber != null) ? tx.blockNumber : null;\n        this.blockHash = (tx.blockHash != null) ? tx.blockHash : null;\n        this.hash = tx.hash;\n        this.index = tx.index;\n        this.type = tx.type;\n        this.from = tx.from;\n        this.to = tx.to || null;\n        this.gasLimit = tx.gasLimit;\n        this.nonce = tx.nonce;\n        this.data = tx.data;\n        this.value = tx.value;\n        this.gasPrice = tx.gasPrice;\n        this.maxPriorityFeePerGas = (tx.maxPriorityFeePerGas != null) ? tx.maxPriorityFeePerGas : null;\n        this.maxFeePerGas = (tx.maxFeePerGas != null) ? tx.maxFeePerGas : null;\n        this.chainId = tx.chainId;\n        this.signature = tx.signature;\n        this.accessList = (tx.accessList != null) ? tx.accessList : null;\n        this.#startBlock = -1;\n    }\n    toJSON() {\n        const { blockNumber, blockHash, index, hash, type, to, from, nonce, data, signature, accessList } = this;\n        return {\n            _type: \"TransactionReceipt\",\n            accessList, blockNumber, blockHash,\n            chainId: toJson(this.chainId),\n            data, from,\n            gasLimit: toJson(this.gasLimit),\n            gasPrice: toJson(this.gasPrice),\n            hash,\n            maxFeePerGas: toJson(this.maxFeePerGas),\n            maxPriorityFeePerGas: toJson(this.maxPriorityFeePerGas),\n            nonce, signature, to, index, type,\n            value: toJson(this.value),\n        };\n    }\n    async getBlock() {\n        let blockNumber = this.blockNumber;\n        if (blockNumber == null) {\n            const tx = await this.getTransaction();\n            if (tx) {\n                blockNumber = tx.blockNumber;\n            }\n        }\n        if (blockNumber == null) {\n            return null;\n        }\n        const block = this.provider.getBlock(blockNumber);\n        if (block == null) {\n            throw new Error(\"TODO\");\n        }\n        return block;\n    }\n    async getTransaction() {\n        return this.provider.getTransaction(this.hash);\n    }\n    async wait(_confirms, _timeout) {\n        const confirms = (_confirms == null) ? 1 : _confirms;\n        const timeout = (_timeout == null) ? 0 : _timeout;\n        let startBlock = this.#startBlock;\n        let nextScan = -1;\n        let stopScanning = (startBlock === -1) ? true : false;\n        const checkReplacement = async () => {\n            // Get the current transaction count for this sender\n            if (stopScanning) {\n                return null;\n            }\n            const { blockNumber, nonce } = await resolveProperties({\n                blockNumber: this.provider.getBlockNumber(),\n                nonce: this.provider.getTransactionCount(this.from)\n            });\n            // No transaction or our nonce has not been mined yet; but we\n            // can start scanning later when we do start\n            if (nonce < this.nonce) {\n                startBlock = blockNumber;\n                return;\n            }\n            // We were mined; no replacement\n            if (stopScanning) {\n                return null;\n            }\n            const mined = await this.getTransaction();\n            if (mined && mined.blockNumber != null) {\n                return;\n            }\n            // We were replaced; start scanning for that transaction\n            // Starting to scan; look back a few extra blocks for safety\n            if (nextScan === -1) {\n                nextScan = startBlock - 3;\n                if (nextScan < this.#startBlock) {\n                    nextScan = this.#startBlock;\n                }\n            }\n            while (nextScan <= blockNumber) {\n                // Get the next block to scan\n                if (stopScanning) {\n                    return null;\n                }\n                const block = await this.provider.getBlock(nextScan, true);\n                // This should not happen; but we'll try again shortly\n                if (block == null) {\n                    return;\n                }\n                // We were mined; no replacement\n                for (const hash of block) {\n                    if (hash === this.hash) {\n                        return;\n                    }\n                }\n                // Search for the transaction that replaced us\n                for (let i = 0; i < block.length; i++) {\n                    const tx = await block.getTransaction(i);\n                    if (tx.from === this.from && tx.nonce === this.nonce) {\n                        // Get the receipt\n                        if (stopScanning) {\n                            return null;\n                        }\n                        const receipt = await this.provider.getTransactionReceipt(tx.hash);\n                        // This should not happen; but we'll try again shortly\n                        if (receipt == null) {\n                            return;\n                        }\n                        // We will retry this on the next block (this case could be optimized)\n                        if ((blockNumber - receipt.blockNumber + 1) < confirms) {\n                            return;\n                        }\n                        // The reason we were replaced\n                        let reason = \"replaced\";\n                        if (tx.data === this.data && tx.to === this.to && tx.value === this.value) {\n                            reason = \"repriced\";\n                        }\n                        else if (tx.data === \"0x\" && tx.from === tx.to && tx.value === BN_0) {\n                            reason = \"cancelled\";\n                        }\n                        assert(false, \"transaction was replaced\", \"TRANSACTION_REPLACED\", {\n                            cancelled: (reason === \"replaced\" || reason === \"cancelled\"),\n                            reason,\n                            replacement: tx.replaceableTransaction(startBlock),\n                            hash: tx.hash,\n                            receipt\n                        });\n                    }\n                }\n                nextScan++;\n            }\n            return;\n        };\n        const receipt = await this.provider.getTransactionReceipt(this.hash);\n        if (receipt) {\n            if ((await receipt.confirmations()) >= confirms) {\n                return receipt;\n            }\n        }\n        else {\n            // Check for a replacement; throws if a replacement was found\n            await checkReplacement();\n            // Allow null only when the confirms is 0\n            if (confirms === 0) {\n                return null;\n            }\n        }\n        const waiter = new Promise((resolve, reject) => {\n            // List of things to cancel when we have a result (one way or the other)\n            const cancellers = [];\n            const cancel = () => { cancellers.forEach((c) => c()); };\n            // On cancel, stop scanning for replacements\n            cancellers.push(() => { stopScanning = true; });\n            // Set up any timeout requested\n            if (timeout > 0) {\n                const timer = setTimeout(() => {\n                    cancel();\n                    reject(makeError(\"wait for transaction timeout\", \"TIMEOUT\"));\n                }, timeout);\n                cancellers.push(() => { clearTimeout(timer); });\n            }\n            const txListener = async (receipt) => {\n                // Done; return it!\n                if ((await receipt.confirmations()) >= confirms) {\n                    cancel();\n                    resolve(receipt);\n                }\n            };\n            cancellers.push(() => { this.provider.off(this.hash, txListener); });\n            this.provider.on(this.hash, txListener);\n            // We support replacement detection; start checking\n            if (startBlock >= 0) {\n                const replaceListener = async () => {\n                    try {\n                        // Check for a replacement; this throws only if one is found\n                        await checkReplacement();\n                    }\n                    catch (error) {\n                        // We were replaced (with enough confirms); re-throw the error\n                        if (isError(error, \"TRANSACTION_REPLACED\")) {\n                            cancel();\n                            reject(error);\n                            return;\n                        }\n                    }\n                    // Rescheudle a check on the next block\n                    if (!stopScanning) {\n                        this.provider.once(\"block\", replaceListener);\n                    }\n                };\n                cancellers.push(() => { this.provider.off(\"block\", replaceListener); });\n                this.provider.once(\"block\", replaceListener);\n            }\n        });\n        return await waiter;\n    }\n    isMined() {\n        return (this.blockHash != null);\n    }\n    isLegacy() {\n        return (this.type === 0);\n    }\n    isBerlin() {\n        return (this.type === 1);\n    }\n    isLondon() {\n        return (this.type === 2);\n    }\n    removedEvent() {\n        assert(this.isMined(), \"unmined transaction canot be orphaned\", \"UNSUPPORTED_OPERATION\", { operation: \"removeEvent()\" });\n        return createRemovedTransactionFilter(this);\n    }\n    reorderedEvent(other) {\n        assert(this.isMined(), \"unmined transaction canot be orphaned\", \"UNSUPPORTED_OPERATION\", { operation: \"removeEvent()\" });\n        assert(!other || other.isMined(), \"unmined 'other' transaction canot be orphaned\", \"UNSUPPORTED_OPERATION\", { operation: \"removeEvent()\" });\n        return createReorderedTransactionFilter(this, other);\n    }\n    /**\n     *  Returns a new TransactionResponse instance which has the ability to\n     *  detect (and throw an error) if the transaction is replaced, which\n     *  will begin scanning at %%startBlock%%.\n     *\n     *  This should generally not be used by developers and is intended\n     *  primarily for internal use. Setting an incorrect %%startBlock%% can\n     *  have devastating performance consequences if used incorrectly.\n     */\n    replaceableTransaction(startBlock) {\n        assertArgument(Number.isInteger(startBlock) && startBlock >= 0, \"invalid startBlock\", \"startBlock\", startBlock);\n        const tx = new TransactionResponse(this, this.provider);\n        tx.#startBlock = startBlock;\n        return tx;\n    }\n}\nfunction createOrphanedBlockFilter(block) {\n    return { orphan: \"drop-block\", hash: block.hash, number: block.number };\n}\nfunction createReorderedTransactionFilter(tx, other) {\n    return { orphan: \"reorder-transaction\", tx, other };\n}\nfunction createRemovedTransactionFilter(tx) {\n    return { orphan: \"drop-transaction\", tx };\n}\nfunction createRemovedLogFilter(log) {\n    return { orphan: \"drop-log\", log: {\n            transactionHash: log.transactionHash,\n            blockHash: log.blockHash,\n            blockNumber: log.blockNumber,\n            address: log.address,\n            data: log.data,\n            topics: Object.freeze(log.topics.slice()),\n            index: log.index\n        } };\n}\n//# sourceMappingURL=provider.js.map","/**\n *  Explain events...\n *\n *  @_section api/utils/events:Events  [about-events]\n */\nimport { defineProperties } from \"./properties.js\";\n/**\n *  When an [[EventEmitterable]] triggers a [[Listener]], the\n *  callback always ahas one additional argument passed, which is\n *  an **EventPayload**.\n */\nexport class EventPayload {\n    /**\n     *  The event filter.\n     */\n    filter;\n    /**\n     *  The **EventEmitterable**.\n     */\n    emitter;\n    #listener;\n    /**\n     *  Create a new **EventPayload** for %%emitter%% with\n     *  the %%listener%% and for %%filter%%.\n     */\n    constructor(emitter, listener, filter) {\n        this.#listener = listener;\n        defineProperties(this, { emitter, filter });\n    }\n    /**\n     *  Unregister the triggered listener for future events.\n     */\n    async removeListener() {\n        if (this.#listener == null) {\n            return;\n        }\n        await this.emitter.off(this.filter, this.#listener);\n    }\n}\n//# sourceMappingURL=events.js.map","// import from provider.ts instead of index.ts to prevent circular dep\n// from EtherscanProvider\nimport { Log, TransactionReceipt, TransactionResponse } from \"../providers/provider.js\";\nimport { defineProperties, EventPayload } from \"../utils/index.js\";\nexport class EventLog extends Log {\n    interface;\n    fragment;\n    args;\n    constructor(log, iface, fragment) {\n        super(log, log.provider);\n        const args = iface.decodeEventLog(fragment, log.data, log.topics);\n        defineProperties(this, { args, fragment, interface: iface });\n    }\n    get eventName() { return this.fragment.name; }\n    get eventSignature() { return this.fragment.format(); }\n}\nexport class ContractTransactionReceipt extends TransactionReceipt {\n    #interface;\n    constructor(iface, provider, tx) {\n        super(tx, provider);\n        this.#interface = iface;\n    }\n    get logs() {\n        return super.logs.map((log) => {\n            const fragment = log.topics.length ? this.#interface.getEvent(log.topics[0]) : null;\n            if (fragment) {\n                return new EventLog(log, this.#interface, fragment);\n            }\n            else {\n                return log;\n            }\n        });\n    }\n}\nexport class ContractTransactionResponse extends TransactionResponse {\n    #interface;\n    constructor(iface, provider, tx) {\n        super(tx, provider);\n        this.#interface = iface;\n    }\n    async wait(confirms) {\n        const receipt = await super.wait();\n        if (receipt == null) {\n            return null;\n        }\n        return new ContractTransactionReceipt(this.#interface, this.provider, receipt);\n    }\n}\nexport class ContractUnknownEventPayload extends EventPayload {\n    log;\n    constructor(contract, listener, filter, log) {\n        super(contract, listener, filter);\n        defineProperties(this, { log });\n    }\n    async getBlock() {\n        return await this.log.getBlock();\n    }\n    async getTransaction() {\n        return await this.log.getTransaction();\n    }\n    async getTransactionReceipt() {\n        return await this.log.getTransactionReceipt();\n    }\n}\nexport class ContractEventPayload extends ContractUnknownEventPayload {\n    constructor(contract, listener, filter, fragment, _log) {\n        super(contract, listener, filter, new EventLog(_log, contract.interface, fragment));\n        const args = contract.interface.decodeEventLog(fragment, this.log.data, this.log.topics);\n        defineProperties(this, { args, fragment });\n    }\n    get eventName() {\n        return this.fragment.name;\n    }\n    get eventSignature() {\n        return this.fragment.format();\n    }\n}\n//# sourceMappingURL=wrappers.js.map","import { Interface, Typed } from \"../abi/index.js\";\nimport { resolveAddress } from \"../address/index.js\";\n// import from provider.ts instead of index.ts to prevent circular dep\n// from EtherscanProvider\nimport { copyRequest, Log } from \"../providers/provider.js\";\nimport { defineProperties, isCallException, isHexString, resolveProperties, makeError, assert, assertArgument } from \"../utils/index.js\";\nimport { ContractEventPayload, ContractUnknownEventPayload, ContractTransactionResponse, EventLog } from \"./wrappers.js\";\nconst BN_0 = BigInt(0);\nfunction canCall(value) {\n    return (value && typeof (value.call) === \"function\");\n}\nfunction canEstimate(value) {\n    return (value && typeof (value.estimateGas) === \"function\");\n}\nfunction canResolve(value) {\n    return (value && typeof (value.resolveName) === \"function\");\n}\nfunction canSend(value) {\n    return (value && typeof (value.sendTransaction) === \"function\");\n}\nclass PreparedTopicFilter {\n    #filter;\n    fragment;\n    constructor(contract, fragment, args) {\n        defineProperties(this, { fragment });\n        if (fragment.inputs.length < args.length) {\n            throw new Error(\"too many arguments\");\n        }\n        // Recursively descend into args and resolve any addresses\n        const runner = getRunner(contract.runner, \"resolveName\");\n        const resolver = canResolve(runner) ? runner : null;\n        this.#filter = (async function () {\n            const resolvedArgs = await Promise.all(fragment.inputs.map((param, index) => {\n                const arg = args[index];\n                if (arg == null) {\n                    return null;\n                }\n                return param.walkAsync(args[index], (type, value) => {\n                    if (type === \"address\") {\n                        return resolveAddress(value, resolver);\n                    }\n                    return value;\n                });\n            }));\n            return contract.interface.encodeFilterTopics(fragment, resolvedArgs);\n        })();\n    }\n    getTopicFilter() {\n        return this.#filter;\n    }\n}\n// A = Arguments passed in as a tuple\n// R = The result type of the call (i.e. if only one return type,\n//     the qualified type, otherwise Result)\n// D = The type the default call will return (i.e. R for view/pure,\n//     TransactionResponse otherwise)\n//export interface ContractMethod<A extends Array<any> = Array<any>, R = any, D extends R | ContractTransactionResponse = ContractTransactionResponse> {\nfunction _WrappedMethodBase() {\n    return Function;\n}\nfunction getRunner(value, feature) {\n    if (value == null) {\n        return null;\n    }\n    if (typeof (value[feature]) === \"function\") {\n        return value;\n    }\n    if (value.provider && typeof (value.provider[feature]) === \"function\") {\n        return value.provider;\n    }\n    return null;\n}\nfunction getProvider(value) {\n    if (value == null) {\n        return null;\n    }\n    return value.provider || null;\n}\n/**\n *  @_ignore:\n */\nexport async function copyOverrides(arg, allowed) {\n    // Create a shallow copy (we'll deep-ify anything needed during normalizing)\n    const overrides = copyRequest(Typed.dereference(arg, \"overrides\"));\n    assertArgument(overrides.to == null || (allowed || []).indexOf(\"to\") >= 0, \"cannot override to\", \"overrides.to\", overrides.to);\n    assertArgument(overrides.data == null || (allowed || []).indexOf(\"data\") >= 0, \"cannot override data\", \"overrides.data\", overrides.data);\n    // Resolve any from\n    if (overrides.from) {\n        overrides.from = await resolveAddress(overrides.from);\n    }\n    return overrides;\n}\n/**\n *  @_ignore:\n */\nexport async function resolveArgs(_runner, inputs, args) {\n    // Recursively descend into args and resolve any addresses\n    const runner = getRunner(_runner, \"resolveName\");\n    const resolver = canResolve(runner) ? runner : null;\n    return await Promise.all(inputs.map((param, index) => {\n        return param.walkAsync(args[index], (type, value) => {\n            value = Typed.dereference(value, type);\n            if (type === \"address\") {\n                return resolveAddress(value, resolver);\n            }\n            return value;\n        });\n    }));\n}\nclass WrappedFallback {\n    _contract;\n    constructor(contract) {\n        defineProperties(this, { _contract: contract });\n        const proxy = new Proxy(this, {\n            // Perform send when called\n            apply: async (target, thisArg, args) => {\n                return await target.send(...args);\n            },\n        });\n        return proxy;\n    }\n    async populateTransaction(overrides) {\n        // If an overrides was passed in, copy it and normalize the values\n        const tx = (await copyOverrides(overrides, [\"data\"]));\n        tx.to = await this._contract.getAddress();\n        const iface = this._contract.interface;\n        // Only allow payable contracts to set non-zero value\n        const payable = iface.receive || (iface.fallback && iface.fallback.payable);\n        assertArgument(payable || (tx.value || BN_0) === BN_0, \"cannot send value to non-payable contract\", \"overrides.value\", tx.value);\n        // Only allow fallback contracts to set non-empty data\n        assertArgument(iface.fallback || (tx.data || \"0x\") === \"0x\", \"cannot send data to receive-only contract\", \"overrides.data\", tx.data);\n        return tx;\n    }\n    async staticCall(overrides) {\n        const runner = getRunner(this._contract.runner, \"call\");\n        assert(canCall(runner), \"contract runner does not support calling\", \"UNSUPPORTED_OPERATION\", { operation: \"call\" });\n        const tx = await this.populateTransaction(overrides);\n        try {\n            return await runner.call(tx);\n        }\n        catch (error) {\n            if (isCallException(error) && error.data) {\n                throw this._contract.interface.makeError(error.data, tx);\n            }\n            throw error;\n        }\n    }\n    async send(overrides) {\n        const runner = this._contract.runner;\n        assert(canSend(runner), \"contract runner does not support sending transactions\", \"UNSUPPORTED_OPERATION\", { operation: \"sendTransaction\" });\n        const tx = await runner.sendTransaction(await this.populateTransaction(overrides));\n        const provider = getProvider(this._contract.runner);\n        // @TODO: the provider can be null; make a custom dummy provider that will throw a\n        // meaningful error\n        return new ContractTransactionResponse(this._contract.interface, provider, tx);\n    }\n    async estimateGas(overrides) {\n        const runner = getRunner(this._contract.runner, \"estimateGas\");\n        assert(canEstimate(runner), \"contract runner does not support gas estimation\", \"UNSUPPORTED_OPERATION\", { operation: \"estimateGas\" });\n        return await runner.estimateGas(await this.populateTransaction(overrides));\n    }\n}\nclass WrappedMethod extends _WrappedMethodBase() {\n    name = \"\"; // Investigate!\n    _contract;\n    _key;\n    constructor(contract, key) {\n        super();\n        defineProperties(this, {\n            name: contract.interface.getFunctionName(key),\n            _contract: contract, _key: key\n        });\n        const proxy = new Proxy(this, {\n            // Perform the default operation for this fragment type\n            apply: async (target, thisArg, args) => {\n                const fragment = target.getFragment(...args);\n                if (fragment.constant) {\n                    return await target.staticCall(...args);\n                }\n                return await target.send(...args);\n            },\n        });\n        return proxy;\n    }\n    // Only works on non-ambiguous keys (refined fragment is always non-ambiguous)\n    get fragment() {\n        const fragment = this._contract.interface.getFunction(this._key);\n        assert(fragment, \"no matching fragment\", \"UNSUPPORTED_OPERATION\", {\n            operation: \"fragment\"\n        });\n        return fragment;\n    }\n    getFragment(...args) {\n        const fragment = this._contract.interface.getFunction(this._key, args);\n        assert(fragment, \"no matching fragment\", \"UNSUPPORTED_OPERATION\", {\n            operation: \"fragment\"\n        });\n        return fragment;\n    }\n    async populateTransaction(...args) {\n        const fragment = this.getFragment(...args);\n        // If an overrides was passed in, copy it and normalize the values\n        let overrides = {};\n        if (fragment.inputs.length + 1 === args.length) {\n            overrides = await copyOverrides(args.pop());\n        }\n        if (fragment.inputs.length !== args.length) {\n            throw new Error(\"internal error: fragment inputs doesn't match arguments; should not happen\");\n        }\n        const resolvedArgs = await resolveArgs(this._contract.runner, fragment.inputs, args);\n        return Object.assign({}, overrides, await resolveProperties({\n            to: this._contract.getAddress(),\n            data: this._contract.interface.encodeFunctionData(fragment, resolvedArgs)\n        }));\n    }\n    async staticCall(...args) {\n        const result = await this.staticCallResult(...args);\n        if (result.length === 1) {\n            return result[0];\n        }\n        return result;\n    }\n    async send(...args) {\n        const runner = this._contract.runner;\n        assert(canSend(runner), \"contract runner does not support sending transactions\", \"UNSUPPORTED_OPERATION\", { operation: \"sendTransaction\" });\n        const tx = await runner.sendTransaction(await this.populateTransaction(...args));\n        const provider = getProvider(this._contract.runner);\n        // @TODO: the provider can be null; make a custom dummy provider that will throw a\n        // meaningful error\n        return new ContractTransactionResponse(this._contract.interface, provider, tx);\n    }\n    async estimateGas(...args) {\n        const runner = getRunner(this._contract.runner, \"estimateGas\");\n        assert(canEstimate(runner), \"contract runner does not support gas estimation\", \"UNSUPPORTED_OPERATION\", { operation: \"estimateGas\" });\n        return await runner.estimateGas(await this.populateTransaction(...args));\n    }\n    async staticCallResult(...args) {\n        const runner = getRunner(this._contract.runner, \"call\");\n        assert(canCall(runner), \"contract runner does not support calling\", \"UNSUPPORTED_OPERATION\", { operation: \"call\" });\n        const tx = await this.populateTransaction(...args);\n        let result = \"0x\";\n        try {\n            result = await runner.call(tx);\n        }\n        catch (error) {\n            if (isCallException(error) && error.data) {\n                throw this._contract.interface.makeError(error.data, tx);\n            }\n            throw error;\n        }\n        const fragment = this.getFragment(...args);\n        return this._contract.interface.decodeFunctionResult(fragment, result);\n    }\n}\nfunction _WrappedEventBase() {\n    return Function;\n}\nclass WrappedEvent extends _WrappedEventBase() {\n    name = \"\"; // @TODO: investigate \n    _contract;\n    _key;\n    constructor(contract, key) {\n        super();\n        defineProperties(this, {\n            name: contract.interface.getEventName(key),\n            _contract: contract, _key: key\n        });\n        return new Proxy(this, {\n            // Perform the default operation for this fragment type\n            apply: (target, thisArg, args) => {\n                return new PreparedTopicFilter(contract, target.getFragment(...args), args);\n            },\n        });\n    }\n    // Only works on non-ambiguous keys\n    get fragment() {\n        const fragment = this._contract.interface.getEvent(this._key);\n        assert(fragment, \"no matching fragment\", \"UNSUPPORTED_OPERATION\", {\n            operation: \"fragment\"\n        });\n        return fragment;\n    }\n    getFragment(...args) {\n        const fragment = this._contract.interface.getEvent(this._key, args);\n        assert(fragment, \"no matching fragment\", \"UNSUPPORTED_OPERATION\", {\n            operation: \"fragment\"\n        });\n        return fragment;\n    }\n}\n;\n// The combination of TypeScrype, Private Fields and Proxies makes\n// the world go boom; so we hide variables with some trickery keeping\n// a symbol attached to each BaseContract which its sub-class (even\n// via a Proxy) can reach and use to look up its internal values.\nconst internal = Symbol.for(\"_ethersInternal_contract\");\nconst internalValues = new WeakMap();\nfunction setInternal(contract, values) {\n    internalValues.set(contract[internal], values);\n}\nfunction getInternal(contract) {\n    return internalValues.get(contract[internal]);\n}\nfunction isDeferred(value) {\n    return (value && typeof (value) === \"object\" && (\"getTopicFilter\" in value) &&\n        (typeof (value.getTopicFilter) === \"function\") && value.fragment);\n}\nasync function getSubInfo(contract, event) {\n    let topics;\n    let fragment = null;\n    // Convert named events to topicHash and get the fragment for\n    // events which need deconstructing.\n    if (Array.isArray(event)) {\n        const topicHashify = function (name) {\n            if (isHexString(name, 32)) {\n                return name;\n            }\n            const fragment = contract.interface.getEvent(name);\n            assertArgument(fragment, \"unknown fragment\", \"name\", name);\n            return fragment.topicHash;\n        };\n        // Array of Topics and Names; e.g. `[ \"0x1234...89ab\", \"Transfer(address)\" ]`\n        topics = event.map((e) => {\n            if (e == null) {\n                return null;\n            }\n            if (Array.isArray(e)) {\n                return e.map(topicHashify);\n            }\n            return topicHashify(e);\n        });\n    }\n    else if (event === \"*\") {\n        topics = [null];\n    }\n    else if (typeof (event) === \"string\") {\n        if (isHexString(event, 32)) {\n            // Topic Hash\n            topics = [event];\n        }\n        else {\n            // Name or Signature; e.g. `\"Transfer\", `\"Transfer(address)\"`\n            fragment = contract.interface.getEvent(event);\n            assertArgument(fragment, \"unknown fragment\", \"event\", event);\n            topics = [fragment.topicHash];\n        }\n    }\n    else if (isDeferred(event)) {\n        // Deferred Topic Filter; e.g. `contract.filter.Transfer(from)`\n        topics = await event.getTopicFilter();\n    }\n    else if (\"fragment\" in event) {\n        // ContractEvent; e.g. `contract.filter.Transfer`\n        fragment = event.fragment;\n        topics = [fragment.topicHash];\n    }\n    else {\n        assertArgument(false, \"unknown event name\", \"event\", event);\n    }\n    // Normalize topics and sort TopicSets\n    topics = topics.map((t) => {\n        if (t == null) {\n            return null;\n        }\n        if (Array.isArray(t)) {\n            const items = Array.from(new Set(t.map((t) => t.toLowerCase())).values());\n            if (items.length === 1) {\n                return items[0];\n            }\n            items.sort();\n            return items;\n        }\n        return t.toLowerCase();\n    });\n    const tag = topics.map((t) => {\n        if (t == null) {\n            return \"null\";\n        }\n        if (Array.isArray(t)) {\n            return t.join(\"|\");\n        }\n        return t;\n    }).join(\"&\");\n    return { fragment, tag, topics };\n}\nasync function hasSub(contract, event) {\n    const { subs } = getInternal(contract);\n    return subs.get((await getSubInfo(contract, event)).tag) || null;\n}\nasync function getSub(contract, operation, event) {\n    // Make sure our runner can actually subscribe to events\n    const provider = getProvider(contract.runner);\n    assert(provider, \"contract runner does not support subscribing\", \"UNSUPPORTED_OPERATION\", { operation });\n    const { fragment, tag, topics } = await getSubInfo(contract, event);\n    const { addr, subs } = getInternal(contract);\n    let sub = subs.get(tag);\n    if (!sub) {\n        const address = (addr ? addr : contract);\n        const filter = { address, topics };\n        const listener = (log) => {\n            let foundFragment = fragment;\n            if (foundFragment == null) {\n                try {\n                    foundFragment = contract.interface.getEvent(log.topics[0]);\n                }\n                catch (error) { }\n            }\n            // If fragment is null, we do not deconstruct the args to emit\n            if (foundFragment) {\n                const _foundFragment = foundFragment;\n                const args = fragment ? contract.interface.decodeEventLog(fragment, log.data, log.topics) : [];\n                emit(contract, event, args, (listener) => {\n                    return new ContractEventPayload(contract, listener, event, _foundFragment, log);\n                });\n            }\n            else {\n                emit(contract, event, [], (listener) => {\n                    return new ContractUnknownEventPayload(contract, listener, event, log);\n                });\n            }\n        };\n        let starting = [];\n        const start = () => {\n            if (starting.length) {\n                return;\n            }\n            starting.push(provider.on(filter, listener));\n        };\n        const stop = async () => {\n            if (starting.length == 0) {\n                return;\n            }\n            let started = starting;\n            starting = [];\n            await Promise.all(started);\n            provider.off(filter, listener);\n        };\n        sub = { tag, listeners: [], start, stop };\n        subs.set(tag, sub);\n    }\n    return sub;\n}\n// We use this to ensure one emit resolves before firing the next to\n// ensure correct ordering (note this cannot throw and just adds the\n// notice to the event queu using setTimeout).\nlet lastEmit = Promise.resolve();\nasync function _emit(contract, event, args, payloadFunc) {\n    await lastEmit;\n    const sub = await hasSub(contract, event);\n    if (!sub) {\n        return false;\n    }\n    const count = sub.listeners.length;\n    sub.listeners = sub.listeners.filter(({ listener, once }) => {\n        const passArgs = args.slice();\n        if (payloadFunc) {\n            passArgs.push(payloadFunc(once ? null : listener));\n        }\n        try {\n            listener.call(contract, ...passArgs);\n        }\n        catch (error) { }\n        return !once;\n    });\n    return (count > 0);\n}\nasync function emit(contract, event, args, payloadFunc) {\n    try {\n        await lastEmit;\n    }\n    catch (error) { }\n    const resultPromise = _emit(contract, event, args, payloadFunc);\n    lastEmit = resultPromise;\n    return await resultPromise;\n}\nconst passProperties = [\"then\"];\nexport class BaseContract {\n    target;\n    interface;\n    runner;\n    filters;\n    [internal];\n    fallback;\n    constructor(target, abi, runner, _deployTx) {\n        if (runner == null) {\n            runner = null;\n        }\n        const iface = Interface.from(abi);\n        defineProperties(this, { target, runner, interface: iface });\n        Object.defineProperty(this, internal, { value: {} });\n        let addrPromise;\n        let addr = null;\n        let deployTx = null;\n        if (_deployTx) {\n            const provider = getProvider(runner);\n            // @TODO: the provider can be null; make a custom dummy provider that will throw a\n            // meaningful error\n            deployTx = new ContractTransactionResponse(this.interface, provider, _deployTx);\n        }\n        let subs = new Map();\n        // Resolve the target as the address\n        if (typeof (target) === \"string\") {\n            if (isHexString(target)) {\n                addr = target;\n                addrPromise = Promise.resolve(target);\n            }\n            else {\n                const resolver = getRunner(runner, \"resolveName\");\n                if (!canResolve(resolver)) {\n                    throw makeError(\"contract runner does not support name resolution\", \"UNSUPPORTED_OPERATION\", {\n                        operation: \"resolveName\"\n                    });\n                }\n                addrPromise = resolver.resolveName(target).then((addr) => {\n                    if (addr == null) {\n                        throw new Error(\"TODO\");\n                    }\n                    getInternal(this).addr = addr;\n                    return addr;\n                });\n            }\n        }\n        else {\n            addrPromise = target.getAddress().then((addr) => {\n                if (addr == null) {\n                    throw new Error(\"TODO\");\n                }\n                getInternal(this).addr = addr;\n                return addr;\n            });\n        }\n        // Set our private values\n        setInternal(this, { addrPromise, addr, deployTx, subs });\n        // Add the event filters\n        const filters = new Proxy({}, {\n            get: (target, _prop, receiver) => {\n                // Pass important checks (like `then` for Promise) through\n                if (passProperties.indexOf(_prop) >= 0) {\n                    return Reflect.get(target, _prop, receiver);\n                }\n                const prop = String(_prop);\n                const result = this.getEvent(prop);\n                if (result) {\n                    return result;\n                }\n                throw new Error(`unknown contract event: ${prop}`);\n            }\n        });\n        defineProperties(this, { filters });\n        defineProperties(this, {\n            fallback: ((iface.receive || iface.fallback) ? (new WrappedFallback(this)) : null)\n        });\n        // Return a Proxy that will respond to functions\n        return new Proxy(this, {\n            get: (target, _prop, receiver) => {\n                if (_prop in target || passProperties.indexOf(_prop) >= 0) {\n                    return Reflect.get(target, _prop, receiver);\n                }\n                const prop = String(_prop);\n                const result = target.getFunction(prop);\n                if (result) {\n                    return result;\n                }\n                throw new Error(`unknown contract method: ${prop}`);\n            }\n        });\n    }\n    connect(runner) {\n        return new BaseContract(this.target, this.interface, runner);\n    }\n    async getAddress() { return await getInternal(this).addrPromise; }\n    async getDeployedCode() {\n        const provider = getProvider(this.runner);\n        assert(provider, \"runner does not support .provider\", \"UNSUPPORTED_OPERATION\", { operation: \"getDeployedCode\" });\n        const code = await provider.getCode(await this.getAddress());\n        if (code === \"0x\") {\n            return null;\n        }\n        return code;\n    }\n    async waitForDeployment() {\n        // We have the deployement transaction; just use that (throws if deployement fails)\n        const deployTx = this.deploymentTransaction();\n        if (deployTx) {\n            await deployTx.wait();\n            return this;\n        }\n        // Check for code\n        const code = await this.getDeployedCode();\n        if (code != null) {\n            return this;\n        }\n        // Make sure we can subscribe to a provider event\n        const provider = getProvider(this.runner);\n        assert(provider != null, \"contract runner does not support .provider\", \"UNSUPPORTED_OPERATION\", { operation: \"waitForDeployment\" });\n        return new Promise((resolve, reject) => {\n            const checkCode = async () => {\n                try {\n                    const code = await this.getDeployedCode();\n                    if (code != null) {\n                        return resolve(this);\n                    }\n                    provider.once(\"block\", checkCode);\n                }\n                catch (error) {\n                    reject(error);\n                }\n            };\n            checkCode();\n        });\n    }\n    deploymentTransaction() {\n        return getInternal(this).deployTx;\n    }\n    getFunction(key) {\n        if (typeof (key) !== \"string\") {\n            key = key.format();\n        }\n        return (new WrappedMethod(this, key));\n    }\n    getEvent(key) {\n        if (typeof (key) !== \"string\") {\n            key = key.format();\n        }\n        return (new WrappedEvent(this, key));\n    }\n    async queryTransaction(hash) {\n        // Is this useful?\n        throw new Error(\"@TODO\");\n    }\n    async queryFilter(event, fromBlock, toBlock) {\n        if (fromBlock == null) {\n            fromBlock = 0;\n        }\n        if (toBlock == null) {\n            toBlock = \"latest\";\n        }\n        const { addr, addrPromise } = getInternal(this);\n        const address = (addr ? addr : (await addrPromise));\n        const { fragment, topics } = await getSubInfo(this, event);\n        const filter = { address, topics, fromBlock, toBlock };\n        const provider = getProvider(this.runner);\n        assert(provider, \"contract runner does not have a provider\", \"UNSUPPORTED_OPERATION\", { operation: \"queryFilter\" });\n        return (await provider.getLogs(filter)).map((log) => {\n            let foundFragment = fragment;\n            if (foundFragment == null) {\n                try {\n                    foundFragment = this.interface.getEvent(log.topics[0]);\n                }\n                catch (error) { }\n            }\n            if (foundFragment) {\n                return new EventLog(log, this.interface, foundFragment);\n            }\n            else {\n                return new Log(log, provider);\n            }\n        });\n    }\n    async on(event, listener) {\n        const sub = await getSub(this, \"on\", event);\n        sub.listeners.push({ listener, once: false });\n        sub.start();\n        return this;\n    }\n    async once(event, listener) {\n        const sub = await getSub(this, \"once\", event);\n        sub.listeners.push({ listener, once: true });\n        sub.start();\n        return this;\n    }\n    async emit(event, ...args) {\n        return await emit(this, event, args, null);\n    }\n    async listenerCount(event) {\n        if (event) {\n            const sub = await hasSub(this, event);\n            if (!sub) {\n                return 0;\n            }\n            return sub.listeners.length;\n        }\n        const { subs } = getInternal(this);\n        let total = 0;\n        for (const { listeners } of subs.values()) {\n            total += listeners.length;\n        }\n        return total;\n    }\n    async listeners(event) {\n        if (event) {\n            const sub = await hasSub(this, event);\n            if (!sub) {\n                return [];\n            }\n            return sub.listeners.map(({ listener }) => listener);\n        }\n        const { subs } = getInternal(this);\n        let result = [];\n        for (const { listeners } of subs.values()) {\n            result = result.concat(listeners.map(({ listener }) => listener));\n        }\n        return result;\n    }\n    async off(event, listener) {\n        const sub = await hasSub(this, event);\n        if (!sub) {\n            return this;\n        }\n        if (listener) {\n            const index = sub.listeners.map(({ listener }) => listener).indexOf(listener);\n            if (index >= 0) {\n                sub.listeners.splice(index, 1);\n            }\n        }\n        if (listener == null || sub.listeners.length === 0) {\n            sub.stop();\n            getInternal(this).subs.delete(sub.tag);\n        }\n        return this;\n    }\n    async removeAllListeners(event) {\n        if (event) {\n            const sub = await hasSub(this, event);\n            if (!sub) {\n                return this;\n            }\n            sub.stop();\n            getInternal(this).subs.delete(sub.tag);\n        }\n        else {\n            const { subs } = getInternal(this);\n            for (const { tag, stop } of subs.values()) {\n                stop();\n                subs.delete(tag);\n            }\n        }\n        return this;\n    }\n    // Alias for \"on\"\n    async addListener(event, listener) {\n        return await this.on(event, listener);\n    }\n    // Alias for \"off\"\n    async removeListener(event, listener) {\n        return await this.off(event, listener);\n    }\n    static buildClass(abi) {\n        class CustomContract extends BaseContract {\n            constructor(address, runner = null) {\n                super(address, abi, runner);\n            }\n        }\n        return CustomContract;\n    }\n    ;\n    static from(target, abi, runner) {\n        if (runner == null) {\n            runner = null;\n        }\n        const contract = new this(target, abi, runner);\n        return contract;\n    }\n}\nfunction _ContractBase() {\n    return BaseContract;\n}\nexport class Contract extends _ContractBase() {\n}\n//# sourceMappingURL=contract.js.map","function decode_arithmetic(bytes) {\r\n\tlet pos = 0;\r\n\tfunction u16() { return (bytes[pos++] << 8) | bytes[pos++]; }\r\n\t\r\n\t// decode the frequency table\r\n\tlet symbol_count = u16();\r\n\tlet total = 1;\r\n\tlet acc = [0, 1]; // first symbol has frequency 1\r\n\tfor (let i = 1; i < symbol_count; i++) {\r\n\t\tacc.push(total += u16());\r\n\t}\r\n\r\n\t// skip the sized-payload that the last 3 symbols index into\r\n\tlet skip = u16();\r\n\tlet pos_payload = pos;\r\n\tpos += skip;\r\n\r\n\tlet read_width = 0;\r\n\tlet read_buffer = 0; \r\n\tfunction read_bit() {\r\n\t\tif (read_width == 0) {\r\n\t\t\t// this will read beyond end of buffer\r\n\t\t\t// but (undefined|0) => zero pad\r\n\t\t\tread_buffer = (read_buffer << 8) | bytes[pos++];\r\n\t\t\tread_width = 8;\r\n\t\t}\r\n\t\treturn (read_buffer >> --read_width) & 1;\r\n\t}\r\n\r\n\tconst N = 31;\r\n\tconst FULL = 2**N;\r\n\tconst HALF = FULL >>> 1;\r\n\tconst QRTR = HALF >> 1;\r\n\tconst MASK = FULL - 1;\r\n\r\n\t// fill register\r\n\tlet register = 0;\r\n\tfor (let i = 0; i < N; i++) register = (register << 1) | read_bit();\r\n\r\n\tlet symbols = [];\r\n\tlet low = 0;\r\n\tlet range = FULL; // treat like a float\r\n\twhile (true) {\r\n\t\tlet value = Math.floor((((register - low + 1) * total) - 1) / range);\r\n\t\tlet start = 0;\r\n\t\tlet end = symbol_count;\r\n\t\twhile (end - start > 1) { // binary search\r\n\t\t\tlet mid = (start + end) >>> 1;\r\n\t\t\tif (value < acc[mid]) {\r\n\t\t\t\tend = mid;\r\n\t\t\t} else {\r\n\t\t\t\tstart = mid;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (start == 0) break; // first symbol is end mark\r\n\t\tsymbols.push(start);\r\n\t\tlet a = low + Math.floor(range * acc[start]   / total);\r\n\t\tlet b = low + Math.floor(range * acc[start+1] / total) - 1;\r\n\t\twhile (((a ^ b) & HALF) == 0) {\r\n\t\t\tregister = (register << 1) & MASK | read_bit();\r\n\t\t\ta = (a << 1) & MASK;\r\n\t\t\tb = (b << 1) & MASK | 1;\r\n\t\t}\r\n\t\twhile (a & ~b & QRTR) {\r\n\t\t\tregister = (register & HALF) | ((register << 1) & (MASK >>> 1)) | read_bit();\r\n\t\t\ta = (a << 1) ^ HALF;\r\n\t\t\tb = ((b ^ HALF) << 1) | HALF | 1;\r\n\t\t}\r\n\t\tlow = a;\r\n\t\trange = 1 + b - a;\r\n\t}\r\n\tlet offset = symbol_count - 4;\r\n\treturn symbols.map(x => { // index into payload\r\n\t\tswitch (x - offset) {\r\n\t\t\tcase 3: return offset + 0x10100 + ((bytes[pos_payload++] << 16) | (bytes[pos_payload++] << 8) | bytes[pos_payload++]);\r\n\t\t\tcase 2: return offset + 0x100 + ((bytes[pos_payload++] << 8) | bytes[pos_payload++]);\r\n\t\t\tcase 1: return offset + bytes[pos_payload++];\r\n\t\t\tdefault: return x - 1;\r\n\t\t}\r\n\t});\r\n}\t\r\n\r\n// returns an iterator which returns the next symbol\r\nfunction read_payload(v) {\r\n\tlet pos = 0;\r\n\treturn () => v[pos++];\r\n}\r\nfunction read_compressed_payload(s) {\r\n\treturn read_payload(decode_arithmetic(unsafe_atob(s)));\r\n}\r\n\r\n// unsafe in the sense:\r\n// expected well-formed Base64 w/o padding \r\nfunction unsafe_atob(s) {\r\n\tlet lookup = [];\r\n\t[...'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'].forEach((c, i) => lookup[c.charCodeAt(0)] = i);\r\n\tlet n = s.length;\r\n\tlet ret = new Uint8Array((6 * n) >> 3);\r\n\tfor (let i = 0, pos = 0, width = 0, carry = 0; i < n; i++) {\r\n\t\tcarry = (carry << 6) | lookup[s.charCodeAt(i)];\r\n\t\twidth += 6;\r\n\t\tif (width >= 8) {\r\n\t\t\tret[pos++] = (carry >> (width -= 8));\r\n\t\t}\r\n\t}\r\n\treturn ret;\r\n}\r\n\r\n// eg. [0,1,2,3...] => [0,-1,1,-2,...]\r\nfunction signed(i) { \r\n\treturn (i & 1) ? (~i >> 1) : (i >> 1);\r\n}\r\n\r\nfunction read_deltas(n, next) {\r\n\tlet v = Array(n);\r\n\tfor (let i = 0, x = 0; i < n; i++) v[i] = x += signed(next());\r\n\treturn v;\r\n}\r\n\r\n// [123][5] => [0 3] [1 1] [0 0]\r\nfunction read_sorted(next, prev = 0) {\r\n\tlet ret = [];\r\n\twhile (true) {\r\n\t\tlet x = next();\r\n\t\tlet n = next();\r\n\t\tif (!n) break;\r\n\t\tprev += x;\r\n\t\tfor (let i = 0; i < n; i++) {\r\n\t\t\tret.push(prev + i);\r\n\t\t}\r\n\t\tprev += n + 1;\r\n\t}\r\n\treturn ret;\r\n}\r\n\r\nfunction read_sorted_arrays(next) {\r\n\treturn read_array_while(() => { \r\n\t\tlet v = read_sorted(next);\r\n\t\tif (v.length) return v;\r\n\t});\r\n}\r\n\r\n// returns map of x => ys\r\nfunction read_mapped(next) {\r\n\tlet ret = [];\r\n\twhile (true) {\r\n\t\tlet w = next();\r\n\t\tif (w == 0) break;\r\n\t\tret.push(read_linear_table(w, next));\r\n\t}\r\n\twhile (true) {\r\n\t\tlet w = next() - 1;\r\n\t\tif (w < 0) break;\r\n\t\tret.push(read_replacement_table(w, next));\r\n\t}\r\n\treturn ret.flat();\r\n}\r\n\r\n// read until next is falsy\r\n// return array of read values\r\nfunction read_array_while(next) {\r\n\tlet v = [];\r\n\twhile (true) {\r\n\t\tlet x = next(v.length);\r\n\t\tif (!x) break;\r\n\t\tv.push(x);\r\n\t}\r\n\treturn v;\r\n}\r\n\r\n// read w columns of length n\r\n// return as n rows of length w\r\nfunction read_transposed(n, w, next) {\r\n\tlet m = Array(n).fill().map(() => []);\r\n\tfor (let i = 0; i < w; i++) {\r\n\t\tread_deltas(n, next).forEach((x, j) => m[j].push(x));\r\n\t}\r\n\treturn m;\r\n}\r\n \r\n// returns [[x, ys], [x+dx, ys+dy], [x+2*dx, ys+2*dy], ...]\r\n// where dx/dy = steps, n = run size, w = length of y\r\nfunction read_linear_table(w, next) {\r\n\tlet dx = 1 + next();\r\n\tlet dy = next();\r\n\tlet vN = read_array_while(next);\r\n\tlet m = read_transposed(vN.length, 1+w, next);\r\n\treturn m.flatMap((v, i) => {\r\n\t\tlet [x, ...ys] = v;\r\n\t\treturn Array(vN[i]).fill().map((_, j) => {\r\n\t\t\tlet j_dy = j * dy;\r\n\t\t\treturn [x + j * dx, ys.map(y => y + j_dy)];\r\n\t\t});\r\n\t});\r\n}\r\n\r\n// return [[x, ys...], ...]\r\n// where w = length of y\r\nfunction read_replacement_table(w, next) { \r\n\tlet n = 1 + next();\r\n\tlet m = read_transposed(n, 1+w, next);\r\n\treturn m.map(v => [v[0], v.slice(1)]);\r\n}\n\n// created 2023-01-26T08:54:35.886Z\nvar r = read_compressed_payload('');\nconst FENCED = new Map([[8217,\"apostrophe\"],[8260,\"fraction slash\"],[12539,\"middle dot\"]]);\n\nfunction hex_cp(cp) {\r\n\treturn cp.toString(16).toUpperCase().padStart(2, '0');\r\n}\r\n\r\nfunction quote_cp(cp) {\r\n\treturn `{${hex_cp(cp)}}`; // raffy convention: like \"\\u{X}\" w/o the \"\\u\"\r\n}\r\n\r\n/*\r\nexport function explode_cp(s) {\r\n\treturn [...s].map(c => c.codePointAt(0));\r\n}\r\n*/\r\nfunction explode_cp(s) { // this is about 2x faster\r\n\tlet cps = [];\r\n\tfor (let pos = 0, len = s.length; pos < len; ) {\r\n\t\tlet cp = s.codePointAt(pos);\r\n\t\tpos += cp < 0x10000 ? 1 : 2;\r\n\t\tcps.push(cp);\r\n\t}\r\n\treturn cps;\r\n}\r\n\r\nfunction str_from_cps(cps) {\r\n\tconst chunk = 4096;\r\n\tlet len = cps.length;\r\n\tif (len < chunk) return String.fromCodePoint(...cps);\r\n\tlet buf = [];\r\n\tfor (let i = 0; i < len; ) {\r\n\t\tbuf.push(String.fromCodePoint(...cps.slice(i, i += chunk)));\r\n\t}\r\n\treturn buf.join('');\r\n}\r\n\r\nfunction compare_arrays(a, b) {\r\n\tlet n = a.length;\r\n\tlet c = n - b.length;\r\n\tfor (let i = 0; c == 0 && i < n; i++) c = a[i] - b[i];\r\n\treturn c;\r\n}\n\n// reverse polyfill\r\n\r\nfunction nf(cps, form) {\r\n\treturn explode_cp(str_from_cps(cps).normalize(form));\r\n}\r\n\r\nfunction nfc(cps) {\r\n\treturn nf(cps, 'NFC');\r\n}\r\nfunction nfd(cps) {\r\n\treturn nf(cps, 'NFD');\r\n}\n\n//const t0 = performance.now();\r\n\r\nconst STOP = 0x2E;\r\nconst FE0F = 0xFE0F;\r\nconst STOP_CH = '.';\r\nconst UNIQUE_PH = 1;\r\nconst HYPHEN = 0x2D;\r\n\r\nfunction read_set() {\r\n\treturn new Set(read_sorted(r));\r\n}\r\nconst MAPPED = new Map(read_mapped(r)); \r\nconst IGNORED = read_set(); // ignored characters are not valid, so just read raw codepoints\r\n/*\r\n// direct include from payload is smaller that the decompression code\r\nconst FENCED = new Map(read_array_while(() => {\r\n\tlet cp = r();\r\n\tif (cp) return [cp, read_str(r())];\r\n}));\r\n*/\r\nconst CM = read_set();\r\nconst ESCAPE = read_set(); // characters that should not be printed\r\nconst NFC_CHECK = read_set();\r\nconst CHUNKS = read_sorted_arrays(r);\r\nfunction read_chunked() {\r\n\t// deduplicated sets + uniques\r\n\treturn new Set([read_sorted(r).map(i => CHUNKS[i]), read_sorted(r)].flat(2));\r\n}\r\nconst UNRESTRICTED = r();\r\nconst GROUPS = read_array_while(i => {\r\n\t// minifier property mangling seems unsafe\r\n\t// so these are manually renamed to single chars\r\n\tlet N = read_array_while(r).map(x => x+0x60);\r\n\tif (N.length) {\r\n\t\tlet R = i >= UNRESTRICTED; // first arent restricted\r\n\t\tN[0] -= 32; // capitalize\r\n\t\tN = str_from_cps(N);\r\n\t\tif (R) N=`Restricted[${N}]`;\r\n\t\tlet P = read_chunked(); // primary\r\n\t\tlet Q = read_chunked(); // secondary\r\n\t\tlet V = [...P, ...Q].sort((a, b) => a-b); // derive: sorted valid\r\n\t\tlet M = r()-1; // combining mark\r\n\t\t// code currently isn't needed\r\n\t\t/*if (M < 0) { // whitelisted\r\n\t\t\tM = new Map(read_array_while(() => {\r\n\t\t\t\tlet i = r();\r\n\t\t\t\tif (i) return [V[i-1], read_array_while(() => {\r\n\t\t\t\t\tlet v = read_array_while(r);\r\n\t\t\t\t\tif (v.length) return v.map(x => x-1);\r\n\t\t\t\t})];\r\n\t\t\t}));\r\n\t\t}*/\r\n\t\treturn {N, P, M, R, V: new Set(V)};\r\n\t}\r\n});\r\nconst WHOLE_VALID = read_set();\r\nconst WHOLE_MAP = new Map();\r\n// decode compressed wholes\r\n[...WHOLE_VALID, ...read_set()].sort((a, b) => a-b).map((cp, i, v) => {\r\n\tlet d = r(); \r\n\tlet w = v[i] = d ? v[i-d] : {V: [], M: new Map()};\r\n\tw.V.push(cp); // add to member set\r\n\tif (!WHOLE_VALID.has(cp)) {\r\n\t\tWHOLE_MAP.set(cp, w);  // register with whole map\r\n\t}\r\n});\r\n// compute confusable-extent complements\r\nfor (let {V, M} of new Set(WHOLE_MAP.values())) {\r\n\t// connect all groups that have each whole character\r\n\tlet recs = [];\r\n\tfor (let cp of V) {\r\n\t\tlet gs = GROUPS.filter(g => g.V.has(cp));\r\n\t\tlet rec = recs.find(({G}) => gs.some(g => G.has(g)));\r\n\t\tif (!rec) {\r\n\t\t\trec = {G: new Set(), V: []};\r\n\t\t\trecs.push(rec);\r\n\t\t}\r\n\t\trec.V.push(cp);\r\n\t\tgs.forEach(g => rec.G.add(g));\r\n\t}\r\n\t// per character cache groups which are not a member of the extent\r\n\tlet union = recs.flatMap(({G}) => [...G]);\r\n\tfor (let {G, V} of recs) {\r\n\t\tlet complement = new Set(union.filter(g => !G.has(g)));\r\n\t\tfor (let cp of V) {\r\n\t\t\tM.set(cp, complement);\r\n\t\t}\r\n\t}\r\n}\r\nlet union = new Set(); // exists in 1+ groups\r\nlet multi = new Set(); // exists in 2+ groups\r\nfor (let g of GROUPS) {\r\n\tfor (let cp of g.V) {\r\n\t\t(union.has(cp) ? multi : union).add(cp);\r\n\t}\r\n}\r\n// dual purpose WHOLE_MAP: return placeholder if unique non-confusable\r\nfor (let cp of union) {\r\n\tif (!WHOLE_MAP.has(cp) && !multi.has(cp)) {\r\n\t\tWHOLE_MAP.set(cp, UNIQUE_PH);\r\n\t}\r\n}\r\nconst VALID = new Set([...union, ...nfd(union)]); // possibly valid\r\n\r\n// decode emoji\r\nconst EMOJI_SORTED = read_sorted(r);\r\n//const EMOJI_SOLO = new Set(read_sorted(r).map(i => EMOJI_SORTED[i])); // not needed\r\nconst EMOJI_ROOT = read_emoji_trie([]);\r\nfunction read_emoji_trie(cps) {\r\n\tlet B = read_array_while(() => {\r\n\t\tlet keys = read_sorted(r).map(i => EMOJI_SORTED[i]);\r\n\t\tif (keys.length) return read_emoji_trie(keys);\r\n\t}).sort((a, b) => b.Q.size - a.Q.size); // sort by likelihood\r\n\tlet temp = r();\r\n\tlet V = temp % 3; // valid (0 = false, 1 = true, 2 = weird)\r\n\ttemp = (temp / 3)|0;\r\n\tlet F = temp & 1; // allow FE0F\r\n\ttemp >>= 1;\r\n\tlet S = temp & 1; // save\r\n\tlet C = temp & 2; // check\r\n\treturn {B, V, F, S, C, Q: new Set(cps)};\r\n}\r\n//console.log(performance.now() - t0);\r\n\r\n// free tagging system\r\nclass Emoji extends Array {\r\n\tget is_emoji() { return true; }\r\n}\r\n\r\n// create a safe to print string \r\n// invisibles are escaped\r\n// leading cm uses placeholder\r\nfunction safe_str_from_cps(cps, quoter = quote_cp) {\r\n\t//if (Number.isInteger(cps)) cps = [cps];\r\n\t//if (!Array.isArray(cps)) throw new TypeError(`expected codepoints`);\r\n\tlet buf = [];\r\n\tif (is_combining_mark(cps[0])) buf.push('◌');\r\n\tlet prev = 0;\r\n\tlet n = cps.length;\r\n\tfor (let i = 0; i < n; i++) {\r\n\t\tlet cp = cps[i];\r\n\t\tif (should_escape(cp)) {\r\n\t\t\tbuf.push(str_from_cps(cps.slice(prev, i)));\r\n\t\t\tbuf.push(quoter(cp));\r\n\t\t\tprev = i + 1;\r\n\t\t}\r\n\t}\r\n\tbuf.push(str_from_cps(cps.slice(prev, n)));\r\n\treturn buf.join('');\r\n}\r\n\r\n// if escaped: {HEX}\r\n//       else: \"x\" {HEX}\r\nfunction quoted_cp(cp) {\r\n\treturn (should_escape(cp) ? '' : `\"${safe_str_from_cps([cp])}\" `) + quote_cp(cp);\r\n}\r\n\r\nfunction check_label_extension(cps) {\r\n\tif (cps.length >= 4 && cps[2] == HYPHEN && cps[3] == HYPHEN) {\r\n\t\tthrow new Error('invalid label extension');\r\n\t}\r\n}\r\nfunction check_leading_underscore(cps) {\r\n\tconst UNDERSCORE = 0x5F;\r\n\tfor (let i = cps.lastIndexOf(UNDERSCORE); i > 0; ) {\r\n\t\tif (cps[--i] !== UNDERSCORE) {\r\n\t\t\tthrow new Error('underscore allowed only at start');\r\n\t\t}\r\n\t}\r\n}\r\n// check that a fenced cp is not leading, trailing, or touching another fenced cp\r\nfunction check_fenced(cps) {\r\n\tlet cp = cps[0];\r\n\tlet prev = FENCED.get(cp);\r\n\tif (prev) throw error_placement(`leading ${prev}`);\r\n\tlet n = cps.length;\r\n\tlet last = -1;\r\n\tfor (let i = 1; i < n; i++) {\r\n\t\tcp = cps[i];\r\n\t\tlet match = FENCED.get(cp);\r\n\t\tif (match) {\r\n\t\t\tif (last == i) throw error_placement(`${prev} + ${match}`);\r\n\t\t\tlast = i + 1;\r\n\t\t\tprev = match;\r\n\t\t}\r\n\t}\r\n\tif (last == n) throw error_placement(`trailing ${prev}`);\r\n}\r\n\r\n// note: set(s) cannot be exposed because they can be modified\r\nfunction is_combining_mark(cp) {\r\n\treturn CM.has(cp);\r\n}\r\nfunction should_escape(cp) {\r\n\treturn ESCAPE.has(cp);\r\n}\r\n\r\nfunction ens_normalize_fragment(frag, decompose) {\r\n\tlet nf = decompose ? nfd : nfc;\r\n\treturn frag.split(STOP_CH).map(label => str_from_cps(process(explode_cp(label), nf).flatMap(x => x.is_emoji ? filter_fe0f(x) : x))).join(STOP_CH);\r\n}\r\n\r\nfunction ens_normalize(name) {\r\n\treturn flatten(ens_split(name));\r\n}\r\n\r\nfunction ens_beautify(name) {\r\n\tlet split = ens_split(name, true);\r\n\t// this is experimental\r\n\tfor (let {type, output, error} of split) {\r\n\t\tif (error) continue;\r\n\r\n\t\t// replace leading/trailing hyphen\r\n\t\t// 20230121: consider beautifing all or leading/trailing hyphen to unicode variant\r\n\t\t// not exactly the same in every font, but very similar: \"-\" vs \"‐\"\r\n\t\t/*\r\n\t\tconst UNICODE_HYPHEN = 0x2010;\r\n\t\t// maybe this should replace all for visual consistancy?\r\n\t\t// `node tools/reg-count.js regex ^-\\{2,\\}` => 592\r\n\t\t//for (let i = 0; i < output.length; i++) if (output[i] == 0x2D) output[i] = 0x2010;\r\n\t\tif (output[0] == HYPHEN) output[0] = UNICODE_HYPHEN;\r\n\t\tlet end = output.length-1;\r\n\t\tif (output[end] == HYPHEN) output[end] = UNICODE_HYPHEN;\r\n\t\t*/\r\n\t\t// 20230123: WHATWG URL uses \"CheckHyphens\" false\r\n\t\t// https://url.spec.whatwg.org/#idna\r\n\r\n\t\t// ξ => Ξ if not greek\r\n\t\tif (type !== 'Greek') { \r\n\t\t\tlet prev = 0;\r\n\t\t\twhile (true) {\r\n\t\t\t\tlet next = output.indexOf(0x3BE, prev);\r\n\t\t\t\tif (next < 0) break;\r\n\t\t\t\toutput[next] = 0x39E; \r\n\t\t\t\tprev = next + 1;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// 20221213: fixes bidi subdomain issue, but breaks invariant (200E is disallowed)\r\n\t\t// could be fixed with special case for: 2D (.) + 200E (LTR)\r\n\t\t//output.splice(0, 0, 0x200E);\r\n\t}\r\n\treturn flatten(split);\r\n}\r\n\r\nfunction ens_split(name, preserve_emoji) {\r\n\tlet offset = 0;\r\n\t// https://unicode.org/reports/tr46/#Validity_Criteria 4.1 Rule 4\r\n\t// \"The label must not contain a U+002E ( . ) FULL STOP.\"\r\n\treturn name.split(STOP_CH).map(label => {\r\n\t\tlet input = explode_cp(label);\r\n\t\tlet info = {\r\n\t\t\tinput,\r\n\t\t\toffset, // codepoint, not substring!\r\n\t\t};\r\n\t\toffset += input.length + 1; // + stop\r\n\t\tlet norm;\r\n\t\ttry {\r\n\t\t\tlet tokens = info.tokens = process(input, nfc); // if we parse, we get [norm and mapped]\r\n\t\t\tlet token_count = tokens.length;\r\n\t\t\tlet type;\r\n\t\t\tif (!token_count) { // the label was effectively empty (could of had ignored characters)\r\n\t\t\t\t// 20230120: change to strict\r\n\t\t\t\t// https://discuss.ens.domains/t/ens-name-normalization-2nd/14564/59\r\n\t\t\t\t//norm = [];\r\n\t\t\t\t//type = 'None'; // use this instead of next match, \"ASCII\"\r\n\t\t\t\tthrow new Error(`empty label`);\r\n\t\t\t} else {\r\n\t\t\t\tlet chars = tokens[0];\r\n\t\t\t\tlet emoji = token_count > 1 || chars.is_emoji;\r\n\t\t\t\tif (!emoji && chars.every(cp => cp < 0x80)) { // special case for ascii\r\n\t\t\t\t\tnorm = chars;\r\n\t\t\t\t\tcheck_leading_underscore(norm);\r\n\t\t\t\t\t// only needed for ascii\r\n\t\t\t\t\t// 20230123: matches matches WHATWG, see note 3.3\r\n\t\t\t\t\tcheck_label_extension(norm);\r\n\t\t\t\t\t// cant have fenced\r\n\t\t\t\t\t// cant have cm\r\n\t\t\t\t\t// cant have wholes\r\n\t\t\t\t\t// see derive: assert ascii fast path\r\n\t\t\t\t\ttype = 'ASCII';\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (emoji) { // there is at least one emoji\r\n\t\t\t\t\t\tinfo.emoji = true; \r\n\t\t\t\t\t\tchars = tokens.flatMap(x => x.is_emoji ? [] : x); // all of the nfc tokens concat together\r\n\t\t\t\t\t}\r\n\t\t\t\t\tnorm = tokens.flatMap(x => !preserve_emoji && x.is_emoji ? filter_fe0f(x) : x);\r\n\t\t\t\t\tcheck_leading_underscore(norm);\r\n\t\t\t\t\tif (!chars.length) { // theres no text, just emoji\r\n\t\t\t\t\t\ttype = 'Emoji';\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tif (CM.has(norm[0])) throw error_placement('leading combining mark');\r\n\t\t\t\t\t\tfor (let i = 1; i < token_count; i++) { // we've already checked the first token\r\n\t\t\t\t\t\t\tlet cps = tokens[i];\r\n\t\t\t\t\t\t\tif (!cps.is_emoji && CM.has(cps[0])) { // every text token has emoji neighbors, eg. EtEEEtEt...\r\n\t\t\t\t\t\t\t\tthrow error_placement(`emoji + combining mark: \"${str_from_cps(tokens[i-1])} + ${safe_str_from_cps([cps[0]])}\"`);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tcheck_fenced(norm);\r\n\t\t\t\t\t\tlet unique = [...new Set(chars)];\r\n\t\t\t\t\t\tlet [g] = determine_group(unique); // take the first match\r\n\t\t\t\t\t\t// see derive: \"Matching Groups have Same CM Style\"\r\n\t\t\t\t\t\t// alternative: could form a hybrid type: Latin/Japanese/...\t\r\n\t\t\t\t\t\tcheck_group(g, chars); // need text in order\r\n\t\t\t\t\t\tcheck_whole(g, unique); // only need unique text (order would be required for multiple-char confusables)\r\n\t\t\t\t\t\ttype = g.N;\r\n\t\t\t\t\t\t// 20230121: consider exposing restricted flag\r\n\t\t\t\t\t\t// it's simpler to just check for 'Restricted'\r\n\t\t\t\t\t\t// or even better: type.endsWith(']')\r\n\t\t\t\t\t\t//if (g.R) info.restricted = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tinfo.type = type;\r\n\t\t} catch (err) {\r\n\t\t\tinfo.error = err; // use full error object\r\n\t\t}\r\n\t\tinfo.output = norm;\r\n\t\treturn info;\r\n\t});\r\n}\r\n\r\nfunction check_whole(group, unique) {\r\n\tlet maker;\r\n\tlet shared = []; // TODO: can this be avoided?\r\n\tfor (let cp of unique) {\r\n\t\tlet whole = WHOLE_MAP.get(cp);\r\n\t\tif (whole === UNIQUE_PH) return; // unique, non-confusable\r\n\t\tif (whole) {\r\n\t\t\tlet set = whole.M.get(cp); // groups which have a character that look-like this character\r\n\t\t\tmaker = maker ? maker.filter(g => set.has(g)) : [...set];\r\n\t\t\tif (!maker.length) return; // confusable intersection is empty\r\n\t\t} else {\r\n\t\t\tshared.push(cp); \r\n\t\t}\r\n\t}\r\n\tif (maker) {\r\n\t\t// we have 1+ confusable\r\n\t\t// check if any of the remaning groups\r\n\t\t// contain the shared characters too\r\n\t\tfor (let g of maker) {\r\n\t\t\tif (shared.every(cp => g.V.has(cp))) {\r\n\t\t\t\tthrow new Error(`whole-script confusable: ${group.N}/${g.N}`);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\n// assumption: unique.size > 0\r\n// returns list of matching groups\r\nfunction determine_group(unique) {\r\n\tlet groups = GROUPS;\r\n\tfor (let cp of unique) {\r\n\t\t// note: we need to dodge CM that are whitelisted\r\n\t\t// but that code isn't currently necessary\r\n\t\tlet gs = groups.filter(g => g.V.has(cp));\r\n\t\tif (!gs.length) {\r\n\t\t\tif (groups === GROUPS) {\r\n\t\t\t\t// the character was composed of valid parts\r\n\t\t\t\t// but it's NFC form is invalid\r\n\t\t\t\tthrow error_disallowed(cp); // this should be rare\r\n\t\t\t} else {\r\n\t\t\t\t// there is no group that contains all these characters\r\n\t\t\t\t// throw using the highest priority group that matched\r\n\t\t\t\t// https://www.unicode.org/reports/tr39/#mixed_script_confusables\r\n\t\t\t\tthrow error_group_member(groups[0], cp);\r\n\t\t\t}\r\n\t\t}\r\n\t\tgroups = gs;\r\n\t\tif (gs.length == 1) break; // there is only one group left\r\n\t}\r\n\t// there are at least 1 group(s) with all of these characters\r\n\treturn groups;\r\n}\r\n\r\n// throw on first error\r\nfunction flatten(split) {\r\n\treturn split.map(({input, error, output}) => {\r\n\t\tif (error) {\r\n\t\t\t// don't print label again if just a single label\r\n\t\t\tlet msg = error.message;\r\n\t\t\tthrow new Error(split.length == 1 ? msg : `Invalid label \"${safe_str_from_cps(input)}\": ${msg}`);\r\n\t\t}\r\n\t\treturn str_from_cps(output);\r\n\t}).join(STOP_CH);\r\n}\r\n\r\n\r\nfunction error_disallowed(cp) {\r\n\t// TODO: add cp to error?\r\n\treturn new Error(`disallowed character: ${quoted_cp(cp)}`); \r\n}\r\nfunction error_group_member(g, cp) {\r\n\tlet quoted = quoted_cp(cp);\r\n\tlet gg = GROUPS.find(g => g.P.has(cp));\r\n\tif (gg) {\r\n\t\tquoted = `${gg.N} ${quoted}`;\r\n\t}\r\n\treturn new Error(`illegal mixture: ${g.N} + ${quoted}`);\r\n}\r\nfunction error_placement(where) {\r\n\treturn new Error(`illegal placement: ${where}`);\r\n}\r\n\r\n// assumption: cps.length > 0\r\n// assumption: cps[0] isn't a CM\r\nfunction check_group(g, cps) {\r\n\tlet {V, M} = g;\r\n\tfor (let cp of cps) {\r\n\t\tif (!V.has(cp)) {\r\n\t\t\tthrow error_group_member(g, cp);\r\n\t\t}\r\n\t}\r\n\tif (M >= 0) {\r\n\t\t// we know it can't be cm leading\r\n\t\t// we know the previous character isn't an emoji\r\n\t\tlet decomposed = nfd(cps);\r\n\t\tfor (let i = 1, e = decomposed.length; i < e; i++) {\r\n\t\t\tif (CM.has(cps[i])) {\r\n\t\t\t\tlet j = i + 1;\r\n\t\t\t\twhile (j < e && CM.has(cps[j])) j++;\r\n\t\t\t\tif (j - i > M) {\r\n\t\t\t\t\tthrow new Error(`too many combining marks: ${g.N} \"${str_from_cps(cps.slice(i-1, j))}\" (${j-i}/${M})`);\r\n\t\t\t\t}\r\n\t\t\t\ti = j;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t// *** this code currently isn't needed ***\r\n\t/*\r\n\tlet cm_whitelist = M instanceof Map;\r\n\tfor (let i = 0, e = cps.length; i < e; ) {\r\n\t\tlet cp = cps[i++];\r\n\t\tlet seqs = cm_whitelist && M.get(cp);\r\n\t\tif (seqs) { \r\n\t\t\t// list of codepoints that can follow\r\n\t\t\t// if this exists, this will always be 1+\r\n\t\t\tlet j = i;\r\n\t\t\twhile (j < e && CM.has(cps[j])) j++;\r\n\t\t\tlet cms = cps.slice(i, j);\r\n\t\t\tlet match = seqs.find(seq => !compare_arrays(seq, cms));\r\n\t\t\tif (!match) throw new Error(`disallowed combining mark sequence: \"${safe_str_from_cps([cp, ...cms])}\"`);\r\n\t\t\ti = j;\r\n\t\t} else if (!V.has(cp)) {\r\n\t\t\t// https://www.unicode.org/reports/tr39/#mixed_script_confusables\r\n\t\t\tlet quoted = quoted_cp(cp);\r\n\t\t\tfor (let cp of cps) {\r\n\t\t\t\tlet u = UNIQUE.get(cp);\r\n\t\t\t\tif (u && u !== g) {\r\n\t\t\t\t\t// if both scripts are restricted this error is confusing\r\n\t\t\t\t\t// because we don't differentiate RestrictedA from RestrictedB \r\n\t\t\t\t\tif (!u.R) quoted = `${quoted} is ${u.N}`;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthrow new Error(`disallowed ${g.N} character: ${quoted}`);\r\n\t\t\t//throw new Error(`disallowed character: ${quoted} (expected ${g.N})`);\r\n\t\t\t//throw new Error(`${g.N} does not allow: ${quoted}`);\r\n\t\t}\r\n\t}\r\n\tif (!cm_whitelist) {\r\n\t\tlet decomposed = nfd(cps);\r\n\t\tfor (let i = 1, e = decomposed.length; i < e; i++) { // we know it can't be cm leading\r\n\t\t\tif (CM.has(cps[i])) {\r\n\t\t\t\tlet j = i + 1;\r\n\t\t\t\twhile (j < e && CM.has(cps[j])) j++;\r\n\t\t\t\tif (j - i > M) {\r\n\t\t\t\t\tthrow new Error(`too many combining marks: \"${str_from_cps(cps.slice(i-1, j))}\" (${j-i}/${M})`);\r\n\t\t\t\t}\r\n\t\t\t\ti = j;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t*/\r\n}\r\n\r\n// given a list of codepoints\r\n// returns a list of lists, where emoji are a fully-qualified (as Array subclass)\r\n// eg. explode_cp(\"abc💩d\") => [[61, 62, 63], Emoji[1F4A9, FE0F], [64]]\r\nfunction process(input, nf) {\r\n\tlet ret = [];\r\n\tlet chars = [];\r\n\tinput = input.slice().reverse(); // flip so we can pop\r\n\twhile (input.length) {\r\n\t\tlet emoji = consume_emoji_reversed(input);\r\n\t\tif (emoji) {\r\n\t\t\tif (chars.length) {\r\n\t\t\t\tret.push(nf(chars));\r\n\t\t\t\tchars = [];\r\n\t\t\t}\r\n\t\t\tret.push(emoji);\r\n\t\t} else {\r\n\t\t\tlet cp = input.pop();\r\n\t\t\tif (VALID.has(cp)) {\r\n\t\t\t\tchars.push(cp);\r\n\t\t\t} else {\r\n\t\t\t\tlet cps = MAPPED.get(cp);\r\n\t\t\t\tif (cps) {\r\n\t\t\t\t\tchars.push(...cps);\r\n\t\t\t\t} else if (!IGNORED.has(cp)) {\r\n\t\t\t\t\tthrow error_disallowed(cp);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tif (chars.length) {\r\n\t\tret.push(nf(chars));\r\n\t}\r\n\treturn ret;\r\n}\r\n\r\nfunction filter_fe0f(cps) {\r\n\treturn cps.filter(cp => cp != FE0F);\r\n}\r\n\r\n// given array of codepoints\r\n// returns the longest valid emoji sequence (or undefined if no match)\r\n// *MUTATES* the supplied array\r\n// allows optional FE0F\r\n// disallows interleaved ignored characters\r\n// fills (optional) eaten array with matched codepoints\r\nfunction consume_emoji_reversed(cps, eaten) {\r\n\tlet node = EMOJI_ROOT;\r\n\tlet emoji;\r\n\tlet saved;\r\n\tlet stack = [];\r\n\tlet pos = cps.length;\r\n\tif (eaten) eaten.length = 0; // clear input buffer (if needed)\r\n\twhile (pos) {\r\n\t\tlet cp = cps[--pos];\r\n\t\tnode = node.B.find(x => x.Q.has(cp));\r\n\t\tif (!node) break;\r\n\t\tif (node.S) { // remember\r\n\t\t\tsaved = cp;\r\n\t\t} else if (node.C) { // check exclusion\r\n\t\t\tif (cp === saved) break;\r\n\t\t}\r\n\t\tstack.push(cp);\r\n\t\tif (node.F) {\r\n\t\t\tstack.push(FE0F);\r\n\t\t\tif (pos > 0 && cps[pos - 1] == FE0F) pos--; // consume optional FE0F\r\n\t\t}\r\n\t\tif (node.V) { // this is a valid emoji (so far)\r\n\t\t\temoji = conform_emoji_copy(stack, node);\r\n\t\t\tif (eaten) eaten.push(...cps.slice(pos).reverse()); // copy input (if needed)\r\n\t\t\tcps.length = pos; // truncate\r\n\t\t}\r\n\t}\r\n\t/*\r\n\t// *** this code currently isn't needed ***\r\n\tif (!emoji) {\r\n\t\tlet cp = cps[cps.length-1];\r\n\t\tif (EMOJI_SOLO.has(cp)) {\r\n\t\t\tif (eaten) eaten.push(cp);\r\n\t\t\temoji = Emoji.of(cp);\r\n\t\t\tcps.pop();\r\n\t\t}\r\n\t}\r\n\t*/\r\n\treturn emoji;\r\n}\r\n\r\n// create a copy and fix any unicode quirks\r\nfunction conform_emoji_copy(cps, node) {\r\n\tlet copy = Emoji.from(cps); // copy stack\r\n\tif (node.V == 2) copy.splice(1, 1); // delete FE0F at position 1 (see: make.js)\r\n\treturn copy;\r\n}\r\n\r\n// return all supported emoji as fully-qualified emoji \r\n// ordered by length then lexicographic \r\nfunction ens_emoji() {\r\n\t// *** this code currently isn't needed ***\r\n\t//let ret = [...EMOJI_SOLO].map(x => [x]);\r\n\tlet ret = [];\r\n\tbuild(EMOJI_ROOT, []);\r\n\treturn ret.sort(compare_arrays);\r\n\tfunction build(node, cps, saved) {\r\n\t\tif (node.S) { \r\n\t\t\tsaved = cps[cps.length-1];\r\n\t\t} else if (node.C) { \r\n\t\t\tif (saved === cps[cps.length-1]) return;\r\n\t\t}\r\n\t\tif (node.F) cps.push(FE0F);\r\n\t\tif (node.V) ret.push(conform_emoji_copy(cps, node));\r\n\t\tfor (let br of node.B) {\r\n\t\t\tfor (let cp of br.Q) {\r\n\t\t\t\tbuild(br, [...cps, cp], saved);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\n// ************************************************************\r\n// tokenizer \r\n\r\nconst TY_VALID = 'valid';\r\nconst TY_MAPPED = 'mapped';\r\nconst TY_IGNORED = 'ignored';\r\nconst TY_DISALLOWED = 'disallowed';\r\nconst TY_EMOJI = 'emoji';\r\nconst TY_NFC = 'nfc';\r\nconst TY_STOP = 'stop';\r\n\r\nfunction ens_tokenize(name, {\r\n\tnf = true, // collapse unnormalized runs into a single token\r\n} = {}) {\r\n\tlet input = explode_cp(name).reverse();\r\n\tlet eaten = [];\r\n\tlet tokens = [];\r\n\twhile (input.length) {\t\t\r\n\t\tlet emoji = consume_emoji_reversed(input, eaten);\r\n\t\tif (emoji) {\r\n\t\t\ttokens.push({type: TY_EMOJI, emoji, input: eaten.slice(), cps: filter_fe0f(emoji)});\r\n\t\t} else {\r\n\t\t\tlet cp = input.pop();\r\n\t\t\tif (cp == STOP) {\r\n\t\t\t\ttokens.push({type: TY_STOP, cp});\r\n\t\t\t} else if (VALID.has(cp)) {\r\n\t\t\t\ttokens.push({type: TY_VALID, cps: [cp]});\r\n\t\t\t} else if (IGNORED.has(cp)) {\r\n\t\t\t\ttokens.push({type: TY_IGNORED, cp});\r\n\t\t\t} else {\r\n\t\t\t\tlet cps = MAPPED.get(cp);\r\n\t\t\t\tif (cps) {\r\n\t\t\t\t\ttokens.push({type: TY_MAPPED, cp, cps: cps.slice()});\r\n\t\t\t\t} else {\r\n\t\t\t\t\ttokens.push({type: TY_DISALLOWED, cp});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tif (nf) {\r\n\t\tfor (let i = 0, start = -1; i < tokens.length; i++) {\r\n\t\t\tlet token = tokens[i];\r\n\t\t\tif (is_valid_or_mapped(token.type)) {\r\n\t\t\t\tif (requires_check(token.cps)) { // normalization might be needed\r\n\t\t\t\t\tlet end = i + 1;\r\n\t\t\t\t\tfor (let pos = end; pos < tokens.length; pos++) { // find adjacent text\r\n\t\t\t\t\t\tlet {type, cps} = tokens[pos];\r\n\t\t\t\t\t\tif (is_valid_or_mapped(type)) {\r\n\t\t\t\t\t\t\tif (!requires_check(cps)) break;\r\n\t\t\t\t\t\t\tend = pos + 1;\r\n\t\t\t\t\t\t} else if (type !== TY_IGNORED) { // || type !== TY_DISALLOWED) { \r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (start < 0) start = i;\r\n\t\t\t\t\tlet slice = tokens.slice(start, end);\r\n\t\t\t\t\tlet cps0 = slice.flatMap(x => is_valid_or_mapped(x.type) ? x.cps : []); // strip junk tokens\r\n\t\t\t\t\tlet cps = nfc(cps0);\r\n\t\t\t\t\tif (compare_arrays(cps, cps0)) { // bundle into an nfc token\r\n\t\t\t\t\t\ttokens.splice(start, end - start, {\r\n\t\t\t\t\t\t\ttype: TY_NFC, \r\n\t\t\t\t\t\t\tinput: cps0, // there are 3 states: tokens0 ==(process)=> input ==(nfc)=> tokens/cps\r\n\t\t\t\t\t\t\tcps, \r\n\t\t\t\t\t\t\ttokens0: collapse_valid_tokens(slice),\r\n\t\t\t\t\t\t\ttokens: ens_tokenize(str_from_cps(cps), {nf: false})\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\ti = start;\r\n\t\t\t\t\t} else { \r\n\t\t\t\t\t\ti = end - 1; // skip to end of slice\r\n\t\t\t\t\t}\r\n\t\t\t\t\tstart = -1; // reset\r\n\t\t\t\t} else {\r\n\t\t\t\t\tstart = i; // remember last\r\n\t\t\t\t}\r\n\t\t\t} else if (token.type !== TY_IGNORED) { // 20221024: is this correct?\r\n\t\t\t\tstart = -1; // reset\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\treturn collapse_valid_tokens(tokens);\r\n}\r\n\r\nfunction is_valid_or_mapped(type) {\r\n\treturn type == TY_VALID || type == TY_MAPPED;\r\n}\r\n\r\nfunction requires_check(cps) {\r\n\treturn cps.some(cp => NFC_CHECK.has(cp));\r\n}\r\n\r\nfunction collapse_valid_tokens(tokens) {\r\n\tfor (let i = 0; i < tokens.length; i++) {\r\n\t\tif (tokens[i].type == TY_VALID) {\r\n\t\t\tlet j = i + 1;\r\n\t\t\twhile (j < tokens.length && tokens[j].type == TY_VALID) j++;\r\n\t\t\ttokens.splice(i, j - i, {type: TY_VALID, cps: tokens.slice(i, j).flatMap(x => x.cps)});\r\n\t\t}\r\n\t}\r\n\treturn tokens;\r\n}\n\nexport { ens_beautify, ens_emoji, ens_normalize, ens_normalize_fragment, ens_split, ens_tokenize, is_combining_mark, nfc, nfd, safe_str_from_cps, should_escape };\n","import { keccak256 } from \"../crypto/index.js\";\nimport { concat, hexlify, assertArgument, toUtf8Bytes } from \"../utils/index.js\";\nimport { ens_normalize } from \"@adraffy/ens-normalize/xnf\";\nconst Zeros = new Uint8Array(32);\nZeros.fill(0);\nfunction checkComponent(comp) {\n    assertArgument(comp.length !== 0, \"invalid ENS name; empty component\", \"comp\", comp);\n    return comp;\n}\nfunction ensNameSplit(name) {\n    const bytes = toUtf8Bytes(ensNormalize(name));\n    const comps = [];\n    if (name.length === 0) {\n        return comps;\n    }\n    let last = 0;\n    for (let i = 0; i < bytes.length; i++) {\n        const d = bytes[i];\n        // A separator (i.e. \".\"); copy this component\n        if (d === 0x2e) {\n            comps.push(checkComponent(bytes.slice(last, i)));\n            last = i + 1;\n        }\n    }\n    // There was a stray separator at the end of the name\n    assertArgument(last < bytes.length, \"invalid ENS name; empty component\", \"name\", name);\n    comps.push(checkComponent(bytes.slice(last)));\n    return comps;\n}\n/**\n *  Returns the ENS %%name%% normalized.\n */\nexport function ensNormalize(name) {\n    try {\n        return ens_normalize(name);\n    }\n    catch (error) {\n        assertArgument(false, `invalid ENS name (${error.message})`, \"name\", name);\n    }\n}\n/**\n *  Returns ``true`` if %%name%% is a valid ENS name.\n */\nexport function isValidName(name) {\n    try {\n        return (ensNameSplit(name).length !== 0);\n    }\n    catch (error) { }\n    return false;\n}\n/**\n *  Returns the [[link-namehash]] for %%name%%.\n */\nexport function namehash(name) {\n    assertArgument(typeof (name) === \"string\", \"invalid ENS name; not a string\", \"name\", name);\n    let result = Zeros;\n    const comps = ensNameSplit(name);\n    while (comps.length) {\n        result = keccak256(concat([result, keccak256((comps.pop()))]));\n    }\n    return hexlify(result);\n}\n/**\n *  Returns the DNS encoded %%name%%.\n *\n *  This is used for various parts of ENS name resolution, such\n *  as the wildcard resolution.\n */\nexport function dnsEncode(name) {\n    return hexlify(concat(ensNameSplit(name).map((comp) => {\n        // DNS does not allow components over 63 bytes in length\n        if (comp.length > 63) {\n            throw new Error(\"invalid DNS encoded entry; length exceeds 63 bytes\");\n        }\n        const bytes = new Uint8Array(comp.length + 1);\n        bytes.set(comp, 1);\n        bytes[0] = bytes.length - 1;\n        return bytes;\n    }))) + \"00\";\n}\n//# sourceMappingURL=namehash.js.map","import { ZeroHash } from \"../constants/index.js\";\nimport { concat, dataLength, getBigInt, getBytes, getNumber, hexlify, toBeArray, isHexString, zeroPadValue, assertArgument, assertPrivate } from \"../utils/index.js\";\n// Constants\nconst BN_0 = BigInt(0);\nconst BN_1 = BigInt(1);\nconst BN_2 = BigInt(2);\nconst BN_27 = BigInt(27);\nconst BN_28 = BigInt(28);\nconst BN_35 = BigInt(35);\nconst _guard = {};\nfunction toUint256(value) {\n    return zeroPadValue(toBeArray(value), 32);\n}\n/**\n *  A Signature  @TODO\n */\nexport class Signature {\n    #r;\n    #s;\n    #v;\n    #networkV;\n    /**\n     *  The ``r`` value for a signautre.\n     *\n     *  This represents the ``x`` coordinate of a \"reference\" or\n     *  challenge point, from which the ``y`` can be computed.\n     */\n    get r() { return this.#r; }\n    set r(value) {\n        assertArgument(dataLength(value) === 32, \"invalid r\", \"value\", value);\n        this.#r = hexlify(value);\n    }\n    /**\n     *  The ``s`` value for a signature.\n     */\n    get s() { return this.#s; }\n    set s(_value) {\n        assertArgument(dataLength(_value) === 32, \"invalid r\", \"value\", _value);\n        const value = hexlify(_value);\n        assertArgument(parseInt(value.substring(0, 3)) < 8, \"non-canonical s\", \"value\", value);\n        this.#s = value;\n    }\n    /**\n     *  The ``v`` value for a signature.\n     *\n     *  Since a given ``x`` value for ``r`` has two possible values for\n     *  its correspondin ``y``, the ``v`` indicates which of the two ``y``\n     *  values to use.\n     *\n     *  It is normalized to the values ``27`` or ``28`` for legacy\n     *  purposes.\n     */\n    get v() { return this.#v; }\n    set v(value) {\n        const v = getNumber(value, \"value\");\n        assertArgument(v === 27 || v === 28, \"invalid v\", \"v\", value);\n        this.#v = v;\n    }\n    /**\n     *  The EIP-155 ``v`` for legacy transactions. For non-legacy\n     *  transactions, this value is ``null``.\n     */\n    get networkV() { return this.#networkV; }\n    /**\n     *  The chain ID for EIP-155 legacy transactions. For non-legacy\n     *  transactions, this value is ``null``.\n     */\n    get legacyChainId() {\n        const v = this.networkV;\n        if (v == null) {\n            return null;\n        }\n        return Signature.getChainId(v);\n    }\n    /**\n     *  The ``yParity`` for the signature.\n     *\n     *  See ``v`` for more details on how this value is used.\n     */\n    get yParity() {\n        return (this.v === 27) ? 0 : 1;\n    }\n    /**\n     *  The [[link-eip-2098]] compact representation of the ``yParity``\n     *  and ``s`` compacted into a single ``bytes32``.\n     */\n    get yParityAndS() {\n        // The EIP-2098 compact representation\n        const yParityAndS = getBytes(this.s);\n        if (this.yParity) {\n            yParityAndS[0] |= 0x80;\n        }\n        return hexlify(yParityAndS);\n    }\n    /**\n     *  The [[link-eip-2098]] compact representation.\n     */\n    get compactSerialized() {\n        return concat([this.r, this.yParityAndS]);\n    }\n    /**\n     *  The serialized representation.\n     */\n    get serialized() {\n        return concat([this.r, this.s, (this.yParity ? \"0x1c\" : \"0x1b\")]);\n    }\n    /**\n     *  @private\n     */\n    constructor(guard, r, s, v) {\n        assertPrivate(guard, _guard, \"Signature\");\n        this.#r = r;\n        this.#s = s;\n        this.#v = v;\n        this.#networkV = null;\n    }\n    [Symbol.for('nodejs.util.inspect.custom')]() {\n        return `Signature { r: \"${this.r}\", s: \"${this.s}\", yParity: ${this.yParity}, networkV: ${this.networkV} }`;\n    }\n    /**\n     *  Returns a new identical [[Signature]].\n     */\n    clone() {\n        const clone = new Signature(_guard, this.r, this.s, this.v);\n        if (this.networkV) {\n            clone.#networkV = this.networkV;\n        }\n        return clone;\n    }\n    /**\n     *  Returns a representation that is compatible with ``JSON.stringify``.\n     */\n    toJSON() {\n        const networkV = this.networkV;\n        return {\n            _type: \"signature\",\n            networkV: ((networkV != null) ? networkV.toString() : null),\n            r: this.r, s: this.s, v: this.v,\n        };\n    }\n    /**\n     *  Compute the chain ID from the ``v`` in a legacy EIP-155 transactions.\n     *\n     *  @example:\n     *    Signature.getChainId(45)\n     *    //_result:\n     *\n     *    Signature.getChainId(46)\n     *    //_result:\n     */\n    static getChainId(v) {\n        const bv = getBigInt(v, \"v\");\n        // The v is not an EIP-155 v, so it is the unspecified chain ID\n        if ((bv == BN_27) || (bv == BN_28)) {\n            return BN_0;\n        }\n        // Bad value for an EIP-155 v\n        assertArgument(bv >= BN_35, \"invalid EIP-155 v\", \"v\", v);\n        return (bv - BN_35) / BN_2;\n    }\n    /**\n     *  Compute the ``v`` for a chain ID for a legacy EIP-155 transactions.\n     *\n     *  Legacy transactions which use [[link-eip-155]] hijack the ``v``\n     *  property to include the chain ID.\n     *\n     *  @example:\n     *    Signature.getChainIdV(5, 27)\n     *    //_result:\n     *\n     *    Signature.getChainIdV(5, 28)\n     *    //_result:\n     *\n     */\n    static getChainIdV(chainId, v) {\n        return (getBigInt(chainId) * BN_2) + BigInt(35 + v - 27);\n    }\n    /**\n     *  Compute the normalized legacy transaction ``v`` from a ``yParirty``,\n     *  a legacy transaction ``v`` or a legacy [[link-eip-155]] transaction.\n     *\n     *  @example:\n     *    // The values 0 and 1 imply v is actually yParity\n     *    Signature.getNormalizedV(0)\n     *    //_result:\n     *\n     *    // Legacy non-EIP-1559 transaction (i.e. 27 or 28)\n     *    Signature.getNormalizedV(27)\n     *    //_result:\n     *\n     *    // Legacy EIP-155 transaction (i.e. >= 35)\n     *    Signature.getNormalizedV(46)\n     *    //_result:\n     *\n     *    // Invalid values throw\n     *    Signature.getNormalizedV(5)\n     *    //_error:\n     */\n    static getNormalizedV(v) {\n        const bv = getBigInt(v);\n        if (bv === BN_0 || bv === BN_27) {\n            return 27;\n        }\n        if (bv === BN_1 || bv === BN_28) {\n            return 28;\n        }\n        assertArgument(bv >= BN_35, \"invalid v\", \"v\", v);\n        // Otherwise, EIP-155 v means odd is 27 and even is 28\n        return (bv & BN_1) ? 27 : 28;\n    }\n    /**\n     *  Creates a new [[Signature]].\n     *\n     *  If no %%sig%% is provided, a new [[Signature]] is created\n     *  with default values.\n     *\n     *  If %%sig%% is a string, it is parsed.\n     */\n    static from(sig) {\n        function assertError(check, message) {\n            assertArgument(check, message, \"signature\", sig);\n        }\n        ;\n        if (sig == null) {\n            return new Signature(_guard, ZeroHash, ZeroHash, 27);\n        }\n        if (typeof (sig) === \"string\") {\n            const bytes = getBytes(sig, \"signature\");\n            if (bytes.length === 64) {\n                const r = hexlify(bytes.slice(0, 32));\n                const s = bytes.slice(32, 64);\n                const v = (s[0] & 0x80) ? 28 : 27;\n                s[0] &= 0x7f;\n                return new Signature(_guard, r, hexlify(s), v);\n            }\n            if (bytes.length === 65) {\n                const r = hexlify(bytes.slice(0, 32));\n                const s = bytes.slice(32, 64);\n                assertError((s[0] & 0x80) === 0, \"non-canonical s\");\n                const v = Signature.getNormalizedV(bytes[64]);\n                return new Signature(_guard, r, hexlify(s), v);\n            }\n            assertError(false, \"invlaid raw signature length\");\n        }\n        if (sig instanceof Signature) {\n            return sig.clone();\n        }\n        // Get r\n        const _r = sig.r;\n        assertError(_r != null, \"missing r\");\n        const r = toUint256(_r);\n        // Get s; by any means necessary (we check consistency below)\n        const s = (function (s, yParityAndS) {\n            if (s != null) {\n                return toUint256(s);\n            }\n            if (yParityAndS != null) {\n                assertError(isHexString(yParityAndS, 32), \"invalid yParityAndS\");\n                const bytes = getBytes(yParityAndS);\n                bytes[0] &= 0x7f;\n                return hexlify(bytes);\n            }\n            assertError(false, \"missing s\");\n        })(sig.s, sig.yParityAndS);\n        assertError((getBytes(s)[0] & 0x80) == 0, \"non-canonical s\");\n        // Get v; by any means necessary (we check consistency below)\n        const { networkV, v } = (function (_v, yParityAndS, yParity) {\n            if (_v != null) {\n                const v = getBigInt(_v);\n                return {\n                    networkV: ((v >= BN_35) ? v : undefined),\n                    v: Signature.getNormalizedV(v)\n                };\n            }\n            if (yParityAndS != null) {\n                assertError(isHexString(yParityAndS, 32), \"invalid yParityAndS\");\n                return { v: ((getBytes(yParityAndS)[0] & 0x80) ? 28 : 27) };\n            }\n            if (yParity != null) {\n                switch (yParity) {\n                    case 0: return { v: 27 };\n                    case 1: return { v: 28 };\n                }\n                assertError(false, \"invalid yParity\");\n            }\n            assertError(false, \"missing v\");\n        })(sig.v, sig.yParityAndS, sig.yParity);\n        const result = new Signature(_guard, r, s, v);\n        if (networkV) {\n            result.#networkV = networkV;\n        }\n        // If multiple of v, yParity, yParityAndS we given, check they match\n        assertError(!(\"yParity\" in sig && sig.yParity !== result.yParity), \"yParity mismatch\");\n        assertError(!(\"yParityAndS\" in sig && sig.yParityAndS !== result.yParityAndS), \"yParityAndS mismatch\");\n        return result;\n    }\n}\n//# sourceMappingURL=signature.js.map","/*! noble-secp256k1 - MIT License (c) 2019 Paul Miller (paulmillr.com) */\nimport * as nodeCrypto from 'crypto';\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\nconst _2n = BigInt(2);\nconst _3n = BigInt(3);\nconst _8n = BigInt(8);\nconst CURVE = Object.freeze({\n    a: _0n,\n    b: BigInt(7),\n    P: BigInt('0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f'),\n    n: BigInt('0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141'),\n    h: _1n,\n    Gx: BigInt('55066263022277343669578718895168534326250603453777594175500187360389116729240'),\n    Gy: BigInt('32670510020758816978083085130507043184471273380659243275938904335757337482424'),\n    beta: BigInt('0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee'),\n});\nconst divNearest = (a, b) => (a + b / _2n) / b;\nconst endo = {\n    beta: BigInt('0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee'),\n    splitScalar(k) {\n        const { n } = CURVE;\n        const a1 = BigInt('0x3086d221a7d46bcde86c90e49284eb15');\n        const b1 = -_1n * BigInt('0xe4437ed6010e88286f547fa90abfe4c3');\n        const a2 = BigInt('0x114ca50f7a8e2f3f657c1108d9d44cfd8');\n        const b2 = a1;\n        const POW_2_128 = BigInt('0x100000000000000000000000000000000');\n        const c1 = divNearest(b2 * k, n);\n        const c2 = divNearest(-b1 * k, n);\n        let k1 = mod(k - c1 * a1 - c2 * a2, n);\n        let k2 = mod(-c1 * b1 - c2 * b2, n);\n        const k1neg = k1 > POW_2_128;\n        const k2neg = k2 > POW_2_128;\n        if (k1neg)\n            k1 = n - k1;\n        if (k2neg)\n            k2 = n - k2;\n        if (k1 > POW_2_128 || k2 > POW_2_128) {\n            throw new Error('splitScalarEndo: Endomorphism failed, k=' + k);\n        }\n        return { k1neg, k1, k2neg, k2 };\n    },\n};\nconst fieldLen = 32;\nconst groupLen = 32;\nconst hashLen = 32;\nconst compressedLen = fieldLen + 1;\nconst uncompressedLen = 2 * fieldLen + 1;\nexport { CURVE };\nfunction weierstrass(x) {\n    const { a, b } = CURVE;\n    const x2 = mod(x * x);\n    const x3 = mod(x2 * x);\n    return mod(x3 + a * x + b);\n}\nconst USE_ENDOMORPHISM = CURVE.a === _0n;\nclass ShaError extends Error {\n    constructor(message) {\n        super(message);\n    }\n}\nfunction assertJacPoint(other) {\n    if (!(other instanceof JacobianPoint))\n        throw new TypeError('JacobianPoint expected');\n}\nclass JacobianPoint {\n    constructor(x, y, z) {\n        this.x = x;\n        this.y = y;\n        this.z = z;\n    }\n    static fromAffine(p) {\n        if (!(p instanceof Point)) {\n            throw new TypeError('JacobianPoint#fromAffine: expected Point');\n        }\n        if (p.equals(Point.ZERO))\n            return JacobianPoint.ZERO;\n        return new JacobianPoint(p.x, p.y, _1n);\n    }\n    static toAffineBatch(points) {\n        const toInv = invertBatch(points.map((p) => p.z));\n        return points.map((p, i) => p.toAffine(toInv[i]));\n    }\n    static normalizeZ(points) {\n        return JacobianPoint.toAffineBatch(points).map(JacobianPoint.fromAffine);\n    }\n    equals(other) {\n        assertJacPoint(other);\n        const { x: X1, y: Y1, z: Z1 } = this;\n        const { x: X2, y: Y2, z: Z2 } = other;\n        const Z1Z1 = mod(Z1 * Z1);\n        const Z2Z2 = mod(Z2 * Z2);\n        const U1 = mod(X1 * Z2Z2);\n        const U2 = mod(X2 * Z1Z1);\n        const S1 = mod(mod(Y1 * Z2) * Z2Z2);\n        const S2 = mod(mod(Y2 * Z1) * Z1Z1);\n        return U1 === U2 && S1 === S2;\n    }\n    negate() {\n        return new JacobianPoint(this.x, mod(-this.y), this.z);\n    }\n    double() {\n        const { x: X1, y: Y1, z: Z1 } = this;\n        const A = mod(X1 * X1);\n        const B = mod(Y1 * Y1);\n        const C = mod(B * B);\n        const x1b = X1 + B;\n        const D = mod(_2n * (mod(x1b * x1b) - A - C));\n        const E = mod(_3n * A);\n        const F = mod(E * E);\n        const X3 = mod(F - _2n * D);\n        const Y3 = mod(E * (D - X3) - _8n * C);\n        const Z3 = mod(_2n * Y1 * Z1);\n        return new JacobianPoint(X3, Y3, Z3);\n    }\n    add(other) {\n        assertJacPoint(other);\n        const { x: X1, y: Y1, z: Z1 } = this;\n        const { x: X2, y: Y2, z: Z2 } = other;\n        if (X2 === _0n || Y2 === _0n)\n            return this;\n        if (X1 === _0n || Y1 === _0n)\n            return other;\n        const Z1Z1 = mod(Z1 * Z1);\n        const Z2Z2 = mod(Z2 * Z2);\n        const U1 = mod(X1 * Z2Z2);\n        const U2 = mod(X2 * Z1Z1);\n        const S1 = mod(mod(Y1 * Z2) * Z2Z2);\n        const S2 = mod(mod(Y2 * Z1) * Z1Z1);\n        const H = mod(U2 - U1);\n        const r = mod(S2 - S1);\n        if (H === _0n) {\n            if (r === _0n) {\n                return this.double();\n            }\n            else {\n                return JacobianPoint.ZERO;\n            }\n        }\n        const HH = mod(H * H);\n        const HHH = mod(H * HH);\n        const V = mod(U1 * HH);\n        const X3 = mod(r * r - HHH - _2n * V);\n        const Y3 = mod(r * (V - X3) - S1 * HHH);\n        const Z3 = mod(Z1 * Z2 * H);\n        return new JacobianPoint(X3, Y3, Z3);\n    }\n    subtract(other) {\n        return this.add(other.negate());\n    }\n    multiplyUnsafe(scalar) {\n        const P0 = JacobianPoint.ZERO;\n        if (typeof scalar === 'bigint' && scalar === _0n)\n            return P0;\n        let n = normalizeScalar(scalar);\n        if (n === _1n)\n            return this;\n        if (!USE_ENDOMORPHISM) {\n            let p = P0;\n            let d = this;\n            while (n > _0n) {\n                if (n & _1n)\n                    p = p.add(d);\n                d = d.double();\n                n >>= _1n;\n            }\n            return p;\n        }\n        let { k1neg, k1, k2neg, k2 } = endo.splitScalar(n);\n        let k1p = P0;\n        let k2p = P0;\n        let d = this;\n        while (k1 > _0n || k2 > _0n) {\n            if (k1 & _1n)\n                k1p = k1p.add(d);\n            if (k2 & _1n)\n                k2p = k2p.add(d);\n            d = d.double();\n            k1 >>= _1n;\n            k2 >>= _1n;\n        }\n        if (k1neg)\n            k1p = k1p.negate();\n        if (k2neg)\n            k2p = k2p.negate();\n        k2p = new JacobianPoint(mod(k2p.x * endo.beta), k2p.y, k2p.z);\n        return k1p.add(k2p);\n    }\n    precomputeWindow(W) {\n        const windows = USE_ENDOMORPHISM ? 128 / W + 1 : 256 / W + 1;\n        const points = [];\n        let p = this;\n        let base = p;\n        for (let window = 0; window < windows; window++) {\n            base = p;\n            points.push(base);\n            for (let i = 1; i < 2 ** (W - 1); i++) {\n                base = base.add(p);\n                points.push(base);\n            }\n            p = base.double();\n        }\n        return points;\n    }\n    wNAF(n, affinePoint) {\n        if (!affinePoint && this.equals(JacobianPoint.BASE))\n            affinePoint = Point.BASE;\n        const W = (affinePoint && affinePoint._WINDOW_SIZE) || 1;\n        if (256 % W) {\n            throw new Error('Point#wNAF: Invalid precomputation window, must be power of 2');\n        }\n        let precomputes = affinePoint && pointPrecomputes.get(affinePoint);\n        if (!precomputes) {\n            precomputes = this.precomputeWindow(W);\n            if (affinePoint && W !== 1) {\n                precomputes = JacobianPoint.normalizeZ(precomputes);\n                pointPrecomputes.set(affinePoint, precomputes);\n            }\n        }\n        let p = JacobianPoint.ZERO;\n        let f = JacobianPoint.BASE;\n        const windows = 1 + (USE_ENDOMORPHISM ? 128 / W : 256 / W);\n        const windowSize = 2 ** (W - 1);\n        const mask = BigInt(2 ** W - 1);\n        const maxNumber = 2 ** W;\n        const shiftBy = BigInt(W);\n        for (let window = 0; window < windows; window++) {\n            const offset = window * windowSize;\n            let wbits = Number(n & mask);\n            n >>= shiftBy;\n            if (wbits > windowSize) {\n                wbits -= maxNumber;\n                n += _1n;\n            }\n            const offset1 = offset;\n            const offset2 = offset + Math.abs(wbits) - 1;\n            const cond1 = window % 2 !== 0;\n            const cond2 = wbits < 0;\n            if (wbits === 0) {\n                f = f.add(constTimeNegate(cond1, precomputes[offset1]));\n            }\n            else {\n                p = p.add(constTimeNegate(cond2, precomputes[offset2]));\n            }\n        }\n        return { p, f };\n    }\n    multiply(scalar, affinePoint) {\n        let n = normalizeScalar(scalar);\n        let point;\n        let fake;\n        if (USE_ENDOMORPHISM) {\n            const { k1neg, k1, k2neg, k2 } = endo.splitScalar(n);\n            let { p: k1p, f: f1p } = this.wNAF(k1, affinePoint);\n            let { p: k2p, f: f2p } = this.wNAF(k2, affinePoint);\n            k1p = constTimeNegate(k1neg, k1p);\n            k2p = constTimeNegate(k2neg, k2p);\n            k2p = new JacobianPoint(mod(k2p.x * endo.beta), k2p.y, k2p.z);\n            point = k1p.add(k2p);\n            fake = f1p.add(f2p);\n        }\n        else {\n            const { p, f } = this.wNAF(n, affinePoint);\n            point = p;\n            fake = f;\n        }\n        return JacobianPoint.normalizeZ([point, fake])[0];\n    }\n    toAffine(invZ) {\n        const { x, y, z } = this;\n        const is0 = this.equals(JacobianPoint.ZERO);\n        if (invZ == null)\n            invZ = is0 ? _8n : invert(z);\n        const iz1 = invZ;\n        const iz2 = mod(iz1 * iz1);\n        const iz3 = mod(iz2 * iz1);\n        const ax = mod(x * iz2);\n        const ay = mod(y * iz3);\n        const zz = mod(z * iz1);\n        if (is0)\n            return Point.ZERO;\n        if (zz !== _1n)\n            throw new Error('invZ was invalid');\n        return new Point(ax, ay);\n    }\n}\nJacobianPoint.BASE = new JacobianPoint(CURVE.Gx, CURVE.Gy, _1n);\nJacobianPoint.ZERO = new JacobianPoint(_0n, _1n, _0n);\nfunction constTimeNegate(condition, item) {\n    const neg = item.negate();\n    return condition ? neg : item;\n}\nconst pointPrecomputes = new WeakMap();\nexport class Point {\n    constructor(x, y) {\n        this.x = x;\n        this.y = y;\n    }\n    _setWindowSize(windowSize) {\n        this._WINDOW_SIZE = windowSize;\n        pointPrecomputes.delete(this);\n    }\n    hasEvenY() {\n        return this.y % _2n === _0n;\n    }\n    static fromCompressedHex(bytes) {\n        const isShort = bytes.length === 32;\n        const x = bytesToNumber(isShort ? bytes : bytes.subarray(1));\n        if (!isValidFieldElement(x))\n            throw new Error('Point is not on curve');\n        const y2 = weierstrass(x);\n        let y = sqrtMod(y2);\n        const isYOdd = (y & _1n) === _1n;\n        if (isShort) {\n            if (isYOdd)\n                y = mod(-y);\n        }\n        else {\n            const isFirstByteOdd = (bytes[0] & 1) === 1;\n            if (isFirstByteOdd !== isYOdd)\n                y = mod(-y);\n        }\n        const point = new Point(x, y);\n        point.assertValidity();\n        return point;\n    }\n    static fromUncompressedHex(bytes) {\n        const x = bytesToNumber(bytes.subarray(1, fieldLen + 1));\n        const y = bytesToNumber(bytes.subarray(fieldLen + 1, fieldLen * 2 + 1));\n        const point = new Point(x, y);\n        point.assertValidity();\n        return point;\n    }\n    static fromHex(hex) {\n        const bytes = ensureBytes(hex);\n        const len = bytes.length;\n        const header = bytes[0];\n        if (len === fieldLen)\n            return this.fromCompressedHex(bytes);\n        if (len === compressedLen && (header === 0x02 || header === 0x03)) {\n            return this.fromCompressedHex(bytes);\n        }\n        if (len === uncompressedLen && header === 0x04)\n            return this.fromUncompressedHex(bytes);\n        throw new Error(`Point.fromHex: received invalid point. Expected 32-${compressedLen} compressed bytes or ${uncompressedLen} uncompressed bytes, not ${len}`);\n    }\n    static fromPrivateKey(privateKey) {\n        return Point.BASE.multiply(normalizePrivateKey(privateKey));\n    }\n    static fromSignature(msgHash, signature, recovery) {\n        const { r, s } = normalizeSignature(signature);\n        if (![0, 1, 2, 3].includes(recovery))\n            throw new Error('Cannot recover: invalid recovery bit');\n        const h = truncateHash(ensureBytes(msgHash));\n        const { n } = CURVE;\n        const radj = recovery === 2 || recovery === 3 ? r + n : r;\n        const rinv = invert(radj, n);\n        const u1 = mod(-h * rinv, n);\n        const u2 = mod(s * rinv, n);\n        const prefix = recovery & 1 ? '03' : '02';\n        const R = Point.fromHex(prefix + numTo32bStr(radj));\n        const Q = Point.BASE.multiplyAndAddUnsafe(R, u1, u2);\n        if (!Q)\n            throw new Error('Cannot recover signature: point at infinify');\n        Q.assertValidity();\n        return Q;\n    }\n    toRawBytes(isCompressed = false) {\n        return hexToBytes(this.toHex(isCompressed));\n    }\n    toHex(isCompressed = false) {\n        const x = numTo32bStr(this.x);\n        if (isCompressed) {\n            const prefix = this.hasEvenY() ? '02' : '03';\n            return `${prefix}${x}`;\n        }\n        else {\n            return `04${x}${numTo32bStr(this.y)}`;\n        }\n    }\n    toHexX() {\n        return this.toHex(true).slice(2);\n    }\n    toRawX() {\n        return this.toRawBytes(true).slice(1);\n    }\n    assertValidity() {\n        const msg = 'Point is not on elliptic curve';\n        const { x, y } = this;\n        if (!isValidFieldElement(x) || !isValidFieldElement(y))\n            throw new Error(msg);\n        const left = mod(y * y);\n        const right = weierstrass(x);\n        if (mod(left - right) !== _0n)\n            throw new Error(msg);\n    }\n    equals(other) {\n        return this.x === other.x && this.y === other.y;\n    }\n    negate() {\n        return new Point(this.x, mod(-this.y));\n    }\n    double() {\n        return JacobianPoint.fromAffine(this).double().toAffine();\n    }\n    add(other) {\n        return JacobianPoint.fromAffine(this).add(JacobianPoint.fromAffine(other)).toAffine();\n    }\n    subtract(other) {\n        return this.add(other.negate());\n    }\n    multiply(scalar) {\n        return JacobianPoint.fromAffine(this).multiply(scalar, this).toAffine();\n    }\n    multiplyAndAddUnsafe(Q, a, b) {\n        const P = JacobianPoint.fromAffine(this);\n        const aP = a === _0n || a === _1n || this !== Point.BASE ? P.multiplyUnsafe(a) : P.multiply(a);\n        const bQ = JacobianPoint.fromAffine(Q).multiplyUnsafe(b);\n        const sum = aP.add(bQ);\n        return sum.equals(JacobianPoint.ZERO) ? undefined : sum.toAffine();\n    }\n}\nPoint.BASE = new Point(CURVE.Gx, CURVE.Gy);\nPoint.ZERO = new Point(_0n, _0n);\nfunction sliceDER(s) {\n    return Number.parseInt(s[0], 16) >= 8 ? '00' + s : s;\n}\nfunction parseDERInt(data) {\n    if (data.length < 2 || data[0] !== 0x02) {\n        throw new Error(`Invalid signature integer tag: ${bytesToHex(data)}`);\n    }\n    const len = data[1];\n    const res = data.subarray(2, len + 2);\n    if (!len || res.length !== len) {\n        throw new Error(`Invalid signature integer: wrong length`);\n    }\n    if (res[0] === 0x00 && res[1] <= 0x7f) {\n        throw new Error('Invalid signature integer: trailing length');\n    }\n    return { data: bytesToNumber(res), left: data.subarray(len + 2) };\n}\nfunction parseDERSignature(data) {\n    if (data.length < 2 || data[0] != 0x30) {\n        throw new Error(`Invalid signature tag: ${bytesToHex(data)}`);\n    }\n    if (data[1] !== data.length - 2) {\n        throw new Error('Invalid signature: incorrect length');\n    }\n    const { data: r, left: sBytes } = parseDERInt(data.subarray(2));\n    const { data: s, left: rBytesLeft } = parseDERInt(sBytes);\n    if (rBytesLeft.length) {\n        throw new Error(`Invalid signature: left bytes after parsing: ${bytesToHex(rBytesLeft)}`);\n    }\n    return { r, s };\n}\nexport class Signature {\n    constructor(r, s) {\n        this.r = r;\n        this.s = s;\n        this.assertValidity();\n    }\n    static fromCompact(hex) {\n        const arr = hex instanceof Uint8Array;\n        const name = 'Signature.fromCompact';\n        if (typeof hex !== 'string' && !arr)\n            throw new TypeError(`${name}: Expected string or Uint8Array`);\n        const str = arr ? bytesToHex(hex) : hex;\n        if (str.length !== 128)\n            throw new Error(`${name}: Expected 64-byte hex`);\n        return new Signature(hexToNumber(str.slice(0, 64)), hexToNumber(str.slice(64, 128)));\n    }\n    static fromDER(hex) {\n        const arr = hex instanceof Uint8Array;\n        if (typeof hex !== 'string' && !arr)\n            throw new TypeError(`Signature.fromDER: Expected string or Uint8Array`);\n        const { r, s } = parseDERSignature(arr ? hex : hexToBytes(hex));\n        return new Signature(r, s);\n    }\n    static fromHex(hex) {\n        return this.fromDER(hex);\n    }\n    assertValidity() {\n        const { r, s } = this;\n        if (!isWithinCurveOrder(r))\n            throw new Error('Invalid Signature: r must be 0 < r < n');\n        if (!isWithinCurveOrder(s))\n            throw new Error('Invalid Signature: s must be 0 < s < n');\n    }\n    hasHighS() {\n        const HALF = CURVE.n >> _1n;\n        return this.s > HALF;\n    }\n    normalizeS() {\n        return this.hasHighS() ? new Signature(this.r, mod(-this.s, CURVE.n)) : this;\n    }\n    toDERRawBytes() {\n        return hexToBytes(this.toDERHex());\n    }\n    toDERHex() {\n        const sHex = sliceDER(numberToHexUnpadded(this.s));\n        const rHex = sliceDER(numberToHexUnpadded(this.r));\n        const sHexL = sHex.length / 2;\n        const rHexL = rHex.length / 2;\n        const sLen = numberToHexUnpadded(sHexL);\n        const rLen = numberToHexUnpadded(rHexL);\n        const length = numberToHexUnpadded(rHexL + sHexL + 4);\n        return `30${length}02${rLen}${rHex}02${sLen}${sHex}`;\n    }\n    toRawBytes() {\n        return this.toDERRawBytes();\n    }\n    toHex() {\n        return this.toDERHex();\n    }\n    toCompactRawBytes() {\n        return hexToBytes(this.toCompactHex());\n    }\n    toCompactHex() {\n        return numTo32bStr(this.r) + numTo32bStr(this.s);\n    }\n}\nfunction concatBytes(...arrays) {\n    if (!arrays.every((b) => b instanceof Uint8Array))\n        throw new Error('Uint8Array list expected');\n    if (arrays.length === 1)\n        return arrays[0];\n    const length = arrays.reduce((a, arr) => a + arr.length, 0);\n    const result = new Uint8Array(length);\n    for (let i = 0, pad = 0; i < arrays.length; i++) {\n        const arr = arrays[i];\n        result.set(arr, pad);\n        pad += arr.length;\n    }\n    return result;\n}\nconst hexes = Array.from({ length: 256 }, (v, i) => i.toString(16).padStart(2, '0'));\nfunction bytesToHex(uint8a) {\n    if (!(uint8a instanceof Uint8Array))\n        throw new Error('Expected Uint8Array');\n    let hex = '';\n    for (let i = 0; i < uint8a.length; i++) {\n        hex += hexes[uint8a[i]];\n    }\n    return hex;\n}\nconst POW_2_256 = BigInt('0x10000000000000000000000000000000000000000000000000000000000000000');\nfunction numTo32bStr(num) {\n    if (typeof num !== 'bigint')\n        throw new Error('Expected bigint');\n    if (!(_0n <= num && num < POW_2_256))\n        throw new Error('Expected number 0 <= n < 2^256');\n    return num.toString(16).padStart(64, '0');\n}\nfunction numTo32b(num) {\n    const b = hexToBytes(numTo32bStr(num));\n    if (b.length !== 32)\n        throw new Error('Error: expected 32 bytes');\n    return b;\n}\nfunction numberToHexUnpadded(num) {\n    const hex = num.toString(16);\n    return hex.length & 1 ? `0${hex}` : hex;\n}\nfunction hexToNumber(hex) {\n    if (typeof hex !== 'string') {\n        throw new TypeError('hexToNumber: expected string, got ' + typeof hex);\n    }\n    return BigInt(`0x${hex}`);\n}\nfunction hexToBytes(hex) {\n    if (typeof hex !== 'string') {\n        throw new TypeError('hexToBytes: expected string, got ' + typeof hex);\n    }\n    if (hex.length % 2)\n        throw new Error('hexToBytes: received invalid unpadded hex' + hex.length);\n    const array = new Uint8Array(hex.length / 2);\n    for (let i = 0; i < array.length; i++) {\n        const j = i * 2;\n        const hexByte = hex.slice(j, j + 2);\n        const byte = Number.parseInt(hexByte, 16);\n        if (Number.isNaN(byte) || byte < 0)\n            throw new Error('Invalid byte sequence');\n        array[i] = byte;\n    }\n    return array;\n}\nfunction bytesToNumber(bytes) {\n    return hexToNumber(bytesToHex(bytes));\n}\nfunction ensureBytes(hex) {\n    return hex instanceof Uint8Array ? Uint8Array.from(hex) : hexToBytes(hex);\n}\nfunction normalizeScalar(num) {\n    if (typeof num === 'number' && Number.isSafeInteger(num) && num > 0)\n        return BigInt(num);\n    if (typeof num === 'bigint' && isWithinCurveOrder(num))\n        return num;\n    throw new TypeError('Expected valid private scalar: 0 < scalar < curve.n');\n}\nfunction mod(a, b = CURVE.P) {\n    const result = a % b;\n    return result >= _0n ? result : b + result;\n}\nfunction pow2(x, power) {\n    const { P } = CURVE;\n    let res = x;\n    while (power-- > _0n) {\n        res *= res;\n        res %= P;\n    }\n    return res;\n}\nfunction sqrtMod(x) {\n    const { P } = CURVE;\n    const _6n = BigInt(6);\n    const _11n = BigInt(11);\n    const _22n = BigInt(22);\n    const _23n = BigInt(23);\n    const _44n = BigInt(44);\n    const _88n = BigInt(88);\n    const b2 = (x * x * x) % P;\n    const b3 = (b2 * b2 * x) % P;\n    const b6 = (pow2(b3, _3n) * b3) % P;\n    const b9 = (pow2(b6, _3n) * b3) % P;\n    const b11 = (pow2(b9, _2n) * b2) % P;\n    const b22 = (pow2(b11, _11n) * b11) % P;\n    const b44 = (pow2(b22, _22n) * b22) % P;\n    const b88 = (pow2(b44, _44n) * b44) % P;\n    const b176 = (pow2(b88, _88n) * b88) % P;\n    const b220 = (pow2(b176, _44n) * b44) % P;\n    const b223 = (pow2(b220, _3n) * b3) % P;\n    const t1 = (pow2(b223, _23n) * b22) % P;\n    const t2 = (pow2(t1, _6n) * b2) % P;\n    const rt = pow2(t2, _2n);\n    const xc = (rt * rt) % P;\n    if (xc !== x)\n        throw new Error('Cannot find square root');\n    return rt;\n}\nfunction invert(number, modulo = CURVE.P) {\n    if (number === _0n || modulo <= _0n) {\n        throw new Error(`invert: expected positive integers, got n=${number} mod=${modulo}`);\n    }\n    let a = mod(number, modulo);\n    let b = modulo;\n    let x = _0n, y = _1n, u = _1n, v = _0n;\n    while (a !== _0n) {\n        const q = b / a;\n        const r = b % a;\n        const m = x - u * q;\n        const n = y - v * q;\n        b = a, a = r, x = u, y = v, u = m, v = n;\n    }\n    const gcd = b;\n    if (gcd !== _1n)\n        throw new Error('invert: does not exist');\n    return mod(x, modulo);\n}\nfunction invertBatch(nums, p = CURVE.P) {\n    const scratch = new Array(nums.length);\n    const lastMultiplied = nums.reduce((acc, num, i) => {\n        if (num === _0n)\n            return acc;\n        scratch[i] = acc;\n        return mod(acc * num, p);\n    }, _1n);\n    const inverted = invert(lastMultiplied, p);\n    nums.reduceRight((acc, num, i) => {\n        if (num === _0n)\n            return acc;\n        scratch[i] = mod(acc * scratch[i], p);\n        return mod(acc * num, p);\n    }, inverted);\n    return scratch;\n}\nfunction bits2int_2(bytes) {\n    const delta = bytes.length * 8 - groupLen * 8;\n    const num = bytesToNumber(bytes);\n    return delta > 0 ? num >> BigInt(delta) : num;\n}\nfunction truncateHash(hash, truncateOnly = false) {\n    const h = bits2int_2(hash);\n    if (truncateOnly)\n        return h;\n    const { n } = CURVE;\n    return h >= n ? h - n : h;\n}\nlet _sha256Sync;\nlet _hmacSha256Sync;\nclass HmacDrbg {\n    constructor(hashLen, qByteLen) {\n        this.hashLen = hashLen;\n        this.qByteLen = qByteLen;\n        if (typeof hashLen !== 'number' || hashLen < 2)\n            throw new Error('hashLen must be a number');\n        if (typeof qByteLen !== 'number' || qByteLen < 2)\n            throw new Error('qByteLen must be a number');\n        this.v = new Uint8Array(hashLen).fill(1);\n        this.k = new Uint8Array(hashLen).fill(0);\n        this.counter = 0;\n    }\n    hmac(...values) {\n        return utils.hmacSha256(this.k, ...values);\n    }\n    hmacSync(...values) {\n        return _hmacSha256Sync(this.k, ...values);\n    }\n    checkSync() {\n        if (typeof _hmacSha256Sync !== 'function')\n            throw new ShaError('hmacSha256Sync needs to be set');\n    }\n    incr() {\n        if (this.counter >= 1000)\n            throw new Error('Tried 1,000 k values for sign(), all were invalid');\n        this.counter += 1;\n    }\n    async reseed(seed = new Uint8Array()) {\n        this.k = await this.hmac(this.v, Uint8Array.from([0x00]), seed);\n        this.v = await this.hmac(this.v);\n        if (seed.length === 0)\n            return;\n        this.k = await this.hmac(this.v, Uint8Array.from([0x01]), seed);\n        this.v = await this.hmac(this.v);\n    }\n    reseedSync(seed = new Uint8Array()) {\n        this.checkSync();\n        this.k = this.hmacSync(this.v, Uint8Array.from([0x00]), seed);\n        this.v = this.hmacSync(this.v);\n        if (seed.length === 0)\n            return;\n        this.k = this.hmacSync(this.v, Uint8Array.from([0x01]), seed);\n        this.v = this.hmacSync(this.v);\n    }\n    async generate() {\n        this.incr();\n        let len = 0;\n        const out = [];\n        while (len < this.qByteLen) {\n            this.v = await this.hmac(this.v);\n            const sl = this.v.slice();\n            out.push(sl);\n            len += this.v.length;\n        }\n        return concatBytes(...out);\n    }\n    generateSync() {\n        this.checkSync();\n        this.incr();\n        let len = 0;\n        const out = [];\n        while (len < this.qByteLen) {\n            this.v = this.hmacSync(this.v);\n            const sl = this.v.slice();\n            out.push(sl);\n            len += this.v.length;\n        }\n        return concatBytes(...out);\n    }\n}\nfunction isWithinCurveOrder(num) {\n    return _0n < num && num < CURVE.n;\n}\nfunction isValidFieldElement(num) {\n    return _0n < num && num < CURVE.P;\n}\nfunction kmdToSig(kBytes, m, d, lowS = true) {\n    const { n } = CURVE;\n    const k = truncateHash(kBytes, true);\n    if (!isWithinCurveOrder(k))\n        return;\n    const kinv = invert(k, n);\n    const q = Point.BASE.multiply(k);\n    const r = mod(q.x, n);\n    if (r === _0n)\n        return;\n    const s = mod(kinv * mod(m + d * r, n), n);\n    if (s === _0n)\n        return;\n    let sig = new Signature(r, s);\n    let recovery = (q.x === sig.r ? 0 : 2) | Number(q.y & _1n);\n    if (lowS && sig.hasHighS()) {\n        sig = sig.normalizeS();\n        recovery ^= 1;\n    }\n    return { sig, recovery };\n}\nfunction normalizePrivateKey(key) {\n    let num;\n    if (typeof key === 'bigint') {\n        num = key;\n    }\n    else if (typeof key === 'number' && Number.isSafeInteger(key) && key > 0) {\n        num = BigInt(key);\n    }\n    else if (typeof key === 'string') {\n        if (key.length !== 2 * groupLen)\n            throw new Error('Expected 32 bytes of private key');\n        num = hexToNumber(key);\n    }\n    else if (key instanceof Uint8Array) {\n        if (key.length !== groupLen)\n            throw new Error('Expected 32 bytes of private key');\n        num = bytesToNumber(key);\n    }\n    else {\n        throw new TypeError('Expected valid private key');\n    }\n    if (!isWithinCurveOrder(num))\n        throw new Error('Expected private key: 0 < key < n');\n    return num;\n}\nfunction normalizePublicKey(publicKey) {\n    if (publicKey instanceof Point) {\n        publicKey.assertValidity();\n        return publicKey;\n    }\n    else {\n        return Point.fromHex(publicKey);\n    }\n}\nfunction normalizeSignature(signature) {\n    if (signature instanceof Signature) {\n        signature.assertValidity();\n        return signature;\n    }\n    try {\n        return Signature.fromDER(signature);\n    }\n    catch (error) {\n        return Signature.fromCompact(signature);\n    }\n}\nexport function getPublicKey(privateKey, isCompressed = false) {\n    return Point.fromPrivateKey(privateKey).toRawBytes(isCompressed);\n}\nexport function recoverPublicKey(msgHash, signature, recovery, isCompressed = false) {\n    return Point.fromSignature(msgHash, signature, recovery).toRawBytes(isCompressed);\n}\nfunction isProbPub(item) {\n    const arr = item instanceof Uint8Array;\n    const str = typeof item === 'string';\n    const len = (arr || str) && item.length;\n    if (arr)\n        return len === compressedLen || len === uncompressedLen;\n    if (str)\n        return len === compressedLen * 2 || len === uncompressedLen * 2;\n    if (item instanceof Point)\n        return true;\n    return false;\n}\nexport function getSharedSecret(privateA, publicB, isCompressed = false) {\n    if (isProbPub(privateA))\n        throw new TypeError('getSharedSecret: first arg must be private key');\n    if (!isProbPub(publicB))\n        throw new TypeError('getSharedSecret: second arg must be public key');\n    const b = normalizePublicKey(publicB);\n    b.assertValidity();\n    return b.multiply(normalizePrivateKey(privateA)).toRawBytes(isCompressed);\n}\nfunction bits2int(bytes) {\n    const slice = bytes.length > fieldLen ? bytes.slice(0, fieldLen) : bytes;\n    return bytesToNumber(slice);\n}\nfunction bits2octets(bytes) {\n    const z1 = bits2int(bytes);\n    const z2 = mod(z1, CURVE.n);\n    return int2octets(z2 < _0n ? z1 : z2);\n}\nfunction int2octets(num) {\n    return numTo32b(num);\n}\nfunction initSigArgs(msgHash, privateKey, extraEntropy) {\n    if (msgHash == null)\n        throw new Error(`sign: expected valid message hash, not \"${msgHash}\"`);\n    const h1 = ensureBytes(msgHash);\n    const d = normalizePrivateKey(privateKey);\n    const seedArgs = [int2octets(d), bits2octets(h1)];\n    if (extraEntropy != null) {\n        if (extraEntropy === true)\n            extraEntropy = utils.randomBytes(fieldLen);\n        const e = ensureBytes(extraEntropy);\n        if (e.length !== fieldLen)\n            throw new Error(`sign: Expected ${fieldLen} bytes of extra data`);\n        seedArgs.push(e);\n    }\n    const seed = concatBytes(...seedArgs);\n    const m = bits2int(h1);\n    return { seed, m, d };\n}\nfunction finalizeSig(recSig, opts) {\n    const { sig, recovery } = recSig;\n    const { der, recovered } = Object.assign({ canonical: true, der: true }, opts);\n    const hashed = der ? sig.toDERRawBytes() : sig.toCompactRawBytes();\n    return recovered ? [hashed, recovery] : hashed;\n}\nasync function sign(msgHash, privKey, opts = {}) {\n    const { seed, m, d } = initSigArgs(msgHash, privKey, opts.extraEntropy);\n    const drbg = new HmacDrbg(hashLen, groupLen);\n    await drbg.reseed(seed);\n    let sig;\n    while (!(sig = kmdToSig(await drbg.generate(), m, d, opts.canonical)))\n        await drbg.reseed();\n    return finalizeSig(sig, opts);\n}\nfunction signSync(msgHash, privKey, opts = {}) {\n    const { seed, m, d } = initSigArgs(msgHash, privKey, opts.extraEntropy);\n    const drbg = new HmacDrbg(hashLen, groupLen);\n    drbg.reseedSync(seed);\n    let sig;\n    while (!(sig = kmdToSig(drbg.generateSync(), m, d, opts.canonical)))\n        drbg.reseedSync();\n    return finalizeSig(sig, opts);\n}\nexport { sign, signSync };\nconst vopts = { strict: true };\nexport function verify(signature, msgHash, publicKey, opts = vopts) {\n    let sig;\n    try {\n        sig = normalizeSignature(signature);\n        msgHash = ensureBytes(msgHash);\n    }\n    catch (error) {\n        return false;\n    }\n    const { r, s } = sig;\n    if (opts.strict && sig.hasHighS())\n        return false;\n    const h = truncateHash(msgHash);\n    let P;\n    try {\n        P = normalizePublicKey(publicKey);\n    }\n    catch (error) {\n        return false;\n    }\n    const { n } = CURVE;\n    const sinv = invert(s, n);\n    const u1 = mod(h * sinv, n);\n    const u2 = mod(r * sinv, n);\n    const R = Point.BASE.multiplyAndAddUnsafe(P, u1, u2);\n    if (!R)\n        return false;\n    const v = mod(R.x, n);\n    return v === r;\n}\nfunction schnorrChallengeFinalize(ch) {\n    return mod(bytesToNumber(ch), CURVE.n);\n}\nclass SchnorrSignature {\n    constructor(r, s) {\n        this.r = r;\n        this.s = s;\n        this.assertValidity();\n    }\n    static fromHex(hex) {\n        const bytes = ensureBytes(hex);\n        if (bytes.length !== 64)\n            throw new TypeError(`SchnorrSignature.fromHex: expected 64 bytes, not ${bytes.length}`);\n        const r = bytesToNumber(bytes.subarray(0, 32));\n        const s = bytesToNumber(bytes.subarray(32, 64));\n        return new SchnorrSignature(r, s);\n    }\n    assertValidity() {\n        const { r, s } = this;\n        if (!isValidFieldElement(r) || !isWithinCurveOrder(s))\n            throw new Error('Invalid signature');\n    }\n    toHex() {\n        return numTo32bStr(this.r) + numTo32bStr(this.s);\n    }\n    toRawBytes() {\n        return hexToBytes(this.toHex());\n    }\n}\nfunction schnorrGetPublicKey(privateKey) {\n    return Point.fromPrivateKey(privateKey).toRawX();\n}\nclass InternalSchnorrSignature {\n    constructor(message, privateKey, auxRand = utils.randomBytes()) {\n        if (message == null)\n            throw new TypeError(`sign: Expected valid message, not \"${message}\"`);\n        this.m = ensureBytes(message);\n        const { x, scalar } = this.getScalar(normalizePrivateKey(privateKey));\n        this.px = x;\n        this.d = scalar;\n        this.rand = ensureBytes(auxRand);\n        if (this.rand.length !== 32)\n            throw new TypeError('sign: Expected 32 bytes of aux randomness');\n    }\n    getScalar(priv) {\n        const point = Point.fromPrivateKey(priv);\n        const scalar = point.hasEvenY() ? priv : CURVE.n - priv;\n        return { point, scalar, x: point.toRawX() };\n    }\n    initNonce(d, t0h) {\n        return numTo32b(d ^ bytesToNumber(t0h));\n    }\n    finalizeNonce(k0h) {\n        const k0 = mod(bytesToNumber(k0h), CURVE.n);\n        if (k0 === _0n)\n            throw new Error('sign: Creation of signature failed. k is zero');\n        const { point: R, x: rx, scalar: k } = this.getScalar(k0);\n        return { R, rx, k };\n    }\n    finalizeSig(R, k, e, d) {\n        return new SchnorrSignature(R.x, mod(k + e * d, CURVE.n)).toRawBytes();\n    }\n    error() {\n        throw new Error('sign: Invalid signature produced');\n    }\n    async calc() {\n        const { m, d, px, rand } = this;\n        const tag = utils.taggedHash;\n        const t = this.initNonce(d, await tag(TAGS.aux, rand));\n        const { R, rx, k } = this.finalizeNonce(await tag(TAGS.nonce, t, px, m));\n        const e = schnorrChallengeFinalize(await tag(TAGS.challenge, rx, px, m));\n        const sig = this.finalizeSig(R, k, e, d);\n        if (!(await schnorrVerify(sig, m, px)))\n            this.error();\n        return sig;\n    }\n    calcSync() {\n        const { m, d, px, rand } = this;\n        const tag = utils.taggedHashSync;\n        const t = this.initNonce(d, tag(TAGS.aux, rand));\n        const { R, rx, k } = this.finalizeNonce(tag(TAGS.nonce, t, px, m));\n        const e = schnorrChallengeFinalize(tag(TAGS.challenge, rx, px, m));\n        const sig = this.finalizeSig(R, k, e, d);\n        if (!schnorrVerifySync(sig, m, px))\n            this.error();\n        return sig;\n    }\n}\nasync function schnorrSign(msg, privKey, auxRand) {\n    return new InternalSchnorrSignature(msg, privKey, auxRand).calc();\n}\nfunction schnorrSignSync(msg, privKey, auxRand) {\n    return new InternalSchnorrSignature(msg, privKey, auxRand).calcSync();\n}\nfunction initSchnorrVerify(signature, message, publicKey) {\n    const raw = signature instanceof SchnorrSignature;\n    const sig = raw ? signature : SchnorrSignature.fromHex(signature);\n    if (raw)\n        sig.assertValidity();\n    return {\n        ...sig,\n        m: ensureBytes(message),\n        P: normalizePublicKey(publicKey),\n    };\n}\nfunction finalizeSchnorrVerify(r, P, s, e) {\n    const R = Point.BASE.multiplyAndAddUnsafe(P, normalizePrivateKey(s), mod(-e, CURVE.n));\n    if (!R || !R.hasEvenY() || R.x !== r)\n        return false;\n    return true;\n}\nasync function schnorrVerify(signature, message, publicKey) {\n    try {\n        const { r, s, m, P } = initSchnorrVerify(signature, message, publicKey);\n        const e = schnorrChallengeFinalize(await utils.taggedHash(TAGS.challenge, numTo32b(r), P.toRawX(), m));\n        return finalizeSchnorrVerify(r, P, s, e);\n    }\n    catch (error) {\n        return false;\n    }\n}\nfunction schnorrVerifySync(signature, message, publicKey) {\n    try {\n        const { r, s, m, P } = initSchnorrVerify(signature, message, publicKey);\n        const e = schnorrChallengeFinalize(utils.taggedHashSync(TAGS.challenge, numTo32b(r), P.toRawX(), m));\n        return finalizeSchnorrVerify(r, P, s, e);\n    }\n    catch (error) {\n        if (error instanceof ShaError)\n            throw error;\n        return false;\n    }\n}\nexport const schnorr = {\n    Signature: SchnorrSignature,\n    getPublicKey: schnorrGetPublicKey,\n    sign: schnorrSign,\n    verify: schnorrVerify,\n    signSync: schnorrSignSync,\n    verifySync: schnorrVerifySync,\n};\nPoint.BASE._setWindowSize(8);\nconst crypto = {\n    node: nodeCrypto,\n    web: typeof self === 'object' && 'crypto' in self ? self.crypto : undefined,\n};\nconst TAGS = {\n    challenge: 'BIP0340/challenge',\n    aux: 'BIP0340/aux',\n    nonce: 'BIP0340/nonce',\n};\nconst TAGGED_HASH_PREFIXES = {};\nexport const utils = {\n    bytesToHex,\n    hexToBytes,\n    concatBytes,\n    mod,\n    invert,\n    isValidPrivateKey(privateKey) {\n        try {\n            normalizePrivateKey(privateKey);\n            return true;\n        }\n        catch (error) {\n            return false;\n        }\n    },\n    _bigintTo32Bytes: numTo32b,\n    _normalizePrivateKey: normalizePrivateKey,\n    hashToPrivateKey: (hash) => {\n        hash = ensureBytes(hash);\n        const minLen = groupLen + 8;\n        if (hash.length < minLen || hash.length > 1024) {\n            throw new Error(`Expected valid bytes of private key as per FIPS 186`);\n        }\n        const num = mod(bytesToNumber(hash), CURVE.n - _1n) + _1n;\n        return numTo32b(num);\n    },\n    randomBytes: (bytesLength = 32) => {\n        if (crypto.web) {\n            return crypto.web.getRandomValues(new Uint8Array(bytesLength));\n        }\n        else if (crypto.node) {\n            const { randomBytes } = crypto.node;\n            return Uint8Array.from(randomBytes(bytesLength));\n        }\n        else {\n            throw new Error(\"The environment doesn't have randomBytes function\");\n        }\n    },\n    randomPrivateKey: () => utils.hashToPrivateKey(utils.randomBytes(groupLen + 8)),\n    precompute(windowSize = 8, point = Point.BASE) {\n        const cached = point === Point.BASE ? point : new Point(point.x, point.y);\n        cached._setWindowSize(windowSize);\n        cached.multiply(_3n);\n        return cached;\n    },\n    sha256: async (...messages) => {\n        if (crypto.web) {\n            const buffer = await crypto.web.subtle.digest('SHA-256', concatBytes(...messages));\n            return new Uint8Array(buffer);\n        }\n        else if (crypto.node) {\n            const { createHash } = crypto.node;\n            const hash = createHash('sha256');\n            messages.forEach((m) => hash.update(m));\n            return Uint8Array.from(hash.digest());\n        }\n        else {\n            throw new Error(\"The environment doesn't have sha256 function\");\n        }\n    },\n    hmacSha256: async (key, ...messages) => {\n        if (crypto.web) {\n            const ckey = await crypto.web.subtle.importKey('raw', key, { name: 'HMAC', hash: { name: 'SHA-256' } }, false, ['sign']);\n            const message = concatBytes(...messages);\n            const buffer = await crypto.web.subtle.sign('HMAC', ckey, message);\n            return new Uint8Array(buffer);\n        }\n        else if (crypto.node) {\n            const { createHmac } = crypto.node;\n            const hash = createHmac('sha256', key);\n            messages.forEach((m) => hash.update(m));\n            return Uint8Array.from(hash.digest());\n        }\n        else {\n            throw new Error(\"The environment doesn't have hmac-sha256 function\");\n        }\n    },\n    sha256Sync: undefined,\n    hmacSha256Sync: undefined,\n    taggedHash: async (tag, ...messages) => {\n        let tagP = TAGGED_HASH_PREFIXES[tag];\n        if (tagP === undefined) {\n            const tagH = await utils.sha256(Uint8Array.from(tag, (c) => c.charCodeAt(0)));\n            tagP = concatBytes(tagH, tagH);\n            TAGGED_HASH_PREFIXES[tag] = tagP;\n        }\n        return utils.sha256(tagP, ...messages);\n    },\n    taggedHashSync: (tag, ...messages) => {\n        if (typeof _sha256Sync !== 'function')\n            throw new ShaError('sha256Sync is undefined, you need to set it');\n        let tagP = TAGGED_HASH_PREFIXES[tag];\n        if (tagP === undefined) {\n            const tagH = _sha256Sync(Uint8Array.from(tag, (c) => c.charCodeAt(0)));\n            tagP = concatBytes(tagH, tagH);\n            TAGGED_HASH_PREFIXES[tag] = tagP;\n        }\n        return _sha256Sync(tagP, ...messages);\n    },\n    _JacobianPoint: JacobianPoint,\n};\nObject.defineProperties(utils, {\n    sha256Sync: {\n        configurable: false,\n        get() {\n            return _sha256Sync;\n        },\n        set(val) {\n            if (!_sha256Sync)\n                _sha256Sync = val;\n        },\n    },\n    hmacSha256Sync: {\n        configurable: false,\n        get() {\n            return _hmacSha256Sync;\n        },\n        set(val) {\n            if (!_hmacSha256Sync)\n                _hmacSha256Sync = val;\n        },\n    },\n});\n","import assert from './_assert.js';\nimport { Hash, toBytes } from './utils.js';\n// HMAC (RFC 2104)\nclass HMAC extends Hash {\n    constructor(hash, _key) {\n        super();\n        this.finished = false;\n        this.destroyed = false;\n        assert.hash(hash);\n        const key = toBytes(_key);\n        this.iHash = hash.create();\n        if (!(this.iHash instanceof Hash))\n            throw new TypeError('Expected instance of class which extends utils.Hash');\n        const blockLen = (this.blockLen = this.iHash.blockLen);\n        this.outputLen = this.iHash.outputLen;\n        const pad = new Uint8Array(blockLen);\n        // blockLen can be bigger than outputLen\n        pad.set(key.length > this.iHash.blockLen ? hash.create().update(key).digest() : key);\n        for (let i = 0; i < pad.length; i++)\n            pad[i] ^= 0x36;\n        this.iHash.update(pad);\n        // By doing update (processing of first block) of outer hash here we can re-use it between multiple calls via clone\n        this.oHash = hash.create();\n        // Undo internal XOR && apply outer XOR\n        for (let i = 0; i < pad.length; i++)\n            pad[i] ^= 0x36 ^ 0x5c;\n        this.oHash.update(pad);\n        pad.fill(0);\n    }\n    update(buf) {\n        assert.exists(this);\n        this.iHash.update(buf);\n        return this;\n    }\n    digestInto(out) {\n        assert.exists(this);\n        assert.bytes(out, this.outputLen);\n        this.finished = true;\n        this.iHash.digestInto(out);\n        this.oHash.update(out);\n        this.oHash.digestInto(out);\n        this.destroy();\n    }\n    digest() {\n        const out = new Uint8Array(this.oHash.outputLen);\n        this.digestInto(out);\n        return out;\n    }\n    _cloneInto(to) {\n        // Create new instance without calling constructor since key already in state and we don't know it.\n        to || (to = Object.create(Object.getPrototypeOf(this), {}));\n        const { oHash, iHash, finished, destroyed, blockLen, outputLen } = this;\n        to = to;\n        to.finished = finished;\n        to.destroyed = destroyed;\n        to.blockLen = blockLen;\n        to.outputLen = outputLen;\n        to.oHash = oHash._cloneInto(to.oHash);\n        to.iHash = iHash._cloneInto(to.iHash);\n        return to;\n    }\n    destroy() {\n        this.destroyed = true;\n        this.oHash.destroy();\n        this.iHash.destroy();\n    }\n}\n/**\n * HMAC: RFC2104 message authentication code.\n * @param hash - function that would be used e.g. sha256\n * @param key - message key\n * @param message - message data\n */\nexport const hmac = (hash, key, message) => new HMAC(hash, key).update(message).digest();\nhmac.create = (hash, key) => new HMAC(hash, key);\n","import assert from './_assert.js';\nimport { Hash, createView, toBytes } from './utils.js';\n// Polyfill for Safari 14\nfunction setBigUint64(view, byteOffset, value, isLE) {\n    if (typeof view.setBigUint64 === 'function')\n        return view.setBigUint64(byteOffset, value, isLE);\n    const _32n = BigInt(32);\n    const _u32_max = BigInt(0xffffffff);\n    const wh = Number((value >> _32n) & _u32_max);\n    const wl = Number(value & _u32_max);\n    const h = isLE ? 4 : 0;\n    const l = isLE ? 0 : 4;\n    view.setUint32(byteOffset + h, wh, isLE);\n    view.setUint32(byteOffset + l, wl, isLE);\n}\n// Base SHA2 class (RFC 6234)\nexport class SHA2 extends Hash {\n    constructor(blockLen, outputLen, padOffset, isLE) {\n        super();\n        this.blockLen = blockLen;\n        this.outputLen = outputLen;\n        this.padOffset = padOffset;\n        this.isLE = isLE;\n        this.finished = false;\n        this.length = 0;\n        this.pos = 0;\n        this.destroyed = false;\n        this.buffer = new Uint8Array(blockLen);\n        this.view = createView(this.buffer);\n    }\n    update(data) {\n        assert.exists(this);\n        const { view, buffer, blockLen } = this;\n        data = toBytes(data);\n        const len = data.length;\n        for (let pos = 0; pos < len;) {\n            const take = Math.min(blockLen - this.pos, len - pos);\n            // Fast path: we have at least one block in input, cast it to view and process\n            if (take === blockLen) {\n                const dataView = createView(data);\n                for (; blockLen <= len - pos; pos += blockLen)\n                    this.process(dataView, pos);\n                continue;\n            }\n            buffer.set(data.subarray(pos, pos + take), this.pos);\n            this.pos += take;\n            pos += take;\n            if (this.pos === blockLen) {\n                this.process(view, 0);\n                this.pos = 0;\n            }\n        }\n        this.length += data.length;\n        this.roundClean();\n        return this;\n    }\n    digestInto(out) {\n        assert.exists(this);\n        assert.output(out, this);\n        this.finished = true;\n        // Padding\n        // We can avoid allocation of buffer for padding completely if it\n        // was previously not allocated here. But it won't change performance.\n        const { buffer, view, blockLen, isLE } = this;\n        let { pos } = this;\n        // append the bit '1' to the message\n        buffer[pos++] = 0b10000000;\n        this.buffer.subarray(pos).fill(0);\n        // we have less than padOffset left in buffer, so we cannot put length in current block, need process it and pad again\n        if (this.padOffset > blockLen - pos) {\n            this.process(view, 0);\n            pos = 0;\n        }\n        // Pad until full block byte with zeros\n        for (let i = pos; i < blockLen; i++)\n            buffer[i] = 0;\n        // Note: sha512 requires length to be 128bit integer, but length in JS will overflow before that\n        // You need to write around 2 exabytes (u64_max / 8 / (1024**6)) for this to happen.\n        // So we just write lowest 64 bits of that value.\n        setBigUint64(view, blockLen - 8, BigInt(this.length * 8), isLE);\n        this.process(view, 0);\n        const oview = createView(out);\n        this.get().forEach((v, i) => oview.setUint32(4 * i, v, isLE));\n    }\n    digest() {\n        const { buffer, outputLen } = this;\n        this.digestInto(buffer);\n        const res = buffer.slice(0, outputLen);\n        this.destroy();\n        return res;\n    }\n    _cloneInto(to) {\n        to || (to = new this.constructor());\n        to.set(...this.get());\n        const { blockLen, buffer, length, finished, destroyed, pos } = this;\n        to.length = length;\n        to.pos = pos;\n        to.finished = finished;\n        to.destroyed = destroyed;\n        if (length % blockLen)\n            to.buffer.set(buffer);\n        return to;\n    }\n}\n","import { SHA2 } from './_sha2.js';\nimport { rotr, wrapConstructor } from './utils.js';\n// Choice: a ? b : c\nconst Chi = (a, b, c) => (a & b) ^ (~a & c);\n// Majority function, true if any two inpust is true\nconst Maj = (a, b, c) => (a & b) ^ (a & c) ^ (b & c);\n// Round constants:\n// first 32 bits of the fractional parts of the cube roots of the first 64 primes 2..311)\n// prettier-ignore\nconst SHA256_K = new Uint32Array([\n    0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n    0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n    0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n    0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n    0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n    0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n    0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n    0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n]);\n// Initial state (first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19):\n// prettier-ignore\nconst IV = new Uint32Array([\n    0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a, 0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19\n]);\n// Temporary buffer, not used to store anything between runs\n// Named this way because it matches specification.\nconst SHA256_W = new Uint32Array(64);\nclass SHA256 extends SHA2 {\n    constructor() {\n        super(64, 32, 8, false);\n        // We cannot use array here since array allows indexing by variable\n        // which means optimizer/compiler cannot use registers.\n        this.A = IV[0] | 0;\n        this.B = IV[1] | 0;\n        this.C = IV[2] | 0;\n        this.D = IV[3] | 0;\n        this.E = IV[4] | 0;\n        this.F = IV[5] | 0;\n        this.G = IV[6] | 0;\n        this.H = IV[7] | 0;\n    }\n    get() {\n        const { A, B, C, D, E, F, G, H } = this;\n        return [A, B, C, D, E, F, G, H];\n    }\n    // prettier-ignore\n    set(A, B, C, D, E, F, G, H) {\n        this.A = A | 0;\n        this.B = B | 0;\n        this.C = C | 0;\n        this.D = D | 0;\n        this.E = E | 0;\n        this.F = F | 0;\n        this.G = G | 0;\n        this.H = H | 0;\n    }\n    process(view, offset) {\n        // Extend the first 16 words into the remaining 48 words w[16..63] of the message schedule array\n        for (let i = 0; i < 16; i++, offset += 4)\n            SHA256_W[i] = view.getUint32(offset, false);\n        for (let i = 16; i < 64; i++) {\n            const W15 = SHA256_W[i - 15];\n            const W2 = SHA256_W[i - 2];\n            const s0 = rotr(W15, 7) ^ rotr(W15, 18) ^ (W15 >>> 3);\n            const s1 = rotr(W2, 17) ^ rotr(W2, 19) ^ (W2 >>> 10);\n            SHA256_W[i] = (s1 + SHA256_W[i - 7] + s0 + SHA256_W[i - 16]) | 0;\n        }\n        // Compression function main loop, 64 rounds\n        let { A, B, C, D, E, F, G, H } = this;\n        for (let i = 0; i < 64; i++) {\n            const sigma1 = rotr(E, 6) ^ rotr(E, 11) ^ rotr(E, 25);\n            const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n            const sigma0 = rotr(A, 2) ^ rotr(A, 13) ^ rotr(A, 22);\n            const T2 = (sigma0 + Maj(A, B, C)) | 0;\n            H = G;\n            G = F;\n            F = E;\n            E = (D + T1) | 0;\n            D = C;\n            C = B;\n            B = A;\n            A = (T1 + T2) | 0;\n        }\n        // Add the compressed chunk to the current hash value\n        A = (A + this.A) | 0;\n        B = (B + this.B) | 0;\n        C = (C + this.C) | 0;\n        D = (D + this.D) | 0;\n        E = (E + this.E) | 0;\n        F = (F + this.F) | 0;\n        G = (G + this.G) | 0;\n        H = (H + this.H) | 0;\n        this.set(A, B, C, D, E, F, G, H);\n    }\n    roundClean() {\n        SHA256_W.fill(0);\n    }\n    destroy() {\n        this.set(0, 0, 0, 0, 0, 0, 0, 0);\n        this.buffer.fill(0);\n    }\n}\n/**\n * SHA2-256 hash function\n * @param message - data that would be hashed\n */\nexport const sha256 = wrapConstructor(() => new SHA256());\n","import { SHA2 } from './_sha2.js';\nimport u64 from './_u64.js';\nimport { wrapConstructor } from './utils.js';\n// Round contants (first 32 bits of the fractional parts of the cube roots of the first 80 primes 2..409):\n// prettier-ignore\nconst [SHA512_Kh, SHA512_Kl] = u64.split([\n    '0x428a2f98d728ae22', '0x7137449123ef65cd', '0xb5c0fbcfec4d3b2f', '0xe9b5dba58189dbbc',\n    '0x3956c25bf348b538', '0x59f111f1b605d019', '0x923f82a4af194f9b', '0xab1c5ed5da6d8118',\n    '0xd807aa98a3030242', '0x12835b0145706fbe', '0x243185be4ee4b28c', '0x550c7dc3d5ffb4e2',\n    '0x72be5d74f27b896f', '0x80deb1fe3b1696b1', '0x9bdc06a725c71235', '0xc19bf174cf692694',\n    '0xe49b69c19ef14ad2', '0xefbe4786384f25e3', '0x0fc19dc68b8cd5b5', '0x240ca1cc77ac9c65',\n    '0x2de92c6f592b0275', '0x4a7484aa6ea6e483', '0x5cb0a9dcbd41fbd4', '0x76f988da831153b5',\n    '0x983e5152ee66dfab', '0xa831c66d2db43210', '0xb00327c898fb213f', '0xbf597fc7beef0ee4',\n    '0xc6e00bf33da88fc2', '0xd5a79147930aa725', '0x06ca6351e003826f', '0x142929670a0e6e70',\n    '0x27b70a8546d22ffc', '0x2e1b21385c26c926', '0x4d2c6dfc5ac42aed', '0x53380d139d95b3df',\n    '0x650a73548baf63de', '0x766a0abb3c77b2a8', '0x81c2c92e47edaee6', '0x92722c851482353b',\n    '0xa2bfe8a14cf10364', '0xa81a664bbc423001', '0xc24b8b70d0f89791', '0xc76c51a30654be30',\n    '0xd192e819d6ef5218', '0xd69906245565a910', '0xf40e35855771202a', '0x106aa07032bbd1b8',\n    '0x19a4c116b8d2d0c8', '0x1e376c085141ab53', '0x2748774cdf8eeb99', '0x34b0bcb5e19b48a8',\n    '0x391c0cb3c5c95a63', '0x4ed8aa4ae3418acb', '0x5b9cca4f7763e373', '0x682e6ff3d6b2b8a3',\n    '0x748f82ee5defb2fc', '0x78a5636f43172f60', '0x84c87814a1f0ab72', '0x8cc702081a6439ec',\n    '0x90befffa23631e28', '0xa4506cebde82bde9', '0xbef9a3f7b2c67915', '0xc67178f2e372532b',\n    '0xca273eceea26619c', '0xd186b8c721c0c207', '0xeada7dd6cde0eb1e', '0xf57d4f7fee6ed178',\n    '0x06f067aa72176fba', '0x0a637dc5a2c898a6', '0x113f9804bef90dae', '0x1b710b35131c471b',\n    '0x28db77f523047d84', '0x32caab7b40c72493', '0x3c9ebe0a15c9bebc', '0x431d67c49c100d4c',\n    '0x4cc5d4becb3e42b6', '0x597f299cfc657e2a', '0x5fcb6fab3ad6faec', '0x6c44198c4a475817'\n].map(n => BigInt(n)));\n// Temporary buffer, not used to store anything between runs\nconst SHA512_W_H = new Uint32Array(80);\nconst SHA512_W_L = new Uint32Array(80);\nexport class SHA512 extends SHA2 {\n    constructor() {\n        super(128, 64, 16, false);\n        // We cannot use array here since array allows indexing by variable which means optimizer/compiler cannot use registers.\n        // Also looks cleaner and easier to verify with spec.\n        // Initial state (first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19):\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0x6a09e667 | 0;\n        this.Al = 0xf3bcc908 | 0;\n        this.Bh = 0xbb67ae85 | 0;\n        this.Bl = 0x84caa73b | 0;\n        this.Ch = 0x3c6ef372 | 0;\n        this.Cl = 0xfe94f82b | 0;\n        this.Dh = 0xa54ff53a | 0;\n        this.Dl = 0x5f1d36f1 | 0;\n        this.Eh = 0x510e527f | 0;\n        this.El = 0xade682d1 | 0;\n        this.Fh = 0x9b05688c | 0;\n        this.Fl = 0x2b3e6c1f | 0;\n        this.Gh = 0x1f83d9ab | 0;\n        this.Gl = 0xfb41bd6b | 0;\n        this.Hh = 0x5be0cd19 | 0;\n        this.Hl = 0x137e2179 | 0;\n    }\n    // prettier-ignore\n    get() {\n        const { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\n        return [Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl];\n    }\n    // prettier-ignore\n    set(Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl) {\n        this.Ah = Ah | 0;\n        this.Al = Al | 0;\n        this.Bh = Bh | 0;\n        this.Bl = Bl | 0;\n        this.Ch = Ch | 0;\n        this.Cl = Cl | 0;\n        this.Dh = Dh | 0;\n        this.Dl = Dl | 0;\n        this.Eh = Eh | 0;\n        this.El = El | 0;\n        this.Fh = Fh | 0;\n        this.Fl = Fl | 0;\n        this.Gh = Gh | 0;\n        this.Gl = Gl | 0;\n        this.Hh = Hh | 0;\n        this.Hl = Hl | 0;\n    }\n    process(view, offset) {\n        // Extend the first 16 words into the remaining 64 words w[16..79] of the message schedule array\n        for (let i = 0; i < 16; i++, offset += 4) {\n            SHA512_W_H[i] = view.getUint32(offset);\n            SHA512_W_L[i] = view.getUint32((offset += 4));\n        }\n        for (let i = 16; i < 80; i++) {\n            // s0 := (w[i-15] rightrotate 1) xor (w[i-15] rightrotate 8) xor (w[i-15] rightshift 7)\n            const W15h = SHA512_W_H[i - 15] | 0;\n            const W15l = SHA512_W_L[i - 15] | 0;\n            const s0h = u64.rotrSH(W15h, W15l, 1) ^ u64.rotrSH(W15h, W15l, 8) ^ u64.shrSH(W15h, W15l, 7);\n            const s0l = u64.rotrSL(W15h, W15l, 1) ^ u64.rotrSL(W15h, W15l, 8) ^ u64.shrSL(W15h, W15l, 7);\n            // s1 := (w[i-2] rightrotate 19) xor (w[i-2] rightrotate 61) xor (w[i-2] rightshift 6)\n            const W2h = SHA512_W_H[i - 2] | 0;\n            const W2l = SHA512_W_L[i - 2] | 0;\n            const s1h = u64.rotrSH(W2h, W2l, 19) ^ u64.rotrBH(W2h, W2l, 61) ^ u64.shrSH(W2h, W2l, 6);\n            const s1l = u64.rotrSL(W2h, W2l, 19) ^ u64.rotrBL(W2h, W2l, 61) ^ u64.shrSL(W2h, W2l, 6);\n            // SHA256_W[i] = s0 + s1 + SHA256_W[i - 7] + SHA256_W[i - 16];\n            const SUMl = u64.add4L(s0l, s1l, SHA512_W_L[i - 7], SHA512_W_L[i - 16]);\n            const SUMh = u64.add4H(SUMl, s0h, s1h, SHA512_W_H[i - 7], SHA512_W_H[i - 16]);\n            SHA512_W_H[i] = SUMh | 0;\n            SHA512_W_L[i] = SUMl | 0;\n        }\n        let { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\n        // Compression function main loop, 80 rounds\n        for (let i = 0; i < 80; i++) {\n            // S1 := (e rightrotate 14) xor (e rightrotate 18) xor (e rightrotate 41)\n            const sigma1h = u64.rotrSH(Eh, El, 14) ^ u64.rotrSH(Eh, El, 18) ^ u64.rotrBH(Eh, El, 41);\n            const sigma1l = u64.rotrSL(Eh, El, 14) ^ u64.rotrSL(Eh, El, 18) ^ u64.rotrBL(Eh, El, 41);\n            //const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n            const CHIh = (Eh & Fh) ^ (~Eh & Gh);\n            const CHIl = (El & Fl) ^ (~El & Gl);\n            // T1 = H + sigma1 + Chi(E, F, G) + SHA512_K[i] + SHA512_W[i]\n            // prettier-ignore\n            const T1ll = u64.add5L(Hl, sigma1l, CHIl, SHA512_Kl[i], SHA512_W_L[i]);\n            const T1h = u64.add5H(T1ll, Hh, sigma1h, CHIh, SHA512_Kh[i], SHA512_W_H[i]);\n            const T1l = T1ll | 0;\n            // S0 := (a rightrotate 28) xor (a rightrotate 34) xor (a rightrotate 39)\n            const sigma0h = u64.rotrSH(Ah, Al, 28) ^ u64.rotrBH(Ah, Al, 34) ^ u64.rotrBH(Ah, Al, 39);\n            const sigma0l = u64.rotrSL(Ah, Al, 28) ^ u64.rotrBL(Ah, Al, 34) ^ u64.rotrBL(Ah, Al, 39);\n            const MAJh = (Ah & Bh) ^ (Ah & Ch) ^ (Bh & Ch);\n            const MAJl = (Al & Bl) ^ (Al & Cl) ^ (Bl & Cl);\n            Hh = Gh | 0;\n            Hl = Gl | 0;\n            Gh = Fh | 0;\n            Gl = Fl | 0;\n            Fh = Eh | 0;\n            Fl = El | 0;\n            ({ h: Eh, l: El } = u64.add(Dh | 0, Dl | 0, T1h | 0, T1l | 0));\n            Dh = Ch | 0;\n            Dl = Cl | 0;\n            Ch = Bh | 0;\n            Cl = Bl | 0;\n            Bh = Ah | 0;\n            Bl = Al | 0;\n            const All = u64.add3L(T1l, sigma0l, MAJl);\n            Ah = u64.add3H(All, T1h, sigma0h, MAJh);\n            Al = All | 0;\n        }\n        // Add the compressed chunk to the current hash value\n        ({ h: Ah, l: Al } = u64.add(this.Ah | 0, this.Al | 0, Ah | 0, Al | 0));\n        ({ h: Bh, l: Bl } = u64.add(this.Bh | 0, this.Bl | 0, Bh | 0, Bl | 0));\n        ({ h: Ch, l: Cl } = u64.add(this.Ch | 0, this.Cl | 0, Ch | 0, Cl | 0));\n        ({ h: Dh, l: Dl } = u64.add(this.Dh | 0, this.Dl | 0, Dh | 0, Dl | 0));\n        ({ h: Eh, l: El } = u64.add(this.Eh | 0, this.El | 0, Eh | 0, El | 0));\n        ({ h: Fh, l: Fl } = u64.add(this.Fh | 0, this.Fl | 0, Fh | 0, Fl | 0));\n        ({ h: Gh, l: Gl } = u64.add(this.Gh | 0, this.Gl | 0, Gh | 0, Gl | 0));\n        ({ h: Hh, l: Hl } = u64.add(this.Hh | 0, this.Hl | 0, Hh | 0, Hl | 0));\n        this.set(Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl);\n    }\n    roundClean() {\n        SHA512_W_H.fill(0);\n        SHA512_W_L.fill(0);\n    }\n    destroy() {\n        this.buffer.fill(0);\n        this.set(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\n    }\n}\nclass SHA512_256 extends SHA512 {\n    constructor() {\n        super();\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0x22312194 | 0;\n        this.Al = 0xfc2bf72c | 0;\n        this.Bh = 0x9f555fa3 | 0;\n        this.Bl = 0xc84c64c2 | 0;\n        this.Ch = 0x2393b86b | 0;\n        this.Cl = 0x6f53b151 | 0;\n        this.Dh = 0x96387719 | 0;\n        this.Dl = 0x5940eabd | 0;\n        this.Eh = 0x96283ee2 | 0;\n        this.El = 0xa88effe3 | 0;\n        this.Fh = 0xbe5e1e25 | 0;\n        this.Fl = 0x53863992 | 0;\n        this.Gh = 0x2b0199fc | 0;\n        this.Gl = 0x2c85b8aa | 0;\n        this.Hh = 0x0eb72ddc | 0;\n        this.Hl = 0x81c52ca2 | 0;\n        this.outputLen = 32;\n    }\n}\nclass SHA384 extends SHA512 {\n    constructor() {\n        super();\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0xcbbb9d5d | 0;\n        this.Al = 0xc1059ed8 | 0;\n        this.Bh = 0x629a292a | 0;\n        this.Bl = 0x367cd507 | 0;\n        this.Ch = 0x9159015a | 0;\n        this.Cl = 0x3070dd17 | 0;\n        this.Dh = 0x152fecd8 | 0;\n        this.Dl = 0xf70e5939 | 0;\n        this.Eh = 0x67332667 | 0;\n        this.El = 0xffc00b31 | 0;\n        this.Fh = 0x8eb44a87 | 0;\n        this.Fl = 0x68581511 | 0;\n        this.Gh = 0xdb0c2e0d | 0;\n        this.Gl = 0x64f98fa7 | 0;\n        this.Hh = 0x47b5481d | 0;\n        this.Hl = 0xbefa4fa4 | 0;\n        this.outputLen = 48;\n    }\n}\nexport const sha512 = wrapConstructor(() => new SHA512());\nexport const sha512_256 = wrapConstructor(() => new SHA512_256());\nexport const sha384 = wrapConstructor(() => new SHA384());\n","/* Browser Crypto Shims */\nimport { hmac } from \"@noble/hashes/hmac\";\nimport { pbkdf2 } from \"@noble/hashes/pbkdf2\";\nimport { sha256 } from \"@noble/hashes/sha256\";\nimport { sha512 } from \"@noble/hashes/sha512\";\nimport { assert, assertArgument } from \"../utils/index.js\";\nfunction getGlobal() {\n    if (typeof self !== 'undefined') {\n        return self;\n    }\n    if (typeof window !== 'undefined') {\n        return window;\n    }\n    if (typeof global !== 'undefined') {\n        return global;\n    }\n    throw new Error('unable to locate global object');\n}\n;\nconst anyGlobal = getGlobal();\nconst crypto = anyGlobal.crypto || anyGlobal.msCrypto;\nexport function createHash(algo) {\n    switch (algo) {\n        case \"sha256\": return sha256.create();\n        case \"sha512\": return sha512.create();\n    }\n    assertArgument(false, \"invalid hashing algorithm name\", \"algorithm\", algo);\n}\nexport function createHmac(_algo, key) {\n    const algo = ({ sha256, sha512 }[_algo]);\n    assertArgument(algo != null, \"invalid hmac algorithm\", \"algorithm\", _algo);\n    return hmac.create(algo, key);\n}\nexport function pbkdf2Sync(password, salt, iterations, keylen, _algo) {\n    const algo = ({ sha256, sha512 }[_algo]);\n    assertArgument(algo != null, \"invalid pbkdf2 algorithm\", \"algorithm\", _algo);\n    return pbkdf2(algo, password, salt, { c: iterations, dkLen: keylen });\n}\nexport function randomBytes(length) {\n    assert(crypto != null, \"platform does not support secure random numbers\", \"UNSUPPORTED_OPERATION\", {\n        operation: \"randomBytes\"\n    });\n    assertArgument(Number.isInteger(length) && length > 0 && length <= 1024, \"invalid length\", \"length\", length);\n    const result = new Uint8Array(length);\n    crypto.getRandomValues(result);\n    return result;\n}\n//# sourceMappingURL=crypto-browser.js.map","/**\n *  An **HMAC** enables verification that a given key was used\n *  to authenticate a payload.\n *\n *  See: [[link-wiki-hmac]]\n *\n *  @_subsection: api/crypto:HMAC  [about-hmac]\n */\nimport { createHmac } from \"./crypto.js\";\nimport { getBytes, hexlify } from \"../utils/index.js\";\nlet locked = false;\nconst _computeHmac = function (algorithm, key, data) {\n    return createHmac(algorithm, key).update(data).digest();\n};\nlet __computeHmac = _computeHmac;\n/**\n *  Return the HMAC for %%data%% using the %%key%% key with the underlying\n *  %%algo%% used for compression.\n *\n *  @example:\n *    key = id(\"some-secret\")\n *\n *    // Compute the HMAC\n *    computeHmac(\"sha256\", key, \"0x1337\")\n *    //_result:\n *\n *    // To compute the HMAC of UTF-8 data, the data must be\n *    // converted to UTF-8 bytes\n *    computeHmac(\"sha256\", key, toUtf8Bytes(\"Hello World\"))\n *    //_result:\n *\n */\nexport function computeHmac(algorithm, _key, _data) {\n    const key = getBytes(_key, \"key\");\n    const data = getBytes(_data, \"data\");\n    return hexlify(__computeHmac(algorithm, key, data));\n}\ncomputeHmac._ = _computeHmac;\ncomputeHmac.lock = function () { locked = true; };\ncomputeHmac.register = function (func) {\n    if (locked) {\n        throw new Error(\"computeHmac is locked\");\n    }\n    __computeHmac = func;\n};\nObject.freeze(computeHmac);\n//# sourceMappingURL=hmac.js.map","import * as secp256k1 from \"@noble/secp256k1\";\nimport { concat, dataLength, getBytes, getBytesCopy, hexlify, toBeHex, assertArgument } from \"../utils/index.js\";\nimport { computeHmac } from \"./hmac.js\";\nimport { Signature } from \"./signature.js\";\n//const N = BigInt(\"0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141\");\n// Make noble-secp256k1 sync\nsecp256k1.utils.hmacSha256Sync = function (key, ...messages) {\n    return getBytes(computeHmac(\"sha256\", key, concat(messages)));\n};\n/**\n *  A **SigningKey** provides high-level access to the elliptic curve\n *  cryptography (ECC) operations and key management.\n */\nexport class SigningKey {\n    #privateKey;\n    /**\n     *  Creates a new **SigningKey** for %%privateKey%%.\n     */\n    constructor(privateKey) {\n        assertArgument(dataLength(privateKey) === 32, \"invalid private key\", \"privateKey\", \"[REDACTED]\");\n        this.#privateKey = hexlify(privateKey);\n    }\n    /**\n     *  The private key.\n     */\n    get privateKey() { return this.#privateKey; }\n    /**\n     *  The uncompressed public key.\n     *\n     * This will always begin with the prefix ``0x04`` and be 132\n     * characters long (the ``0x`` prefix and 130 hexadecimal nibbles).\n     */\n    get publicKey() { return SigningKey.computePublicKey(this.#privateKey); }\n    /**\n     *  The compressed public key.\n     *\n     *  This will always begin with either the prefix ``0x02`` or ``0x03``\n     *  and be 68 characters long (the ``0x`` prefix and 33 hexadecimal\n     *  nibbles)\n     */\n    get compressedPublicKey() { return SigningKey.computePublicKey(this.#privateKey, true); }\n    /**\n     *  Return the signature of the signed %%digest%%.\n     */\n    sign(digest) {\n        assertArgument(dataLength(digest) === 32, \"invalid digest length\", \"digest\", digest);\n        const [sigDer, recid] = secp256k1.signSync(getBytesCopy(digest), getBytesCopy(this.#privateKey), {\n            recovered: true,\n            canonical: true\n        });\n        const sig = secp256k1.Signature.fromHex(sigDer);\n        return Signature.from({\n            r: toBeHex(\"0x\" + sig.r.toString(16), 32),\n            s: toBeHex(\"0x\" + sig.s.toString(16), 32),\n            v: (recid ? 0x1c : 0x1b)\n        });\n    }\n    /**\n     *  Returns the [[link-wiki-ecdh]] shared secret between this\n     *  private key and the %%other%% key.\n     *\n     *  The %%other%% key may be any type of key, a raw public key,\n     *  a compressed/uncompressed pubic key or aprivate key.\n     *\n     *  Best practice is usually to use a cryptographic hash on the\n     *  returned value before using it as a symetric secret.\n     *\n     *  @example:\n     *    sign1 = new SigningKey(id(\"some-secret-1\"))\n     *    sign2 = new SigningKey(id(\"some-secret-2\"))\n     *\n     *    // Notice that privA.computeSharedSecret(pubB)...\n     *    sign1.computeSharedSecret(sign2.publicKey)\n     *    //_result:\n     *\n     *    // ...is equal to privB.computeSharedSecret(pubA).\n     *    sign2.computeSharedSecret(sign1.publicKey)\n     *    //_result:\n     */\n    computeSharedSecret(other) {\n        const pubKey = SigningKey.computePublicKey(other);\n        console.log(pubKey);\n        return hexlify(secp256k1.getSharedSecret(getBytesCopy(this.#privateKey), getBytes(pubKey)));\n    }\n    /**\n     *  Compute the public key for %%key%%, optionally %%compressed%%.\n     *\n     *  The %%key%% may be any type of key, a raw public key, a\n     *  compressed/uncompressed public key or private key.\n     *\n     *  @example:\n     *    sign = new SigningKey(id(\"some-secret\"));\n     *\n     *    // Compute the uncompressed public key for a private key\n     *    SigningKey.computePublicKey(sign.privateKey)\n     *    //_result:\n     *\n     *    // Compute the compressed public key for a private key\n     *    SigningKey.computePublicKey(sign.privateKey, true)\n     *    //_result:\n     *\n     *    // Compute the uncompressed public key\n     *    SigningKey.computePublicKey(sign.publicKey, false);\n     *    //_result:\n     *\n     *    // Compute the Compressed a public key\n     *    SigningKey.computePublicKey(sign.publicKey, true);\n     *    //_result:\n     */\n    static computePublicKey(key, compressed) {\n        let bytes = getBytes(key, \"key\");\n        // private key\n        if (bytes.length === 32) {\n            const pubKey = secp256k1.getPublicKey(bytes, !!compressed);\n            return hexlify(pubKey);\n        }\n        // raw public key; use uncompressed key with 0x04 prefix\n        if (bytes.length === 64) {\n            const pub = new Uint8Array(65);\n            pub[0] = 0x04;\n            pub.set(bytes, 1);\n            bytes = pub;\n        }\n        const point = secp256k1.Point.fromHex(bytes);\n        return hexlify(point.toRawBytes(compressed));\n    }\n    /**\n     *  Returns the public key for the private key which produced the\n     *  %%signature%% for the given %%digest%%.\n     *\n     *  @example:\n     *    key = new SigningKey(id(\"some-secret\"))\n     *    digest = id(\"hello world\")\n     *    sig = key.sign(digest)\n     *\n     *    // Notice the signer public key...\n     *    key.publicKey\n     *    //_result:\n     *\n     *    // ...is equal to the recovered public key\n     *    SigningKey.recoverPublicKey(digest, sig)\n     *    //_result:\n     *\n     */\n    static recoverPublicKey(digest, signature) {\n        assertArgument(dataLength(digest) === 32, \"invalid digest length\", \"digest\", digest);\n        const sig = Signature.from(signature);\n        const der = secp256k1.Signature.fromCompact(getBytesCopy(concat([sig.r, sig.s]))).toDERRawBytes();\n        const pubKey = secp256k1.recoverPublicKey(getBytesCopy(digest), der, sig.yParity);\n        if (pubKey != null) {\n            return hexlify(pubKey);\n        }\n        assertArgument(false, \"invalid signautre for digest\", \"signature\", signature);\n    }\n    /**\n     *  Returns the point resulting from adding the ellipic curve points\n     *  %%p0%% and %%p1%%.\n     *\n     *  This is not a common function most developers should require, but\n     *  can be useful for certain privacy-specific techniques.\n     *\n     *  For example, it is used by [[HDNodeWallet]] to compute child\n     *  addresses from parent public keys and chain codes.\n     */\n    static addPoints(p0, p1, compressed) {\n        const pub0 = secp256k1.Point.fromHex(SigningKey.computePublicKey(p0).substring(2));\n        const pub1 = secp256k1.Point.fromHex(SigningKey.computePublicKey(p1).substring(2));\n        return \"0x\" + pub0.add(pub1).toHex(!!compressed);\n    }\n}\n//# sourceMappingURL=signing-key.js.map","//See: https://github.com/ethereum/wiki/wiki/RLP\nimport { hexlify } from \"./data.js\";\nimport { assert, assertArgument } from \"./errors.js\";\nimport { getBytes } from \"./data.js\";\nfunction hexlifyByte(value) {\n    let result = value.toString(16);\n    while (result.length < 2) {\n        result = \"0\" + result;\n    }\n    return \"0x\" + result;\n}\nfunction unarrayifyInteger(data, offset, length) {\n    let result = 0;\n    for (let i = 0; i < length; i++) {\n        result = (result * 256) + data[offset + i];\n    }\n    return result;\n}\nfunction _decodeChildren(data, offset, childOffset, length) {\n    const result = [];\n    while (childOffset < offset + 1 + length) {\n        const decoded = _decode(data, childOffset);\n        result.push(decoded.result);\n        childOffset += decoded.consumed;\n        assert(childOffset <= offset + 1 + length, \"child data too short\", \"BUFFER_OVERRUN\", {\n            buffer: data, length, offset\n        });\n    }\n    return { consumed: (1 + length), result: result };\n}\n// returns { consumed: number, result: Object }\nfunction _decode(data, offset) {\n    assert(data.length !== 0, \"data too short\", \"BUFFER_OVERRUN\", {\n        buffer: data, length: 0, offset: 1\n    });\n    const checkOffset = (offset) => {\n        assert(offset <= data.length, \"data short segment too short\", \"BUFFER_OVERRUN\", {\n            buffer: data, length: data.length, offset\n        });\n    };\n    // Array with extra length prefix\n    if (data[offset] >= 0xf8) {\n        const lengthLength = data[offset] - 0xf7;\n        checkOffset(offset + 1 + lengthLength);\n        const length = unarrayifyInteger(data, offset + 1, lengthLength);\n        checkOffset(offset + 1 + lengthLength + length);\n        return _decodeChildren(data, offset, offset + 1 + lengthLength, lengthLength + length);\n    }\n    else if (data[offset] >= 0xc0) {\n        const length = data[offset] - 0xc0;\n        checkOffset(offset + 1 + length);\n        return _decodeChildren(data, offset, offset + 1, length);\n    }\n    else if (data[offset] >= 0xb8) {\n        const lengthLength = data[offset] - 0xb7;\n        checkOffset(offset + 1 + lengthLength);\n        const length = unarrayifyInteger(data, offset + 1, lengthLength);\n        checkOffset(offset + 1 + lengthLength + length);\n        const result = hexlify(data.slice(offset + 1 + lengthLength, offset + 1 + lengthLength + length));\n        return { consumed: (1 + lengthLength + length), result: result };\n    }\n    else if (data[offset] >= 0x80) {\n        const length = data[offset] - 0x80;\n        checkOffset(offset + 1 + length);\n        const result = hexlify(data.slice(offset + 1, offset + 1 + length));\n        return { consumed: (1 + length), result: result };\n    }\n    return { consumed: 1, result: hexlifyByte(data[offset]) };\n}\n/**\n *  Decodes %%data%% into the structured data it represents.\n */\nexport function decodeRlp(_data) {\n    const data = getBytes(_data, \"data\");\n    const decoded = _decode(data, 0);\n    assertArgument(decoded.consumed === data.length, \"unexpected junk after rlp payload\", \"data\", _data);\n    return decoded.result;\n}\n//# sourceMappingURL=rlp-decode.js.map","//See: https://github.com/ethereum/wiki/wiki/RLP\nimport { getBytes } from \"./data.js\";\nfunction arrayifyInteger(value) {\n    const result = [];\n    while (value) {\n        result.unshift(value & 0xff);\n        value >>= 8;\n    }\n    return result;\n}\nfunction _encode(object) {\n    if (Array.isArray(object)) {\n        let payload = [];\n        object.forEach(function (child) {\n            payload = payload.concat(_encode(child));\n        });\n        if (payload.length <= 55) {\n            payload.unshift(0xc0 + payload.length);\n            return payload;\n        }\n        const length = arrayifyInteger(payload.length);\n        length.unshift(0xf7 + length.length);\n        return length.concat(payload);\n    }\n    const data = Array.prototype.slice.call(getBytes(object, \"object\"));\n    if (data.length === 1 && data[0] <= 0x7f) {\n        return data;\n    }\n    else if (data.length <= 55) {\n        data.unshift(0x80 + data.length);\n        return data;\n    }\n    const length = arrayifyInteger(data.length);\n    length.unshift(0xb7 + length.length);\n    return length.concat(data);\n}\nconst nibbles = \"0123456789abcdef\";\n/**\n *  Encodes %%object%% as an RLP-encoded [[DataHexString]].\n */\nexport function encodeRlp(object) {\n    let result = \"0x\";\n    for (const v of _encode(object)) {\n        result += nibbles[v >> 4];\n        result += nibbles[v & 0xf];\n    }\n    return result;\n}\n//# sourceMappingURL=rlp-encode.js.map","import { getAddress } from \"../address/index.js\";\nimport { keccak256, SigningKey } from \"../crypto/index.js\";\n/**\n *  Returns the address for the %%key%%.\n *\n *  The key may be any standard form of public key or a private key.\n */\nexport function computeAddress(key) {\n    let pubkey;\n    if (typeof (key) === \"string\") {\n        pubkey = SigningKey.computePublicKey(key, false);\n    }\n    else {\n        pubkey = key.publicKey;\n    }\n    return getAddress(keccak256(\"0x\" + pubkey.substring(4)).substring(26));\n}\n/**\n *  Returns the recovered address for the private key that was\n *  used to sign %%digest%% that resulted in %%signature%%.\n */\nexport function recoverAddress(digest, signature) {\n    return computeAddress(SigningKey.recoverPublicKey(digest, signature));\n}\n//# sourceMappingURL=address.js.map","import { getAddress } from \"../address/index.js\";\nimport { keccak256, Signature, SigningKey } from \"../crypto/index.js\";\nimport { concat, decodeRlp, encodeRlp, getBytes, getBigInt, getNumber, hexlify, assert, assertArgument, toBeArray, zeroPadValue } from \"../utils/index.js\";\nimport { accessListify } from \"./accesslist.js\";\nimport { recoverAddress } from \"./address.js\";\nconst BN_0 = BigInt(0);\nconst BN_2 = BigInt(2);\nconst BN_27 = BigInt(27);\nconst BN_28 = BigInt(28);\nconst BN_35 = BigInt(35);\nconst BN_MAX_UINT = BigInt(\"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\");\nfunction handleAddress(value) {\n    if (value === \"0x\") {\n        return null;\n    }\n    return getAddress(value);\n}\nfunction handleAccessList(value, param) {\n    try {\n        return accessListify(value);\n    }\n    catch (error) {\n        assertArgument(false, error.message, param, value);\n    }\n}\nfunction handleNumber(_value, param) {\n    if (_value === \"0x\") {\n        return 0;\n    }\n    return getNumber(_value, param);\n}\nfunction handleUint(_value, param) {\n    if (_value === \"0x\") {\n        return BN_0;\n    }\n    const value = getBigInt(_value, param);\n    assertArgument(value <= BN_MAX_UINT, \"value exceeds uint size\", param, value);\n    return value;\n}\nfunction formatNumber(_value, name) {\n    const value = getBigInt(_value, \"value\");\n    const result = toBeArray(value);\n    assertArgument(result.length <= 32, `value too large`, `tx.${name}`, value);\n    return result;\n}\nfunction formatAccessList(value) {\n    return accessListify(value).map((set) => [set.address, set.storageKeys]);\n}\nfunction _parseLegacy(data) {\n    const fields = decodeRlp(data);\n    assertArgument(Array.isArray(fields) && (fields.length === 9 || fields.length === 6), \"invalid field count for legacy transaction\", \"data\", data);\n    const tx = {\n        type: 0,\n        nonce: handleNumber(fields[0], \"nonce\"),\n        gasPrice: handleUint(fields[1], \"gasPrice\"),\n        gasLimit: handleUint(fields[2], \"gasLimit\"),\n        to: handleAddress(fields[3]),\n        value: handleUint(fields[4], \"value\"),\n        data: hexlify(fields[5]),\n        chainId: BN_0\n    };\n    // Legacy unsigned transaction\n    if (fields.length === 6) {\n        return tx;\n    }\n    const v = handleUint(fields[6], \"v\");\n    const r = handleUint(fields[7], \"r\");\n    const s = handleUint(fields[8], \"s\");\n    if (r === BN_0 && s === BN_0) {\n        // EIP-155 unsigned transaction\n        tx.chainId = v;\n    }\n    else {\n        // Compute the EIP-155 chain ID (or 0 for legacy)\n        let chainId = (v - BN_35) / BN_2;\n        if (chainId < BN_0) {\n            chainId = BN_0;\n        }\n        tx.chainId = chainId;\n        // Signed Legacy Transaction\n        assertArgument(chainId !== BN_0 || (v === BN_27 || v === BN_28), \"non-canonical legacy v\", \"v\", fields[6]);\n        tx.signature = Signature.from({\n            r: zeroPadValue(fields[7], 32),\n            s: zeroPadValue(fields[8], 32),\n            v\n        });\n        tx.hash = keccak256(data);\n    }\n    return tx;\n}\nfunction _serializeLegacy(tx, sig) {\n    const fields = [\n        formatNumber(tx.nonce || 0, \"nonce\"),\n        formatNumber(tx.gasPrice || 0, \"gasPrice\"),\n        formatNumber(tx.gasLimit || 0, \"gasLimit\"),\n        ((tx.to != null) ? getAddress(tx.to) : \"0x\"),\n        formatNumber(tx.value || 0, \"value\"),\n        (tx.data || \"0x\"),\n    ];\n    let chainId = BN_0;\n    if (tx.chainId != null) {\n        // A chainId was provided; if non-zero we'll use EIP-155\n        chainId = getBigInt(tx.chainId, \"tx.chainId\");\n        // We have a chainId in the tx and an EIP-155 v in the signature,\n        // make sure they agree with each other\n        assertArgument(!sig || sig.networkV == null || sig.legacyChainId === chainId, \"tx.chainId/sig.v mismatch\", \"sig\", sig);\n    }\n    else if (sig) {\n        // No chainId provided, but the signature is signing with EIP-155; derive chainId\n        const legacy = sig.legacyChainId;\n        if (legacy != null) {\n            chainId = legacy;\n        }\n    }\n    // Requesting an unsigned transaction\n    if (!sig) {\n        // We have an EIP-155 transaction (chainId was specified and non-zero)\n        if (chainId !== BN_0) {\n            fields.push(toBeArray(chainId));\n            fields.push(\"0x\");\n            fields.push(\"0x\");\n        }\n        return encodeRlp(fields);\n    }\n    // We pushed a chainId and null r, s on for hashing only; remove those\n    let v = BigInt(27 + sig.yParity);\n    if (chainId !== BN_0) {\n        v = Signature.getChainIdV(chainId, sig.v);\n    }\n    else if (BigInt(sig.v) !== v) {\n        assertArgument(false, \"tx.chainId/sig.v mismatch\", \"sig\", sig);\n    }\n    fields.push(toBeArray(v));\n    fields.push(toBeArray(sig.r));\n    fields.push(toBeArray(sig.s));\n    return encodeRlp(fields);\n}\nfunction _parseEipSignature(tx, fields, serialize) {\n    let yParity;\n    try {\n        yParity = handleNumber(fields[0], \"yParity\");\n        if (yParity !== 0 && yParity !== 1) {\n            throw new Error(\"bad yParity\");\n        }\n    }\n    catch (error) {\n        assertArgument(false, \"invalid yParity\", \"yParity\", fields[0]);\n    }\n    const r = zeroPadValue(fields[1], 32);\n    const s = zeroPadValue(fields[2], 32);\n    const signature = Signature.from({ r, s, yParity });\n    tx.signature = signature;\n}\nfunction _parseEip1559(data) {\n    const fields = decodeRlp(getBytes(data).slice(1));\n    assertArgument(Array.isArray(fields) && (fields.length === 9 || fields.length === 12), \"invalid field count for transaction type: 2\", \"data\", hexlify(data));\n    const maxPriorityFeePerGas = handleUint(fields[2], \"maxPriorityFeePerGas\");\n    const maxFeePerGas = handleUint(fields[3], \"maxFeePerGas\");\n    const tx = {\n        type: 2,\n        chainId: handleUint(fields[0], \"chainId\"),\n        nonce: handleNumber(fields[1], \"nonce\"),\n        maxPriorityFeePerGas: maxPriorityFeePerGas,\n        maxFeePerGas: maxFeePerGas,\n        gasPrice: null,\n        gasLimit: handleUint(fields[4], \"gasLimit\"),\n        to: handleAddress(fields[5]),\n        value: handleUint(fields[6], \"value\"),\n        data: hexlify(fields[7]),\n        accessList: handleAccessList(fields[8], \"accessList\"),\n    };\n    // Unsigned EIP-1559 Transaction\n    if (fields.length === 9) {\n        return tx;\n    }\n    tx.hash = keccak256(data);\n    _parseEipSignature(tx, fields.slice(9), _serializeEip1559);\n    return tx;\n}\nfunction _serializeEip1559(tx, sig) {\n    const fields = [\n        formatNumber(tx.chainId || 0, \"chainId\"),\n        formatNumber(tx.nonce || 0, \"nonce\"),\n        formatNumber(tx.maxPriorityFeePerGas || 0, \"maxPriorityFeePerGas\"),\n        formatNumber(tx.maxFeePerGas || 0, \"maxFeePerGas\"),\n        formatNumber(tx.gasLimit || 0, \"gasLimit\"),\n        ((tx.to != null) ? getAddress(tx.to) : \"0x\"),\n        formatNumber(tx.value || 0, \"value\"),\n        (tx.data || \"0x\"),\n        (formatAccessList(tx.accessList || []))\n    ];\n    if (sig) {\n        fields.push(formatNumber(sig.yParity, \"yParity\"));\n        fields.push(toBeArray(sig.r));\n        fields.push(toBeArray(sig.s));\n    }\n    return concat([\"0x02\", encodeRlp(fields)]);\n}\nfunction _parseEip2930(data) {\n    const fields = decodeRlp(getBytes(data).slice(1));\n    assertArgument(Array.isArray(fields) && (fields.length === 8 || fields.length === 11), \"invalid field count for transaction type: 1\", \"data\", hexlify(data));\n    const tx = {\n        type: 1,\n        chainId: handleUint(fields[0], \"chainId\"),\n        nonce: handleNumber(fields[1], \"nonce\"),\n        gasPrice: handleUint(fields[2], \"gasPrice\"),\n        gasLimit: handleUint(fields[3], \"gasLimit\"),\n        to: handleAddress(fields[4]),\n        value: handleUint(fields[5], \"value\"),\n        data: hexlify(fields[6]),\n        accessList: handleAccessList(fields[7], \"accessList\")\n    };\n    // Unsigned EIP-2930 Transaction\n    if (fields.length === 8) {\n        return tx;\n    }\n    tx.hash = keccak256(data);\n    _parseEipSignature(tx, fields.slice(8), _serializeEip2930);\n    return tx;\n}\nfunction _serializeEip2930(tx, sig) {\n    const fields = [\n        formatNumber(tx.chainId || 0, \"chainId\"),\n        formatNumber(tx.nonce || 0, \"nonce\"),\n        formatNumber(tx.gasPrice || 0, \"gasPrice\"),\n        formatNumber(tx.gasLimit || 0, \"gasLimit\"),\n        ((tx.to != null) ? getAddress(tx.to) : \"0x\"),\n        formatNumber(tx.value || 0, \"value\"),\n        (tx.data || \"0x\"),\n        (formatAccessList(tx.accessList || []))\n    ];\n    if (sig) {\n        fields.push(formatNumber(sig.yParity, \"recoveryParam\"));\n        fields.push(toBeArray(sig.r));\n        fields.push(toBeArray(sig.s));\n    }\n    return concat([\"0x01\", encodeRlp(fields)]);\n}\n/**\n *  A **Transaction** describes an operation to be executed on\n *  Ethereum by an Externally Owned Account (EOA). It includes\n *  who (the [[to]] address), what (the [[data]]) and how much (the\n *  [[value]] in ether) the operation should entail.\n *\n *  @example:\n *    tx = new Transaction()\n *    //_result:\n *\n *    tx.data = \"0x1234\";\n *    //_result:\n */\nexport class Transaction {\n    #type;\n    #to;\n    #data;\n    #nonce;\n    #gasLimit;\n    #gasPrice;\n    #maxPriorityFeePerGas;\n    #maxFeePerGas;\n    #value;\n    #chainId;\n    #sig;\n    #accessList;\n    /**\n     *  The transaction type.\n     *\n     *  If null, the type will be automatically inferred based on\n     *  explicit properties.\n     */\n    get type() { return this.#type; }\n    set type(value) {\n        switch (value) {\n            case null:\n                this.#type = null;\n                break;\n            case 0:\n            case \"legacy\":\n                this.#type = 0;\n                break;\n            case 1:\n            case \"berlin\":\n            case \"eip-2930\":\n                this.#type = 1;\n                break;\n            case 2:\n            case \"london\":\n            case \"eip-1559\":\n                this.#type = 2;\n                break;\n            default:\n                assertArgument(false, \"unsupported transaction type\", \"type\", value);\n        }\n    }\n    /**\n     *  The name of the transaction type.\n     */\n    get typeName() {\n        switch (this.type) {\n            case 0: return \"legacy\";\n            case 1: return \"eip-2930\";\n            case 2: return \"eip-1559\";\n        }\n        return null;\n    }\n    /**\n     *  The ``to`` address for the transaction or ``null`` if the\n     *  transaction is an ``init`` transaction.\n     */\n    get to() { return this.#to; }\n    set to(value) {\n        this.#to = (value == null) ? null : getAddress(value);\n    }\n    /**\n     *  The transaction nonce.\n     */\n    get nonce() { return this.#nonce; }\n    set nonce(value) { this.#nonce = getNumber(value, \"value\"); }\n    /**\n     *  The gas limit.\n     */\n    get gasLimit() { return this.#gasLimit; }\n    set gasLimit(value) { this.#gasLimit = getBigInt(value); }\n    /**\n     *  The gas price.\n     *\n     *  On legacy networks this defines the fee that will be paid. On\n     *  EIP-1559 networks, this should be ``null``.\n     */\n    get gasPrice() {\n        const value = this.#gasPrice;\n        if (value == null && (this.type === 0 || this.type === 1)) {\n            return BN_0;\n        }\n        return value;\n    }\n    set gasPrice(value) {\n        this.#gasPrice = (value == null) ? null : getBigInt(value, \"gasPrice\");\n    }\n    /**\n     *  The maximum priority fee per unit of gas to pay. On legacy\n     *  networks this should be ``null``.\n     */\n    get maxPriorityFeePerGas() {\n        const value = this.#maxPriorityFeePerGas;\n        if (value == null) {\n            if (this.type === 2) {\n                return BN_0;\n            }\n            return null;\n        }\n        return value;\n    }\n    set maxPriorityFeePerGas(value) {\n        this.#maxPriorityFeePerGas = (value == null) ? null : getBigInt(value, \"maxPriorityFeePerGas\");\n    }\n    /**\n     *  The maximum total fee per unit of gas to pay. On legacy\n     *  networks this should be ``null``.\n     */\n    get maxFeePerGas() {\n        const value = this.#maxFeePerGas;\n        if (value == null) {\n            if (this.type === 2) {\n                return BN_0;\n            }\n            return null;\n        }\n        return value;\n    }\n    set maxFeePerGas(value) {\n        this.#maxFeePerGas = (value == null) ? null : getBigInt(value, \"maxFeePerGas\");\n    }\n    /**\n     *  The transaction data. For ``init`` transactions this is the\n     *  deployment code.\n     */\n    get data() { return this.#data; }\n    set data(value) { this.#data = hexlify(value); }\n    /**\n     *  The amount of ether to send in this transactions.\n     */\n    get value() { return this.#value; }\n    set value(value) {\n        this.#value = getBigInt(value, \"value\");\n    }\n    /**\n     *  The chain ID this transaction is valid on.\n     */\n    get chainId() { return this.#chainId; }\n    set chainId(value) { this.#chainId = getBigInt(value); }\n    /**\n     *  If signed, the signature for this transaction.\n     */\n    get signature() { return this.#sig || null; }\n    set signature(value) {\n        this.#sig = (value == null) ? null : Signature.from(value);\n    }\n    /**\n     *  The access list.\n     *\n     *  An access list permits discounted (but pre-paid) access to\n     *  bytecode and state variable access within contract execution.\n     */\n    get accessList() {\n        const value = this.#accessList || null;\n        if (value == null) {\n            if (this.type === 1 || this.type === 2) {\n                return [];\n            }\n            return null;\n        }\n        return value;\n    }\n    set accessList(value) {\n        this.#accessList = (value == null) ? null : accessListify(value);\n    }\n    /**\n     *  Creates a new Transaction with default values.\n     */\n    constructor() {\n        this.#type = null;\n        this.#to = null;\n        this.#nonce = 0;\n        this.#gasLimit = BigInt(0);\n        this.#gasPrice = null;\n        this.#maxPriorityFeePerGas = null;\n        this.#maxFeePerGas = null;\n        this.#data = \"0x\";\n        this.#value = BigInt(0);\n        this.#chainId = BigInt(0);\n        this.#sig = null;\n        this.#accessList = null;\n    }\n    /**\n     *  The transaction hash, if signed. Otherwise, ``null``.\n     */\n    get hash() {\n        if (this.signature == null) {\n            return null;\n        }\n        return keccak256(this.serialized);\n    }\n    /**\n     *  The pre-image hash of this transaction.\n     *\n     *  This is the digest that a [[Signer]] must sign to authorize\n     *  this transaction.\n     */\n    get unsignedHash() {\n        return keccak256(this.unsignedSerialized);\n    }\n    /**\n     *  The sending address, if signed. Otherwise, ``null``.\n     */\n    get from() {\n        if (this.signature == null) {\n            return null;\n        }\n        return recoverAddress(this.unsignedHash, this.signature);\n    }\n    /**\n     *  The public key of the sender, if signed. Otherwise, ``null``.\n     */\n    get fromPublicKey() {\n        if (this.signature == null) {\n            return null;\n        }\n        return SigningKey.recoverPublicKey(this.unsignedHash, this.signature);\n    }\n    /**\n     *  Returns true if signed.\n     *\n     *  This provides a Type Guard that properties requiring a signed\n     *  transaction are non-null.\n     */\n    isSigned() {\n        //isSigned(): this is SignedTransaction {\n        return this.signature != null;\n    }\n    /**\n     *  The serialized transaction.\n     *\n     *  This throws if the transaction is unsigned. For the pre-image,\n     *  use [[unsignedSerialized]].\n     */\n    get serialized() {\n        assert(this.signature != null, \"cannot serialize unsigned transaction; maybe you meant .unsignedSerialized\", \"UNSUPPORTED_OPERATION\", { operation: \".serialized\" });\n        switch (this.inferType()) {\n            case 0:\n                return _serializeLegacy(this, this.signature);\n            case 1:\n                return _serializeEip2930(this, this.signature);\n            case 2:\n                return _serializeEip1559(this, this.signature);\n        }\n        assert(false, \"unsupported transaction type\", \"UNSUPPORTED_OPERATION\", { operation: \".serialized\" });\n    }\n    /**\n     *  The transaction pre-image.\n     *\n     *  The hash of this is the digest which needs to be signed to\n     *  authorize this transaction.\n     */\n    get unsignedSerialized() {\n        switch (this.inferType()) {\n            case 0:\n                return _serializeLegacy(this);\n            case 1:\n                return _serializeEip2930(this);\n            case 2:\n                return _serializeEip1559(this);\n        }\n        assert(false, \"unsupported transaction type\", \"UNSUPPORTED_OPERATION\", { operation: \".unsignedSerialized\" });\n    }\n    /**\n     *  Return the most \"likely\" type; currently the highest\n     *  supported transaction type.\n     */\n    inferType() {\n        return (this.inferTypes().pop());\n    }\n    /**\n     *  Validates the explicit properties and returns a list of compatible\n     *  transaction types.\n     */\n    inferTypes() {\n        // Checks that there are no conflicting properties set\n        const hasGasPrice = this.gasPrice != null;\n        const hasFee = (this.maxFeePerGas != null || this.maxPriorityFeePerGas != null);\n        const hasAccessList = (this.accessList != null);\n        //if (hasGasPrice && hasFee) {\n        //    throw new Error(\"transaction cannot have gasPrice and maxFeePerGas\");\n        //}\n        if (this.maxFeePerGas != null && this.maxPriorityFeePerGas != null) {\n            assert(this.maxFeePerGas >= this.maxPriorityFeePerGas, \"priorityFee cannot be more than maxFee\", \"BAD_DATA\", { value: this });\n        }\n        //if (this.type === 2 && hasGasPrice) {\n        //    throw new Error(\"eip-1559 transaction cannot have gasPrice\");\n        //}\n        assert(!hasFee || (this.type !== 0 && this.type !== 1), \"transaction type cannot have maxFeePerGas or maxPriorityFeePerGas\", \"BAD_DATA\", { value: this });\n        assert(this.type !== 0 || !hasAccessList, \"legacy transaction cannot have accessList\", \"BAD_DATA\", { value: this });\n        const types = [];\n        // Explicit type\n        if (this.type != null) {\n            types.push(this.type);\n        }\n        else {\n            if (hasFee) {\n                types.push(2);\n            }\n            else if (hasGasPrice) {\n                types.push(1);\n                if (!hasAccessList) {\n                    types.push(0);\n                }\n            }\n            else if (hasAccessList) {\n                types.push(1);\n                types.push(2);\n            }\n            else {\n                types.push(0);\n                types.push(1);\n                types.push(2);\n            }\n        }\n        types.sort();\n        return types;\n    }\n    /**\n     *  Returns true if this transaction is a legacy transaction (i.e.\n     *  ``type === 0``).\n     *\n     *  This provides a Type Guard that the related properties are\n     *  non-null.\n     */\n    isLegacy() {\n        return (this.type === 0);\n    }\n    /**\n     *  Returns true if this transaction is berlin hardform transaction (i.e.\n     *  ``type === 1``).\n     *\n     *  This provides a Type Guard that the related properties are\n     *  non-null.\n     */\n    isBerlin() {\n        return (this.type === 1);\n    }\n    /**\n     *  Returns true if this transaction is london hardform transaction (i.e.\n     *  ``type === 2``).\n     *\n     *  This provides a Type Guard that the related properties are\n     *  non-null.\n     */\n    isLondon() {\n        return (this.type === 2);\n    }\n    /**\n     *  Create a copy of this transaciton.\n     */\n    clone() {\n        return Transaction.from(this);\n    }\n    /**\n     *  Return a JSON-friendly object.\n     */\n    toJSON() {\n        const s = (v) => {\n            if (v == null) {\n                return null;\n            }\n            return v.toString();\n        };\n        return {\n            type: this.type,\n            to: this.to,\n            //            from: this.from,\n            data: this.data,\n            nonce: this.nonce,\n            gasLimit: s(this.gasLimit),\n            gasPrice: s(this.gasPrice),\n            maxPriorityFeePerGas: s(this.maxPriorityFeePerGas),\n            maxFeePerGas: s(this.maxFeePerGas),\n            value: s(this.value),\n            chainId: s(this.chainId),\n            sig: this.signature ? this.signature.toJSON() : null,\n            accessList: this.accessList\n        };\n    }\n    /**\n     *  Create a **Transaction** from a serialized transaction or a\n     *  Transaction-like object.\n     */\n    static from(tx) {\n        if (tx == null) {\n            return new Transaction();\n        }\n        if (typeof (tx) === \"string\") {\n            const payload = getBytes(tx);\n            if (payload[0] >= 0x7f) { // @TODO: > vs >= ??\n                return Transaction.from(_parseLegacy(payload));\n            }\n            switch (payload[0]) {\n                case 1: return Transaction.from(_parseEip2930(payload));\n                case 2: return Transaction.from(_parseEip1559(payload));\n            }\n            assert(false, \"unsupported transaction type\", \"UNSUPPORTED_OPERATION\", { operation: \"from\" });\n        }\n        const result = new Transaction();\n        if (tx.type != null) {\n            result.type = tx.type;\n        }\n        if (tx.to != null) {\n            result.to = tx.to;\n        }\n        if (tx.nonce != null) {\n            result.nonce = tx.nonce;\n        }\n        if (tx.gasLimit != null) {\n            result.gasLimit = tx.gasLimit;\n        }\n        if (tx.gasPrice != null) {\n            result.gasPrice = tx.gasPrice;\n        }\n        if (tx.maxPriorityFeePerGas != null) {\n            result.maxPriorityFeePerGas = tx.maxPriorityFeePerGas;\n        }\n        if (tx.maxFeePerGas != null) {\n            result.maxFeePerGas = tx.maxFeePerGas;\n        }\n        if (tx.data != null) {\n            result.data = tx.data;\n        }\n        if (tx.value != null) {\n            result.value = tx.value;\n        }\n        if (tx.chainId != null) {\n            result.chainId = tx.chainId;\n        }\n        if (tx.signature != null) {\n            result.signature = Signature.from(tx.signature);\n        }\n        if (tx.accessList != null) {\n            result.accessList = tx.accessList;\n        }\n        if (tx.hash != null) {\n            assertArgument(result.isSigned(), \"unsigned transaction cannot define hash\", \"tx\", tx);\n            assertArgument(result.hash === tx.hash, \"hash mismatch\", \"tx\", tx);\n        }\n        if (tx.from != null) {\n            assertArgument(result.isSigned(), \"unsigned transaction cannot define from\", \"tx\", tx);\n            assertArgument(result.from.toLowerCase() === (tx.from || \"\").toLowerCase(), \"from mismatch\", \"tx\", tx);\n        }\n        return result;\n    }\n}\n//# sourceMappingURL=transaction.js.map","/**\n *  A constant for the zero address.\n *\n *  (**i.e.** ``\"0x0000000000000000000000000000000000000000\"``)\n */\nexport const ZeroAddress = \"0x0000000000000000000000000000000000000000\";\n//# sourceMappingURL=addresses.js.map","/**\n *  The [Base58 Encoding](link-base58) scheme allows a **numeric** value\n *  to be encoded as a compact string using a radix of 58 using only\n *  alpha-numeric characters. Confusingly similar characters are omitted\n *  (i.e. ``\"l0O\"``).\n *\n *  Note that Base58 encodes a **numeric** value, not arbitrary bytes,\n *  since any zero-bytes on the left would get removed. To mitigate this\n *  issue most schemes that use Base58 choose specific high-order values\n *  to ensure non-zero prefixes.\n *\n *  @_subsection: api/utils:Base58 Encoding [about-base58]\n */\nimport { getBytes } from \"./data.js\";\nimport { assertArgument } from \"./errors.js\";\nimport { toBigInt } from \"./maths.js\";\nconst Alphabet = \"123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz\";\nlet Lookup = null;\nfunction getAlpha(letter) {\n    if (Lookup == null) {\n        Lookup = {};\n        for (let i = 0; i < Alphabet.length; i++) {\n            Lookup[Alphabet[i]] = BigInt(i);\n        }\n    }\n    const result = Lookup[letter];\n    assertArgument(result != null, `invalid base58 value`, \"letter\", letter);\n    return result;\n}\nconst BN_0 = BigInt(0);\nconst BN_58 = BigInt(58);\n/**\n *  Encode %%value%% as a Base58-encoded string.\n */\nexport function encodeBase58(_value) {\n    let value = toBigInt(getBytes(_value));\n    let result = \"\";\n    while (value) {\n        result = Alphabet[Number(value % BN_58)] + result;\n        value /= BN_58;\n    }\n    return result;\n}\n/**\n *  Decode the Base58-encoded %%value%%.\n */\nexport function decodeBase58(value) {\n    let result = BN_0;\n    for (let i = 0; i < value.length; i++) {\n        result *= BN_58;\n        result += getAlpha(value[i]);\n    }\n    return result;\n}\n//# sourceMappingURL=base58.js.map","/**\n *  About ENS Resolver\n *\n *  @_section: api/providers/ens-resolver:ENS Resolver  [about-ens-rsolver]\n */\nimport { ZeroAddress } from \"../constants/index.js\";\nimport { Contract } from \"../contract/index.js\";\nimport { dnsEncode, namehash } from \"../hash/index.js\";\nimport { hexlify, toBeHex, defineProperties, encodeBase58, assert, assertArgument, isError, FetchRequest } from \"../utils/index.js\";\n// @TODO: This should use the fetch-data:ipfs gateway\n// Trim off the ipfs:// prefix and return the default gateway URL\nfunction getIpfsLink(link) {\n    if (link.match(/^ipfs:\\/\\/ipfs\\//i)) {\n        link = link.substring(12);\n    }\n    else if (link.match(/^ipfs:\\/\\//i)) {\n        link = link.substring(7);\n    }\n    else {\n        assertArgument(false, \"unsupported IPFS format\", \"link\", link);\n    }\n    return `https:/\\/gateway.ipfs.io/ipfs/${link}`;\n}\n;\n;\n/**\n *  A provider plugin super-class for processing multicoin address types.\n */\nexport class MulticoinProviderPlugin {\n    name;\n    constructor(name) {\n        defineProperties(this, { name });\n    }\n    connect(proivder) {\n        return this;\n    }\n    supportsCoinType(coinType) {\n        return false;\n    }\n    async encodeAddress(coinType, address) {\n        throw new Error(\"unsupported coin\");\n    }\n    async decodeAddress(coinType, data) {\n        throw new Error(\"unsupported coin\");\n    }\n}\nconst BasicMulticoinPluginId = \"org.ethers.plugins.provider.BasicMulticoin\";\n/**\n *  A basic multicoin provider plugin.\n */\nexport class BasicMulticoinProviderPlugin extends MulticoinProviderPlugin {\n    constructor() {\n        super(BasicMulticoinPluginId);\n    }\n}\nconst matcherIpfs = new RegExp(\"^(ipfs):/\\/(.*)$\", \"i\");\nconst matchers = [\n    new RegExp(\"^(https):/\\/(.*)$\", \"i\"),\n    new RegExp(\"^(data):(.*)$\", \"i\"),\n    matcherIpfs,\n    new RegExp(\"^eip155:[0-9]+/(erc[0-9]+):(.*)$\", \"i\"),\n];\n/**\n *  A connected object to a resolved ENS name resolver, which can be\n *  used to query additional details.\n */\nexport class EnsResolver {\n    /**\n     *  The connected provider.\n     */\n    provider;\n    /**\n     *  The address of the resolver.\n     */\n    address;\n    /**\n     *  The name this resovler was resolved against.\n     */\n    name;\n    // For EIP-2544 names, the ancestor that provided the resolver\n    #supports2544;\n    #resolver;\n    constructor(provider, address, name) {\n        defineProperties(this, { provider, address, name });\n        this.#supports2544 = null;\n        this.#resolver = new Contract(address, [\n            \"function supportsInterface(bytes4) view returns (bool)\",\n            \"function resolve(bytes, bytes) view returns (bytes)\",\n            \"function addr(bytes32) view returns (address)\",\n            \"function addr(bytes32, uint) view returns (address)\",\n            \"function text(bytes32, string) view returns (string)\",\n            \"function contenthash() view returns (bytes)\",\n        ], provider);\n    }\n    /**\n     *  Resolves to true if the resolver supports wildcard resolution.\n     */\n    async supportsWildcard() {\n        if (this.#supports2544 == null) {\n            this.#supports2544 = (async () => {\n                try {\n                    return await this.#resolver.supportsInterface(\"0x9061b923\");\n                }\n                catch (error) {\n                    // Wildcard resolvers must understand supportsInterface\n                    // and return true.\n                    if (isError(error, \"CALL_EXCEPTION\")) {\n                        return false;\n                    }\n                    // Let future attempts try again...\n                    this.#supports2544 = null;\n                    throw error;\n                }\n            })();\n        }\n        return await this.#supports2544;\n    }\n    async #fetch(funcName, params) {\n        params = (params || []).slice();\n        const iface = this.#resolver.interface;\n        // The first parameters is always the nodehash\n        params.unshift(namehash(this.name));\n        let fragment = null;\n        if (await this.supportsWildcard()) {\n            fragment = iface.getFunction(funcName);\n            assert(fragment, \"missing fragment\", \"UNKNOWN_ERROR\", {\n                info: { funcName }\n            });\n            params = [\n                dnsEncode(this.name),\n                iface.encodeFunctionData(fragment, params)\n            ];\n            funcName = \"resolve(bytes,bytes)\";\n        }\n        params.push({\n            ccipReadEnable: true\n        });\n        try {\n            const result = await this.#resolver[funcName](...params);\n            if (fragment) {\n                return iface.decodeFunctionResult(fragment, result)[0];\n            }\n            return result;\n        }\n        catch (error) {\n            if (!isError(error, \"CALL_EXCEPTION\")) {\n                throw error;\n            }\n        }\n        return null;\n    }\n    /**\n     *  Resolves to the address for %%coinType%% or null if the\n     *  provided %%coinType%% has not been configured.\n     */\n    async getAddress(coinType) {\n        if (coinType == null) {\n            coinType = 60;\n        }\n        if (coinType === 60) {\n            try {\n                const result = await this.#fetch(\"addr(bytes32)\");\n                // No address\n                if (result == null || result === ZeroAddress) {\n                    return null;\n                }\n                return result;\n            }\n            catch (error) {\n                if (isError(error, \"CALL_EXCEPTION\")) {\n                    return null;\n                }\n                throw error;\n            }\n        }\n        let coinPlugin = null;\n        for (const plugin of this.provider.plugins) {\n            if (!(plugin instanceof MulticoinProviderPlugin)) {\n                continue;\n            }\n            if (plugin.supportsCoinType(coinType)) {\n                coinPlugin = plugin;\n                break;\n            }\n        }\n        if (coinPlugin == null) {\n            return null;\n        }\n        // keccak256(\"addr(bytes32,uint256\")\n        const data = await this.#fetch(\"addr(bytes32,uint)\", [coinType]);\n        // No address\n        if (data == null || data === \"0x\") {\n            return null;\n        }\n        // Compute the address\n        const address = await coinPlugin.encodeAddress(coinType, data);\n        if (address != null) {\n            return address;\n        }\n        assert(false, `invalid coin data`, \"UNSUPPORTED_OPERATION\", {\n            operation: `getAddress(${coinType})`,\n            info: { coinType, data }\n        });\n    }\n    /**\n     *  Resovles to the EIP-643 text record for %%key%%, or ``null``\n     *  if unconfigured.\n     */\n    async getText(key) {\n        const data = await this.#fetch(\"text(bytes32,string)\", [key]);\n        if (data == null || data === \"0x\") {\n            return null;\n        }\n        return data;\n    }\n    /**\n     *  Rsolves to the content-hash or ``null`` if unconfigured.\n     */\n    async getContentHash() {\n        // keccak256(\"contenthash()\")\n        const data = await this.#fetch(\"contenthash()\");\n        // No contenthash\n        if (data == null || data === \"0x\") {\n            return null;\n        }\n        // IPFS (CID: 1, Type: 70=DAG-PB, 72=libp2p-key)\n        const ipfs = data.match(/^0x(e3010170|e5010172)(([0-9a-f][0-9a-f])([0-9a-f][0-9a-f])([0-9a-f]*))$/);\n        if (ipfs) {\n            const scheme = (ipfs[1] === \"e3010170\") ? \"ipfs\" : \"ipns\";\n            const length = parseInt(ipfs[4], 16);\n            if (ipfs[5].length === length * 2) {\n                return `${scheme}:/\\/${encodeBase58(\"0x\" + ipfs[2])}`;\n            }\n        }\n        // Swarm (CID: 1, Type: swarm-manifest; hash/length hard-coded to keccak256/32)\n        const swarm = data.match(/^0xe40101fa011b20([0-9a-f]*)$/);\n        if (swarm && swarm[1].length === 64) {\n            return `bzz:/\\/${swarm[1]}`;\n        }\n        assert(false, `invalid or unsupported content hash data`, \"UNSUPPORTED_OPERATION\", {\n            operation: \"getContentHash()\",\n            info: { data }\n        });\n    }\n    /**\n     *  Resolves to the avatar url or ``null`` if the avatar is either\n     *  unconfigured or incorrectly configured (e.g. references an NFT\n     *  not owned by the address).\n     *\n     *  If diagnosing issues with configurations, the [[_getAvatar]]\n     *  method may be useful.\n     */\n    async getAvatar() {\n        const avatar = await this._getAvatar();\n        return avatar.url;\n    }\n    /**\n     *  When resolving an avatar, there are many steps involved, such\n     *  fetching metadata and possibly validating ownership of an\n     *  NFT.\n     *\n     *  This method can be used to examine each step and the value it\n     *  was working from.\n     */\n    async _getAvatar() {\n        const linkage = [{ type: \"name\", value: this.name }];\n        try {\n            // test data for ricmoo.eth\n            //const avatar = \"eip155:1/erc721:0x265385c7f4132228A0d54EB1A9e7460b91c0cC68/29233\";\n            const avatar = await this.getText(\"avatar\");\n            if (avatar == null) {\n                linkage.push({ type: \"!avatar\", value: \"\" });\n                return { url: null, linkage };\n            }\n            linkage.push({ type: \"avatar\", value: avatar });\n            for (let i = 0; i < matchers.length; i++) {\n                const match = avatar.match(matchers[i]);\n                if (match == null) {\n                    continue;\n                }\n                const scheme = match[1].toLowerCase();\n                switch (scheme) {\n                    case \"https\":\n                    case \"data\":\n                        linkage.push({ type: \"url\", value: avatar });\n                        return { linkage, url: avatar };\n                    case \"ipfs\": {\n                        const url = getIpfsLink(avatar);\n                        linkage.push({ type: \"ipfs\", value: avatar });\n                        linkage.push({ type: \"url\", value: url });\n                        return { linkage, url };\n                    }\n                    case \"erc721\":\n                    case \"erc1155\": {\n                        // Depending on the ERC type, use tokenURI(uint256) or url(uint256)\n                        const selector = (scheme === \"erc721\") ? \"tokenURI(uint256)\" : \"uri(uint256)\";\n                        linkage.push({ type: scheme, value: avatar });\n                        // The owner of this name\n                        const owner = await this.getAddress();\n                        if (owner == null) {\n                            linkage.push({ type: \"!owner\", value: \"\" });\n                            return { url: null, linkage };\n                        }\n                        const comps = (match[2] || \"\").split(\"/\");\n                        if (comps.length !== 2) {\n                            linkage.push({ type: `!${scheme}caip`, value: (match[2] || \"\") });\n                            return { url: null, linkage };\n                        }\n                        const tokenId = comps[1];\n                        const contract = new Contract(comps[0], [\n                            // ERC-721\n                            \"function tokenURI(uint) view returns (string)\",\n                            \"function ownerOf(uint) view returns (address)\",\n                            // ERC-1155\n                            \"function uri(uint) view returns (string)\",\n                            \"function balanceOf(address, uint256) view returns (uint)\"\n                        ], this.provider);\n                        // Check that this account owns the token\n                        if (scheme === \"erc721\") {\n                            const tokenOwner = await contract.ownerOf(tokenId);\n                            if (owner !== tokenOwner) {\n                                linkage.push({ type: \"!owner\", value: tokenOwner });\n                                return { url: null, linkage };\n                            }\n                            linkage.push({ type: \"owner\", value: tokenOwner });\n                        }\n                        else if (scheme === \"erc1155\") {\n                            const balance = await contract.balanceOf(owner, tokenId);\n                            if (!balance) {\n                                linkage.push({ type: \"!balance\", value: \"0\" });\n                                return { url: null, linkage };\n                            }\n                            linkage.push({ type: \"balance\", value: balance.toString() });\n                        }\n                        // Call the token contract for the metadata URL\n                        let metadataUrl = await contract[selector](tokenId);\n                        if (metadataUrl == null || metadataUrl === \"0x\") {\n                            linkage.push({ type: \"!metadata-url\", value: \"\" });\n                            return { url: null, linkage };\n                        }\n                        linkage.push({ type: \"metadata-url-base\", value: metadataUrl });\n                        // ERC-1155 allows a generic {id} in the URL\n                        if (scheme === \"erc1155\") {\n                            metadataUrl = metadataUrl.replace(\"{id}\", toBeHex(tokenId, 32).substring(2));\n                            linkage.push({ type: \"metadata-url-expanded\", value: metadataUrl });\n                        }\n                        // Transform IPFS metadata links\n                        if (metadataUrl.match(/^ipfs:/i)) {\n                            metadataUrl = getIpfsLink(metadataUrl);\n                        }\n                        linkage.push({ type: \"metadata-url\", value: metadataUrl });\n                        // Get the token metadata\n                        let metadata = {};\n                        const response = await (new FetchRequest(metadataUrl)).send();\n                        response.assertOk();\n                        try {\n                            metadata = response.bodyJson;\n                        }\n                        catch (error) {\n                            try {\n                                linkage.push({ type: \"!metadata\", value: response.bodyText });\n                            }\n                            catch (error) {\n                                const bytes = response.body;\n                                if (bytes) {\n                                    linkage.push({ type: \"!metadata\", value: hexlify(bytes) });\n                                }\n                                return { url: null, linkage };\n                            }\n                            return { url: null, linkage };\n                        }\n                        if (!metadata) {\n                            linkage.push({ type: \"!metadata\", value: \"\" });\n                            return { url: null, linkage };\n                        }\n                        linkage.push({ type: \"metadata\", value: JSON.stringify(metadata) });\n                        // Pull the image URL out\n                        let imageUrl = metadata.image;\n                        if (typeof (imageUrl) !== \"string\") {\n                            linkage.push({ type: \"!imageUrl\", value: \"\" });\n                            return { url: null, linkage };\n                        }\n                        if (imageUrl.match(/^(https:\\/\\/|data:)/i)) {\n                            // Allow\n                        }\n                        else {\n                            // Transform IPFS link to gateway\n                            const ipfs = imageUrl.match(matcherIpfs);\n                            if (ipfs == null) {\n                                linkage.push({ type: \"!imageUrl-ipfs\", value: imageUrl });\n                                return { url: null, linkage };\n                            }\n                            linkage.push({ type: \"imageUrl-ipfs\", value: imageUrl });\n                            imageUrl = getIpfsLink(imageUrl);\n                        }\n                        linkage.push({ type: \"url\", value: imageUrl });\n                        return { linkage, url: imageUrl };\n                    }\n                }\n            }\n        }\n        catch (error) { }\n        return { linkage, url: null };\n    }\n    static async getEnsAddress(provider) {\n        const network = await provider.getNetwork();\n        const ensPlugin = network.getPlugin(\"org.ethers.plugins.network.Ens\");\n        // No ENS...\n        assert(ensPlugin, \"network does not support ENS\", \"UNSUPPORTED_OPERATION\", {\n            operation: \"getEnsAddress\", info: { network }\n        });\n        return ensPlugin.address;\n    }\n    static async #getResolver(provider, name) {\n        const ensAddr = await EnsResolver.getEnsAddress(provider);\n        try {\n            const contract = new Contract(ensAddr, [\n                \"function resolver(bytes32) view returns (address)\"\n            ], provider);\n            const addr = await contract.resolver(namehash(name), {\n                enableCcipRead: true\n            });\n            if (addr === ZeroAddress) {\n                return null;\n            }\n            return addr;\n        }\n        catch (error) {\n            // ENS registry cannot throw errors on resolver(bytes32),\n            // so probably a link error\n            throw error;\n        }\n        return null;\n    }\n    /**\n     *  Resolve to the ENS resolver for %%name%% using %%provider%% or\n     *  ``null`` if unconfigured.\n     */\n    static async fromName(provider, name) {\n        let currentName = name;\n        while (true) {\n            if (currentName === \"\" || currentName === \".\") {\n                return null;\n            }\n            // Optimization since the eth node cannot change and does\n            // not have a wildcar resolver\n            if (name !== \"eth\" && currentName === \"eth\") {\n                return null;\n            }\n            // Check the current node for a resolver\n            const addr = await EnsResolver.#getResolver(provider, currentName);\n            // Found a resolver!\n            if (addr != null) {\n                const resolver = new EnsResolver(provider, addr, name);\n                // Legacy resolver found, using EIP-2544 so it isn't safe to use\n                if (currentName !== name && !(await resolver.supportsWildcard())) {\n                    return null;\n                }\n                return resolver;\n            }\n            // Get the parent node\n            currentName = currentName.split(\".\").slice(1).join(\".\");\n        }\n    }\n}\n//# sourceMappingURL=ens-resolver.js.map","import { keccak256 } from \"../crypto/index.js\";\nimport { concat, dataSlice, getBigInt, getBytes, encodeRlp, assertArgument } from \"../utils/index.js\";\nimport { getAddress } from \"./address.js\";\n// http://ethereum.stackexchange.com/questions/760/how-is-the-address-of-an-ethereum-contract-computed\n/**\n *  Returns the address that would result from a ``CREATE`` for %%tx%%.\n *\n *  This can be used to compute the address a contract will be\n *  deployed to by an EOA when sending a deployment transaction (i.e.\n *  when the ``to`` address is ``null``).\n *\n *  This can also be used to compute the address a contract will be\n *  deployed to by a contract, by using the contract's address as the\n *  ``to`` and the contract's nonce.\n *\n *  @example\n *    from = \"0x8ba1f109551bD432803012645Ac136ddd64DBA72\";\n *    nonce = 5;\n *\n *    getCreateAddress({ from, nonce });\n *    //_result:\n */\nexport function getCreateAddress(tx) {\n    const from = getAddress(tx.from);\n    const nonce = getBigInt(tx.nonce, \"tx.nonce\");\n    let nonceHex = nonce.toString(16);\n    if (nonceHex === \"0\") {\n        nonceHex = \"0x\";\n    }\n    else if (nonceHex.length % 2) {\n        nonceHex = \"0x0\" + nonceHex;\n    }\n    else {\n        nonceHex = \"0x\" + nonceHex;\n    }\n    return getAddress(dataSlice(keccak256(encodeRlp([from, nonceHex])), 12));\n}\n/**\n *  Returns the address that would result from a ``CREATE2`` operation\n *  with the given %%from%%, %%salt%% and %%initCodeHash%%.\n *\n *  To compute the %%initCodeHash%% from a contract's init code, use\n *  the [[keccak256]] function.\n *\n *  For a quick overview and example of ``CREATE2``, see [[link-ricmoo-wisps]].\n *\n *  @example\n *    // The address of the contract\n *    from = \"0x8ba1f109551bD432803012645Ac136ddd64DBA72\"\n *\n *    // The salt\n *    salt = id(\"HelloWorld\")\n *\n *    // The hash of the initCode\n *    initCode = \"0x6394198df16000526103ff60206004601c335afa6040516060f3\";\n *    initCodeHash = keccak256(initCode)\n *\n *    getCreate2Address(from, salt, initCodeHash)\n *    //_result:\n */\nexport function getCreate2Address(_from, _salt, _initCodeHash) {\n    const from = getAddress(_from);\n    const salt = getBytes(_salt, \"salt\");\n    const initCodeHash = getBytes(_initCodeHash, \"initCodeHash\");\n    assertArgument(salt.length === 32, \"salt must be 32 bytes\", \"salt\", _salt);\n    assertArgument(initCodeHash.length === 32, \"initCodeHash must be 32 bytes\", \"initCodeHash\", _initCodeHash);\n    return getAddress(dataSlice(keccak256(concat([\"0xff\", from, salt, initCodeHash])), 12));\n}\n//# sourceMappingURL=contract-address.js.map","/**\n *  @_ignore\n */\nimport { getAddress, getCreateAddress } from \"../address/index.js\";\nimport { Signature } from \"../crypto/index.js\";\nimport { accessListify } from \"../transaction/index.js\";\nimport { getBigInt, getNumber, hexlify, isHexString, zeroPadValue, assert, assertArgument } from \"../utils/index.js\";\nconst BN_0 = BigInt(0);\nexport function allowNull(format, nullValue) {\n    return (function (value) {\n        if (value == null) {\n            return nullValue;\n        }\n        return format(value);\n    });\n}\nexport function arrayOf(format) {\n    return ((array) => {\n        if (!Array.isArray(array)) {\n            throw new Error(\"not an array\");\n        }\n        return array.map((i) => format(i));\n    });\n}\n// Requires an object which matches a fleet of other formatters\n// Any FormatFunc may return `undefined` to have the value omitted\n// from the result object. Calls preserve `this`.\nexport function object(format, altNames) {\n    return ((value) => {\n        const result = {};\n        for (const key in format) {\n            let srcKey = key;\n            if (altNames && key in altNames && !(srcKey in value)) {\n                for (const altKey of altNames[key]) {\n                    if (altKey in value) {\n                        srcKey = altKey;\n                        break;\n                    }\n                }\n            }\n            try {\n                const nv = format[key](value[srcKey]);\n                if (nv !== undefined) {\n                    result[key] = nv;\n                }\n            }\n            catch (error) {\n                const message = (error instanceof Error) ? error.message : \"not-an-error\";\n                assert(false, `invalid value for value.${key} (${message})`, \"BAD_DATA\", { value });\n            }\n        }\n        return result;\n    });\n}\nexport function formatBoolean(value) {\n    switch (value) {\n        case true:\n        case \"true\":\n            return true;\n        case false:\n        case \"false\":\n            return false;\n    }\n    assertArgument(false, `invalid boolean; ${JSON.stringify(value)}`, \"value\", value);\n}\nexport function formatData(value) {\n    assertArgument(isHexString(value, true), \"invalid data\", \"value\", value);\n    return value;\n}\nexport function formatHash(value) {\n    assertArgument(isHexString(value, 32), \"invalid hash\", \"value\", value);\n    return value;\n}\nexport function formatUint256(value) {\n    if (!isHexString(value)) {\n        throw new Error(\"invalid uint256\");\n    }\n    return zeroPadValue(value, 32);\n}\nconst _formatLog = object({\n    address: getAddress,\n    blockHash: formatHash,\n    blockNumber: getNumber,\n    data: formatData,\n    index: getNumber,\n    removed: formatBoolean,\n    topics: arrayOf(formatHash),\n    transactionHash: formatHash,\n    transactionIndex: getNumber,\n}, {\n    index: [\"logIndex\"]\n});\nexport function formatLog(value) {\n    return _formatLog(value);\n}\nconst _formatBlock = object({\n    hash: allowNull(formatHash),\n    parentHash: formatHash,\n    number: getNumber,\n    timestamp: getNumber,\n    nonce: allowNull(formatData),\n    difficulty: getBigInt,\n    gasLimit: getBigInt,\n    gasUsed: getBigInt,\n    miner: allowNull(getAddress),\n    extraData: formatData,\n    baseFeePerGas: allowNull(getBigInt)\n});\nexport function formatBlock(value) {\n    const result = _formatBlock(value);\n    result.transactions = value.transactions.map((tx) => {\n        if (typeof (tx) === \"string\") {\n            return tx;\n        }\n        return formatTransactionResponse(tx);\n    });\n    return result;\n}\nconst _formatReceiptLog = object({\n    transactionIndex: getNumber,\n    blockNumber: getNumber,\n    transactionHash: formatHash,\n    address: getAddress,\n    topics: arrayOf(formatHash),\n    data: formatData,\n    index: getNumber,\n    blockHash: formatHash,\n}, {\n    index: [\"logIndex\"]\n});\nexport function formatReceiptLog(value) {\n    return _formatReceiptLog(value);\n}\nconst _formatTransactionReceipt = object({\n    to: allowNull(getAddress, null),\n    from: allowNull(getAddress, null),\n    contractAddress: allowNull(getAddress, null),\n    // should be allowNull(hash), but broken-EIP-658 support is handled in receipt\n    index: getNumber,\n    root: allowNull(hexlify),\n    gasUsed: getBigInt,\n    logsBloom: allowNull(formatData),\n    blockHash: formatHash,\n    hash: formatHash,\n    logs: arrayOf(formatReceiptLog),\n    blockNumber: getNumber,\n    //confirmations: allowNull(getNumber, null),\n    cumulativeGasUsed: getBigInt,\n    effectiveGasPrice: allowNull(getBigInt),\n    status: allowNull(getNumber),\n    type: getNumber\n}, {\n    effectiveGasPrice: [\"gasPrice\"],\n    hash: [\"transactionHash\"],\n    index: [\"transactionIndex\"],\n});\nexport function formatTransactionReceipt(value) {\n    return _formatTransactionReceipt(value);\n}\nexport function formatTransactionResponse(value) {\n    // Some clients (TestRPC) do strange things like return 0x0 for the\n    // 0 address; correct this to be a real address\n    if (value.to && getBigInt(value.to) === BN_0) {\n        value.to = \"0x0000000000000000000000000000000000000000\";\n    }\n    const result = object({\n        hash: formatHash,\n        type: (value) => {\n            if (value === \"0x\" || value == null) {\n                return 0;\n            }\n            return getNumber(value);\n        },\n        accessList: allowNull(accessListify, null),\n        blockHash: allowNull(formatHash, null),\n        blockNumber: allowNull(getNumber, null),\n        transactionIndex: allowNull(getNumber, null),\n        //confirmations: allowNull(getNumber, null),\n        from: getAddress,\n        // either (gasPrice) or (maxPriorityFeePerGas + maxFeePerGas) must be set\n        gasPrice: allowNull(getBigInt),\n        maxPriorityFeePerGas: allowNull(getBigInt),\n        maxFeePerGas: allowNull(getBigInt),\n        gasLimit: getBigInt,\n        to: allowNull(getAddress, null),\n        value: getBigInt,\n        nonce: getNumber,\n        data: formatData,\n        creates: allowNull(getAddress, null),\n        chainId: allowNull(getBigInt, null)\n    }, {\n        data: [\"input\"],\n        gasLimit: [\"gas\"]\n    })(value);\n    // If to and creates are empty, populate the creates from the value\n    if (result.to == null && result.creates == null) {\n        result.creates = getCreateAddress(result);\n    }\n    // @TODO: Check fee data\n    // Add an access list to supported transaction types\n    if ((value.type === 1 || value.type === 2) && value.accessList == null) {\n        result.accessList = [];\n    }\n    // Compute the signature\n    if (value.signature) {\n        result.signature = Signature.from(value.signature);\n    }\n    else {\n        result.signature = Signature.from(value);\n    }\n    // Some backends omit ChainId on legacy transactions, but we can compute it\n    if (result.chainId == null) {\n        const chainId = result.signature.legacyChainId;\n        if (chainId != null) {\n            result.chainId = chainId;\n        }\n    }\n    // @TODO: check chainID\n    /*\n    if (value.chainId != null) {\n        let chainId = value.chainId;\n\n        if (isHexString(chainId)) {\n            chainId = BigNumber.from(chainId).toNumber();\n        }\n\n        result.chainId = chainId;\n\n    } else {\n        let chainId = value.networkId;\n\n        // geth-etc returns chainId\n        if (chainId == null && result.v == null) {\n            chainId = value.chainId;\n        }\n\n        if (isHexString(chainId)) {\n            chainId = BigNumber.from(chainId).toNumber();\n        }\n\n        if (typeof(chainId) !== \"number\" && result.v != null) {\n            chainId = (result.v - 35) / 2;\n            if (chainId < 0) { chainId = 0; }\n            chainId = parseInt(chainId);\n        }\n\n        if (typeof(chainId) !== \"number\") { chainId = 0; }\n\n        result.chainId = chainId;\n    }\n    */\n    // 0x0000... should actually be null\n    if (result.blockHash && getBigInt(result.blockHash) === BN_0) {\n        result.blockHash = null;\n    }\n    return result;\n}\n//# sourceMappingURL=format.js.map","import { defineProperties } from \"../utils/properties.js\";\nimport { assertArgument } from \"../utils/index.js\";\nconst EnsAddress = \"0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e\";\nexport class NetworkPlugin {\n    name;\n    constructor(name) {\n        defineProperties(this, { name });\n    }\n    clone() {\n        return new NetworkPlugin(this.name);\n    }\n}\nexport class GasCostPlugin extends NetworkPlugin {\n    effectiveBlock;\n    txBase;\n    txCreate;\n    txDataZero;\n    txDataNonzero;\n    txAccessListStorageKey;\n    txAccessListAddress;\n    constructor(effectiveBlock, costs) {\n        if (effectiveBlock == null) {\n            effectiveBlock = 0;\n        }\n        super(`org.ethers.network.plugins.GasCost#${(effectiveBlock || 0)}`);\n        const props = { effectiveBlock };\n        function set(name, nullish) {\n            let value = (costs || {})[name];\n            if (value == null) {\n                value = nullish;\n            }\n            assertArgument(typeof (value) === \"number\", `invalud value for ${name}`, \"costs\", costs);\n            props[name] = value;\n        }\n        set(\"txBase\", 21000);\n        set(\"txCreate\", 32000);\n        set(\"txDataZero\", 4);\n        set(\"txDataNonzero\", 16);\n        set(\"txAccessListStorageKey\", 1900);\n        set(\"txAccessListAddress\", 2400);\n        defineProperties(this, props);\n    }\n    clone() {\n        return new GasCostPlugin(this.effectiveBlock, this);\n    }\n}\n// Networks shoudl use this plugin to specify the contract address\n// and network necessary to resolve ENS names.\nexport class EnsPlugin extends NetworkPlugin {\n    // The ENS contract address\n    address;\n    // The network ID that the ENS contract lives on\n    targetNetwork;\n    constructor(address, targetNetwork) {\n        super(\"org.ethers.plugins.network.Ens\");\n        defineProperties(this, {\n            address: (address || EnsAddress),\n            targetNetwork: ((targetNetwork == null) ? 1 : targetNetwork)\n        });\n    }\n    clone() {\n        return new EnsPlugin(this.address, this.targetNetwork);\n    }\n}\nexport class FeeDataNetworkPlugin extends NetworkPlugin {\n    #feeDataFunc;\n    get feeDataFunc() {\n        return this.#feeDataFunc;\n    }\n    constructor(feeDataFunc) {\n        super(\"org.ethers.plugins.network.FeeData\");\n        this.#feeDataFunc = feeDataFunc;\n    }\n    async getFeeData(provider) {\n        return await this.#feeDataFunc(provider);\n    }\n    clone() {\n        return new FeeDataNetworkPlugin(this.#feeDataFunc);\n    }\n}\n/*\nexport class CustomBlockNetworkPlugin extends NetworkPlugin {\n    readonly #blockFunc: (provider: Provider, block: BlockParams<string>) => Block<string>;\n    readonly #blockWithTxsFunc: (provider: Provider, block: BlockParams<TransactionResponseParams>) => Block<TransactionResponse>;\n\n    constructor(blockFunc: (provider: Provider, block: BlockParams<string>) => Block<string>, blockWithTxsFunc: (provider: Provider, block: BlockParams<TransactionResponseParams>) => Block<TransactionResponse>) {\n        super(\"org.ethers.network-plugins.custom-block\");\n        this.#blockFunc = blockFunc;\n        this.#blockWithTxsFunc = blockWithTxsFunc;\n    }\n\n    async getBlock(provider: Provider, block: BlockParams<string>): Promise<Block<string>> {\n        return await this.#blockFunc(provider, block);\n    }\n\n    async getBlockions(provider: Provider, block: BlockParams<TransactionResponseParams>): Promise<Block<TransactionResponse>> {\n        return await this.#blockWithTxsFunc(provider, block);\n    }\n\n    clone(): CustomBlockNetworkPlugin {\n        return new CustomBlockNetworkPlugin(this.#blockFunc, this.#blockWithTxsFunc);\n    }\n}\n*/\n//# sourceMappingURL=plugins-network.js.map","/**\n *  About networks\n *\n *  @_subsection: api/providers:Networks  [networks]\n */\nimport { accessListify } from \"../transaction/index.js\";\nimport { getBigInt, assertArgument } from \"../utils/index.js\";\nimport { EnsPlugin, GasCostPlugin } from \"./plugins-network.js\";\n/* * * *\n// Networks which operation against an L2 can use this plugin to\n// specify how to access L1, for the purpose of resolving ENS,\n// for example.\nexport class LayerOneConnectionPlugin extends NetworkPlugin {\n    readonly provider!: Provider;\n// @TODO: Rename to ChainAccess and allow for connecting to any chain\n    constructor(provider: Provider) {\n        super(\"org.ethers.plugins.layer-one-connection\");\n        defineProperties<LayerOneConnectionPlugin>(this, { provider });\n    }\n\n    clone(): LayerOneConnectionPlugin {\n        return new LayerOneConnectionPlugin(this.provider);\n    }\n}\n*/\n/* * * *\nexport class PriceOraclePlugin extends NetworkPlugin {\n    readonly address!: string;\n\n    constructor(address: string) {\n        super(\"org.ethers.plugins.price-oracle\");\n        defineProperties<PriceOraclePlugin>(this, { address });\n    }\n\n    clone(): PriceOraclePlugin {\n        return new PriceOraclePlugin(this.address);\n    }\n}\n*/\n// Networks or clients with a higher need for security (such as clients\n// that may automatically make CCIP requests without user interaction)\n// can use this plugin to anonymize requests or intercept CCIP requests\n// to notify and/or receive authorization from the user\n/* * * *\nexport type FetchDataFunc = (req: Frozen<FetchRequest>) => Promise<FetchRequest>;\nexport class CcipPreflightPlugin extends NetworkPlugin {\n    readonly fetchData!: FetchDataFunc;\n\n    constructor(fetchData: FetchDataFunc) {\n        super(\"org.ethers.plugins.ccip-preflight\");\n        defineProperties<CcipPreflightPlugin>(this, { fetchData });\n    }\n\n    clone(): CcipPreflightPlugin {\n        return new CcipPreflightPlugin(this.fetchData);\n    }\n}\n*/\nconst Networks = new Map();\n// @TODO: Add a _ethersNetworkObj variable to better detect network ovjects\nexport class Network {\n    #name;\n    #chainId;\n    #plugins;\n    constructor(name, chainId) {\n        this.#name = name;\n        this.#chainId = getBigInt(chainId);\n        this.#plugins = new Map();\n    }\n    toJSON() {\n        return { name: this.name, chainId: this.chainId };\n    }\n    get name() { return this.#name; }\n    set name(value) { this.#name = value; }\n    get chainId() { return this.#chainId; }\n    set chainId(value) { this.#chainId = getBigInt(value, \"chainId\"); }\n    get plugins() {\n        return Array.from(this.#plugins.values());\n    }\n    attachPlugin(plugin) {\n        if (this.#plugins.get(plugin.name)) {\n            throw new Error(`cannot replace existing plugin: ${plugin.name} `);\n        }\n        this.#plugins.set(plugin.name, plugin.clone());\n        return this;\n    }\n    getPlugin(name) {\n        return (this.#plugins.get(name)) || null;\n    }\n    // Gets a list of Plugins which match basename, ignoring any fragment\n    getPlugins(basename) {\n        return (this.plugins.filter((p) => (p.name.split(\"#\")[0] === basename)));\n    }\n    clone() {\n        const clone = new Network(this.name, this.chainId);\n        this.plugins.forEach((plugin) => {\n            clone.attachPlugin(plugin.clone());\n        });\n        return clone;\n    }\n    computeIntrinsicGas(tx) {\n        const costs = this.getPlugin(\"org.ethers.plugins.network.GasCost\") || (new GasCostPlugin());\n        let gas = costs.txBase;\n        if (tx.to == null) {\n            gas += costs.txCreate;\n        }\n        if (tx.data) {\n            for (let i = 2; i < tx.data.length; i += 2) {\n                if (tx.data.substring(i, i + 2) === \"00\") {\n                    gas += costs.txDataZero;\n                }\n                else {\n                    gas += costs.txDataNonzero;\n                }\n            }\n        }\n        if (tx.accessList) {\n            const accessList = accessListify(tx.accessList);\n            for (const addr in accessList) {\n                gas += costs.txAccessListAddress + costs.txAccessListStorageKey * accessList[addr].storageKeys.length;\n            }\n        }\n        return gas;\n    }\n    /**\n     *  Returns a new Network for the %%network%% name or chainId.\n     */\n    static from(network) {\n        injectCommonNetworks();\n        // Default network\n        if (network == null) {\n            return Network.from(\"mainnet\");\n        }\n        // Canonical name or chain ID\n        if (typeof (network) === \"number\") {\n            network = BigInt(network);\n        }\n        if (typeof (network) === \"string\" || typeof (network) === \"bigint\") {\n            const networkFunc = Networks.get(network);\n            if (networkFunc) {\n                return networkFunc();\n            }\n            if (typeof (network) === \"bigint\") {\n                return new Network(\"unknown\", network);\n            }\n            assertArgument(false, \"unknown network\", \"network\", network);\n        }\n        // Clonable with network-like abilities\n        if (typeof (network.clone) === \"function\") {\n            const clone = network.clone();\n            //if (typeof(network.name) !== \"string\" || typeof(network.chainId) !== \"number\") {\n            //}\n            return clone;\n        }\n        // Networkish\n        if (typeof (network) === \"object\") {\n            assertArgument(typeof (network.name) === \"string\" && typeof (network.chainId) === \"number\", \"invalid network object name or chainId\", \"network\", network);\n            const custom = new Network((network.name), (network.chainId));\n            if (network.ensAddress || network.ensNetwork != null) {\n                custom.attachPlugin(new EnsPlugin(network.ensAddress, network.ensNetwork));\n            }\n            //if ((<any>network).layerOneConnection) {\n            //    custom.attachPlugin(new LayerOneConnectionPlugin((<any>network).layerOneConnection));\n            //}\n            return custom;\n        }\n        assertArgument(false, \"invalid network\", \"network\", network);\n    }\n    /**\n     *  Register %%nameOrChainId%% with a function which returns\n     *  an instance of a Network representing that chain.\n     */\n    static register(nameOrChainId, networkFunc) {\n        if (typeof (nameOrChainId) === \"number\") {\n            nameOrChainId = BigInt(nameOrChainId);\n        }\n        const existing = Networks.get(nameOrChainId);\n        if (existing) {\n            assertArgument(false, `conflicting network for ${JSON.stringify(existing.name)}`, \"nameOrChainId\", nameOrChainId);\n        }\n        Networks.set(nameOrChainId, networkFunc);\n    }\n}\n// See: https://chainlist.org\nlet injected = false;\nfunction injectCommonNetworks() {\n    if (injected) {\n        return;\n    }\n    injected = true;\n    /// Register popular Ethereum networks\n    function registerEth(name, chainId, options) {\n        const func = function () {\n            const network = new Network(name, chainId);\n            // We use 0 to disable ENS\n            if (options.ensNetwork != null) {\n                network.attachPlugin(new EnsPlugin(null, options.ensNetwork));\n            }\n            if (options.priorityFee) {\n                //                network.attachPlugin(new MaxPriorityFeePlugin(options.priorityFee));\n            }\n            /*\n                        if (options.etherscan) {\n                            const { url, apiKey } = options.etherscan;\n                            network.attachPlugin(new EtherscanPlugin(url, apiKey));\n                        }\n            */\n            network.attachPlugin(new GasCostPlugin());\n            return network;\n        };\n        // Register the network by name and chain ID\n        Network.register(name, func);\n        Network.register(chainId, func);\n        if (options.altNames) {\n            options.altNames.forEach((name) => {\n                Network.register(name, func);\n            });\n        }\n    }\n    registerEth(\"mainnet\", 1, { ensNetwork: 1, altNames: [\"homestead\"] });\n    registerEth(\"ropsten\", 3, { ensNetwork: 3 });\n    registerEth(\"rinkeby\", 4, { ensNetwork: 4 });\n    registerEth(\"goerli\", 5, { ensNetwork: 5 });\n    registerEth(\"kovan\", 42, { ensNetwork: 42 });\n    registerEth(\"classic\", 61, {});\n    registerEth(\"classicKotti\", 6, {});\n    registerEth(\"xdai\", 100, { ensNetwork: 1 });\n    // Polygon has a 35 gwei maxPriorityFee requirement\n    registerEth(\"matic\", 137, {\n        ensNetwork: 1,\n        //        priorityFee: 35000000000,\n        etherscan: {\n            apiKey: \"W6T8DJW654GNTQ34EFEYYP3EZD9DD27CT7\",\n            url: \"https:/\\/api.polygonscan.com/\"\n        }\n    });\n    registerEth(\"maticMumbai\", 80001, {\n        //        priorityFee: 35000000000,\n        etherscan: {\n            apiKey: \"W6T8DJW654GNTQ34EFEYYP3EZD9DD27CT7\",\n            url: \"https:/\\/api-testnet.polygonscan.com/\"\n        }\n    });\n    registerEth(\"bnb\", 56, {\n        ensNetwork: 1,\n        etherscan: {\n            apiKey: \"EVTS3CU31AATZV72YQ55TPGXGMVIFUQ9M9\",\n            url: \"http:/\\/api.bscscan.com\"\n        }\n    });\n    registerEth(\"bnbt\", 97, {\n        etherscan: {\n            apiKey: \"EVTS3CU31AATZV72YQ55TPGXGMVIFUQ9M9\",\n            url: \"http:/\\/api-testnet.bscscan.com\"\n        }\n    });\n}\n//# sourceMappingURL=network.js.map","import { assert, isHexString } from \"../utils/index.js\";\nfunction copy(obj) {\n    return JSON.parse(JSON.stringify(obj));\n}\n/**\n *  @TODO\n *\n *  @_docloc: api/providers/abstract-provider\n */\nexport function getPollingSubscriber(provider, event) {\n    if (event === \"block\") {\n        return new PollingBlockSubscriber(provider);\n    }\n    if (isHexString(event, 32)) {\n        return new PollingTransactionSubscriber(provider, event);\n    }\n    assert(false, \"unsupported polling event\", \"UNSUPPORTED_OPERATION\", {\n        operation: \"getPollingSubscriber\", info: { event }\n    });\n}\n// @TODO: refactor this\n/**\n *  @TODO\n *\n *  @_docloc: api/providers/abstract-provider\n */\nexport class PollingBlockSubscriber {\n    #provider;\n    #poller;\n    #interval;\n    // The most recent block we have scanned for events. The value -2\n    // indicates we still need to fetch an initial block number\n    #blockNumber;\n    constructor(provider) {\n        this.#provider = provider;\n        this.#poller = null;\n        this.#interval = 4000;\n        this.#blockNumber = -2;\n    }\n    get pollingInterval() { return this.#interval; }\n    set pollingInterval(value) { this.#interval = value; }\n    async #poll() {\n        const blockNumber = await this.#provider.getBlockNumber();\n        if (this.#blockNumber === -2) {\n            this.#blockNumber = blockNumber;\n            return;\n        }\n        // @TODO: Put a cap on the maximum number of events per loop?\n        if (blockNumber !== this.#blockNumber) {\n            for (let b = this.#blockNumber + 1; b <= blockNumber; b++) {\n                // We have been stopped\n                if (this.#poller == null) {\n                    return;\n                }\n                await this.#provider.emit(\"block\", b);\n            }\n            this.#blockNumber = blockNumber;\n        }\n        // We have been stopped\n        if (this.#poller == null) {\n            return;\n        }\n        this.#poller = this.#provider._setTimeout(this.#poll.bind(this), this.#interval);\n    }\n    start() {\n        if (this.#poller) {\n            return;\n        }\n        this.#poller = this.#provider._setTimeout(this.#poll.bind(this), this.#interval);\n        this.#poll();\n    }\n    stop() {\n        if (!this.#poller) {\n            return;\n        }\n        this.#provider._clearTimeout(this.#poller);\n        this.#poller = null;\n    }\n    pause(dropWhilePaused) {\n        this.stop();\n        if (dropWhilePaused) {\n            this.#blockNumber = -2;\n        }\n    }\n    resume() {\n        this.start();\n    }\n}\n/**\n *  @TODO\n *\n *  @_docloc: api/providers/abstract-provider\n */\nexport class OnBlockSubscriber {\n    #provider;\n    #poll;\n    #running;\n    constructor(provider) {\n        this.#provider = provider;\n        this.#running = false;\n        this.#poll = (blockNumber) => {\n            this._poll(blockNumber, this.#provider);\n        };\n    }\n    async _poll(blockNumber, provider) {\n        throw new Error(\"sub-classes must override this\");\n    }\n    start() {\n        if (this.#running) {\n            return;\n        }\n        this.#running = true;\n        this.#poll(-2);\n        this.#provider.on(\"block\", this.#poll);\n    }\n    stop() {\n        if (!this.#running) {\n            return;\n        }\n        this.#running = false;\n        this.#provider.off(\"block\", this.#poll);\n    }\n    pause(dropWhilePaused) { this.stop(); }\n    resume() { this.start(); }\n}\n/**\n *  @TODO\n *\n *  @_docloc: api/providers/abstract-provider\n */\nexport class PollingOrphanSubscriber extends OnBlockSubscriber {\n    #filter;\n    constructor(provider, filter) {\n        super(provider);\n        this.#filter = copy(filter);\n    }\n    async _poll(blockNumber, provider) {\n        throw new Error(\"@TODO\");\n        console.log(this.#filter);\n    }\n}\n/**\n *  @TODO\n *\n *  @_docloc: api/providers/abstract-provider\n */\nexport class PollingTransactionSubscriber extends OnBlockSubscriber {\n    #hash;\n    constructor(provider, hash) {\n        super(provider);\n        this.#hash = hash;\n    }\n    async _poll(blockNumber, provider) {\n        const tx = await provider.getTransactionReceipt(this.#hash);\n        if (tx) {\n            provider.emit(this.#hash, tx);\n        }\n    }\n}\n/**\n *  @TODO\n *\n *  @_docloc: api/providers/abstract-provider\n */\nexport class PollingEventSubscriber {\n    #provider;\n    #filter;\n    #poller;\n    #running;\n    // The most recent block we have scanned for events. The value -2\n    // indicates we still need to fetch an initial block number\n    #blockNumber;\n    constructor(provider, filter) {\n        this.#provider = provider;\n        this.#filter = copy(filter);\n        this.#poller = this.#poll.bind(this);\n        this.#running = false;\n        this.#blockNumber = -2;\n    }\n    async #poll(blockNumber) {\n        // The initial block hasn't been determined yet\n        if (this.#blockNumber === -2) {\n            return;\n        }\n        const filter = copy(this.#filter);\n        filter.fromBlock = this.#blockNumber + 1;\n        filter.toBlock = blockNumber;\n        const logs = await this.#provider.getLogs(filter);\n        // No logs could just mean the node has not indexed them yet,\n        // so we keep a sliding window of 60 blocks to keep scanning\n        if (logs.length === 0) {\n            if (this.#blockNumber < blockNumber - 60) {\n                this.#blockNumber = blockNumber - 60;\n            }\n            return;\n        }\n        this.#blockNumber = blockNumber;\n        for (const log of logs) {\n            this.#provider.emit(this.#filter, log);\n        }\n    }\n    start() {\n        if (this.#running) {\n            return;\n        }\n        this.#running = true;\n        if (this.#blockNumber === -2) {\n            this.#provider.getBlockNumber().then((blockNumber) => {\n                this.#blockNumber = blockNumber;\n            });\n        }\n        this.#provider.on(\"block\", this.#poller);\n    }\n    stop() {\n        if (!this.#running) {\n            return;\n        }\n        this.#running = false;\n        this.#provider.off(\"block\", this.#poller);\n    }\n    pause(dropWhilePaused) {\n        this.stop();\n        if (dropWhilePaused) {\n            this.#blockNumber = -2;\n        }\n    }\n    resume() {\n        this.start();\n    }\n}\n//# sourceMappingURL=subscriber-polling.js.map","/**\n *  About Subclassing the Provider...\n *\n *  @_section: api/providers/abstract-provider: Subclassing Provider  [abstract-provider]\n */\n// @TODO\n// Event coalescence\n//   When we register an event with an async value (e.g. address is a Signer\n//   or ENS name), we need to add it immeidately for the Event API, but also\n//   need time to resolve the address. Upon resolving the address, we need to\n//   migrate the listener to the static event. We also need to maintain a map\n//   of Signer/ENS name to address so we can sync respond to listenerCount.\nimport { getAddress, resolveAddress } from \"../address/index.js\";\nimport { ZeroHash } from \"../constants/index.js\";\nimport { Contract } from \"../contract/index.js\";\nimport { namehash } from \"../hash/index.js\";\nimport { Transaction } from \"../transaction/index.js\";\nimport { concat, dataLength, dataSlice, hexlify, isHexString, getBigInt, getBytes, getNumber, isCallException, makeError, assert, assertArgument, FetchRequest, toBeArray, toQuantity, defineProperties, EventPayload, resolveProperties, toUtf8String } from \"../utils/index.js\";\nimport { EnsResolver } from \"./ens-resolver.js\";\nimport { formatBlock, formatLog, formatTransactionReceipt, formatTransactionResponse } from \"./format.js\";\nimport { Network } from \"./network.js\";\nimport { copyRequest, Block, FeeData, Log, TransactionReceipt, TransactionResponse } from \"./provider.js\";\nimport { PollingBlockSubscriber, PollingEventSubscriber, PollingOrphanSubscriber, PollingTransactionSubscriber } from \"./subscriber-polling.js\";\n// Constants\nconst BN_2 = BigInt(2);\nconst MAX_CCIP_REDIRECTS = 10;\nfunction isPromise(value) {\n    return (value && typeof (value.then) === \"function\");\n}\nfunction getTag(prefix, value) {\n    return prefix + \":\" + JSON.stringify(value, (k, v) => {\n        if (v == null) {\n            return \"null\";\n        }\n        if (typeof (v) === \"bigint\") {\n            return `bigint:${v.toString()}`;\n        }\n        if (typeof (v) === \"string\") {\n            return v.toLowerCase();\n        }\n        // Sort object keys\n        if (typeof (v) === \"object\" && !Array.isArray(v)) {\n            const keys = Object.keys(v);\n            keys.sort();\n            return keys.reduce((accum, key) => {\n                accum[key] = v[key];\n                return accum;\n            }, {});\n        }\n        return v;\n    });\n}\nexport class UnmanagedSubscriber {\n    name;\n    constructor(name) { defineProperties(this, { name }); }\n    start() { }\n    stop() { }\n    pause(dropWhilePaused) { }\n    resume() { }\n}\nfunction copy(value) {\n    return JSON.parse(JSON.stringify(value));\n}\nfunction concisify(items) {\n    items = Array.from((new Set(items)).values());\n    items.sort();\n    return items;\n}\nasync function getSubscription(_event, provider) {\n    if (_event == null) {\n        throw new Error(\"invalid event\");\n    }\n    // Normalize topic array info an EventFilter\n    if (Array.isArray(_event)) {\n        _event = { topics: _event };\n    }\n    if (typeof (_event) === \"string\") {\n        switch (_event) {\n            case \"block\":\n            case \"pending\":\n            case \"debug\":\n            case \"network\": {\n                return { type: _event, tag: _event };\n            }\n        }\n    }\n    if (isHexString(_event, 32)) {\n        const hash = _event.toLowerCase();\n        return { type: \"transaction\", tag: getTag(\"tx\", { hash }), hash };\n    }\n    if (_event.orphan) {\n        const event = _event;\n        // @TODO: Should lowercase and whatnot things here instead of copy...\n        return { type: \"orphan\", tag: getTag(\"orphan\", event), filter: copy(event) };\n    }\n    if ((_event.address || _event.topics)) {\n        const event = _event;\n        const filter = {\n            topics: ((event.topics || []).map((t) => {\n                if (t == null) {\n                    return null;\n                }\n                if (Array.isArray(t)) {\n                    return concisify(t.map((t) => t.toLowerCase()));\n                }\n                return t.toLowerCase();\n            }))\n        };\n        if (event.address) {\n            const addresses = [];\n            const promises = [];\n            const addAddress = (addr) => {\n                if (isHexString(addr)) {\n                    addresses.push(addr);\n                }\n                else {\n                    promises.push((async () => {\n                        addresses.push(await resolveAddress(addr, provider));\n                    })());\n                }\n            };\n            if (Array.isArray(event.address)) {\n                event.address.forEach(addAddress);\n            }\n            else {\n                addAddress(event.address);\n            }\n            if (promises.length) {\n                await Promise.all(promises);\n            }\n            filter.address = concisify(addresses.map((a) => a.toLowerCase()));\n        }\n        return { filter, tag: getTag(\"event\", filter), type: \"event\" };\n    }\n    assertArgument(false, \"unknown ProviderEvent\", \"event\", _event);\n}\nfunction getTime() { return (new Date()).getTime(); }\nexport class AbstractProvider {\n    #subs;\n    #plugins;\n    // null=unpaused, true=paused+dropWhilePaused, false=paused\n    #pausedState;\n    #networkPromise;\n    #anyNetwork;\n    #performCache;\n    // The most recent block number if running an event or -1 if no \"block\" event\n    #lastBlockNumber;\n    #nextTimer;\n    #timers;\n    #disableCcipRead;\n    // @TODO: This should be a () => Promise<Network> so network can be\n    // done when needed; or rely entirely on _detectNetwork?\n    constructor(_network) {\n        if (_network === \"any\") {\n            this.#anyNetwork = true;\n            this.#networkPromise = null;\n        }\n        else if (_network) {\n            const network = Network.from(_network);\n            this.#anyNetwork = false;\n            this.#networkPromise = Promise.resolve(network);\n            setTimeout(() => { this.emit(\"network\", network, null); }, 0);\n        }\n        else {\n            this.#anyNetwork = false;\n            this.#networkPromise = null;\n        }\n        this.#lastBlockNumber = -1;\n        this.#performCache = new Map();\n        this.#subs = new Map();\n        this.#plugins = new Map();\n        this.#pausedState = null;\n        this.#nextTimer = 1;\n        this.#timers = new Map();\n        this.#disableCcipRead = false;\n    }\n    get provider() { return this; }\n    get plugins() {\n        return Array.from(this.#plugins.values());\n    }\n    attachPlugin(plugin) {\n        if (this.#plugins.get(plugin.name)) {\n            throw new Error(`cannot replace existing plugin: ${plugin.name} `);\n        }\n        this.#plugins.set(plugin.name, plugin.connect(this));\n        return this;\n    }\n    getPlugin(name) {\n        return (this.#plugins.get(name)) || null;\n    }\n    get disableCcipRead() { return this.#disableCcipRead; }\n    set disableCcipRead(value) { this.#disableCcipRead = !!value; }\n    // Shares multiple identical requests made during the same 250ms\n    async #perform(req) {\n        // Create a tag\n        const tag = getTag(req.method, req);\n        let perform = this.#performCache.get(tag);\n        if (!perform) {\n            perform = this._perform(req);\n            this.#performCache.set(tag, perform);\n            setTimeout(() => {\n                if (this.#performCache.get(tag) === perform) {\n                    this.#performCache.delete(tag);\n                }\n            }, 250);\n        }\n        return await perform;\n    }\n    async ccipReadFetch(tx, calldata, urls) {\n        if (this.disableCcipRead || urls.length === 0 || tx.to == null) {\n            return null;\n        }\n        const sender = tx.to.toLowerCase();\n        const data = calldata.toLowerCase();\n        const errorMessages = [];\n        for (let i = 0; i < urls.length; i++) {\n            const url = urls[i];\n            // URL expansion\n            const href = url.replace(\"{sender}\", sender).replace(\"{data}\", data);\n            // If no {data} is present, use POST; otherwise GET\n            //const json: string | null = (url.indexOf(\"{data}\") >= 0) ? null: JSON.stringify({ data, sender });\n            //const result = await fetchJson({ url: href, errorPassThrough: true }, json, (value, response) => {\n            //    value.status = response.statusCode;\n            //    return value;\n            //});\n            const request = new FetchRequest(href);\n            if (url.indexOf(\"{data}\") === -1) {\n                request.body = { data, sender };\n            }\n            this.emit(\"debug\", { action: \"sendCcipReadFetchRequest\", request, index: i, urls });\n            let errorMessage = \"unknown error\";\n            const resp = await request.send();\n            try {\n                const result = resp.bodyJson;\n                if (result.data) {\n                    this.emit(\"debug\", { action: \"receiveCcipReadFetchResult\", request, result });\n                    return result.data;\n                }\n                if (result.message) {\n                    errorMessage = result.message;\n                }\n                this.emit(\"debug\", { action: \"receiveCcipReadFetchError\", request, result });\n            }\n            catch (error) { }\n            // 4xx indicates the result is not present; stop\n            assert(resp.statusCode < 400 || resp.statusCode >= 500, `response not found during CCIP fetch: ${errorMessage}`, \"OFFCHAIN_FAULT\", { reason: \"404_MISSING_RESOURCE\", transaction: tx, info: { url, errorMessage } });\n            // 5xx indicates server issue; try the next url\n            errorMessages.push(errorMessage);\n        }\n        assert(false, `error encountered during CCIP fetch: ${errorMessages.map((m) => JSON.stringify(m)).join(\", \")}`, \"OFFCHAIN_FAULT\", {\n            reason: \"500_SERVER_ERROR\",\n            transaction: tx, info: { urls, errorMessages }\n        });\n    }\n    _wrapBlock(value, network) {\n        return new Block(formatBlock(value), this);\n    }\n    _wrapLog(value, network) {\n        return new Log(formatLog(value), this);\n    }\n    _wrapTransactionReceipt(value, network) {\n        return new TransactionReceipt(formatTransactionReceipt(value), this);\n    }\n    _wrapTransactionResponse(tx, network) {\n        return new TransactionResponse(tx, this);\n    }\n    _detectNetwork() {\n        assert(false, \"sub-classes must implement this\", \"UNSUPPORTED_OPERATION\", {\n            operation: \"_detectNetwork\"\n        });\n    }\n    // Sub-classes should override this and handle PerformActionRequest requests, calling\n    // the super for any unhandled actions.\n    async _perform(req) {\n        assert(false, `unsupported method: ${req.method}`, \"UNSUPPORTED_OPERATION\", {\n            operation: req.method,\n            info: req\n        });\n    }\n    // State\n    async getBlockNumber() {\n        const blockNumber = getNumber(await this.#perform({ method: \"getBlockNumber\" }), \"%response\");\n        if (this.#lastBlockNumber >= 0) {\n            this.#lastBlockNumber = blockNumber;\n        }\n        return blockNumber;\n    }\n    _getAddress(address) {\n        return resolveAddress(address, this);\n    }\n    _getBlockTag(blockTag) {\n        if (blockTag == null) {\n            return \"latest\";\n        }\n        switch (blockTag) {\n            case \"earliest\":\n                return \"0x0\";\n            case \"latest\":\n            case \"pending\":\n            case \"safe\":\n            case \"finalized\":\n                return blockTag;\n        }\n        if (isHexString(blockTag)) {\n            if (isHexString(blockTag, 32)) {\n                return blockTag;\n            }\n            return toQuantity(blockTag);\n        }\n        if (typeof (blockTag) === \"number\") {\n            if (blockTag >= 0) {\n                return toQuantity(blockTag);\n            }\n            if (this.#lastBlockNumber >= 0) {\n                return toQuantity(this.#lastBlockNumber + blockTag);\n            }\n            return this.getBlockNumber().then((b) => toQuantity(b + blockTag));\n        }\n        assertArgument(false, \"invalid blockTag\", \"blockTag\", blockTag);\n    }\n    _getFilter(filter) {\n        // Create a canonical representation of the topics\n        const topics = (filter.topics || []).map((t) => {\n            if (t == null) {\n                return null;\n            }\n            if (Array.isArray(t)) {\n                return concisify(t.map((t) => t.toLowerCase()));\n            }\n            return t.toLowerCase();\n        });\n        const blockHash = (\"blockHash\" in filter) ? filter.blockHash : undefined;\n        const resolve = (_address, fromBlock, toBlock) => {\n            let address = undefined;\n            switch (_address.length) {\n                case 0: break;\n                case 1:\n                    address = _address[0];\n                    break;\n                default:\n                    _address.sort();\n                    address = _address;\n            }\n            if (blockHash) {\n                if (fromBlock != null || toBlock != null) {\n                    throw new Error(\"invalid filter\");\n                }\n            }\n            const filter = {};\n            if (address) {\n                filter.address = address;\n            }\n            if (topics.length) {\n                filter.topics = topics;\n            }\n            if (fromBlock) {\n                filter.fromBlock = fromBlock;\n            }\n            if (toBlock) {\n                filter.toBlock = toBlock;\n            }\n            if (blockHash) {\n                filter.blockHash = blockHash;\n            }\n            return filter;\n        };\n        // Addresses could be async (ENS names or Addressables)\n        let address = [];\n        if (filter.address) {\n            if (Array.isArray(filter.address)) {\n                for (const addr of filter.address) {\n                    address.push(this._getAddress(addr));\n                }\n            }\n            else {\n                address.push(this._getAddress(filter.address));\n            }\n        }\n        let fromBlock = undefined;\n        if (\"fromBlock\" in filter) {\n            fromBlock = this._getBlockTag(filter.fromBlock);\n        }\n        let toBlock = undefined;\n        if (\"toBlock\" in filter) {\n            toBlock = this._getBlockTag(filter.toBlock);\n        }\n        if (address.filter((a) => (typeof (a) !== \"string\")).length ||\n            (fromBlock != null && typeof (fromBlock) !== \"string\") ||\n            (toBlock != null && typeof (toBlock) !== \"string\")) {\n            return Promise.all([Promise.all(address), fromBlock, toBlock]).then((result) => {\n                return resolve(result[0], result[1], result[2]);\n            });\n        }\n        return resolve(address, fromBlock, toBlock);\n    }\n    _getTransactionRequest(_request) {\n        const request = copyRequest(_request);\n        const promises = [];\n        [\"to\", \"from\"].forEach((key) => {\n            if (request[key] == null) {\n                return;\n            }\n            const addr = resolveAddress(request[key]);\n            if (isPromise(addr)) {\n                promises.push((async function () { request[key] = await addr; })());\n            }\n            else {\n                request[key] = addr;\n            }\n        });\n        if (request.blockTag != null) {\n            const blockTag = this._getBlockTag(request.blockTag);\n            if (isPromise(blockTag)) {\n                promises.push((async function () { request.blockTag = await blockTag; })());\n            }\n            else {\n                request.blockTag = blockTag;\n            }\n        }\n        if (promises.length) {\n            return (async function () {\n                await Promise.all(promises);\n                return request;\n            })();\n        }\n        return request;\n    }\n    async getNetwork() {\n        // No explicit network was set and this is our first time\n        if (this.#networkPromise == null) {\n            // Detect the current network (shared with all calls)\n            const detectNetwork = this._detectNetwork().then((network) => {\n                this.emit(\"network\", network, null);\n                return network;\n            }, (error) => {\n                // Reset the networkPromise on failure, so we will try again\n                if (this.#networkPromise === detectNetwork) {\n                    this.#networkPromise = null;\n                }\n                throw error;\n            });\n            this.#networkPromise = detectNetwork;\n            return (await detectNetwork).clone();\n        }\n        const networkPromise = this.#networkPromise;\n        const [expected, actual] = await Promise.all([\n            networkPromise,\n            this._detectNetwork() // The actual connected network\n        ]);\n        if (expected.chainId !== actual.chainId) {\n            if (this.#anyNetwork) {\n                // The \"any\" network can change, so notify listeners\n                this.emit(\"network\", actual, expected);\n                // Update the network if something else hasn't already changed it\n                if (this.#networkPromise === networkPromise) {\n                    this.#networkPromise = Promise.resolve(actual);\n                }\n            }\n            else {\n                // Otherwise, we do not allow changes to the underlying network\n                assert(false, `network changed: ${expected.chainId} => ${actual.chainId} `, \"NETWORK_ERROR\", {\n                    event: \"changed\"\n                });\n            }\n        }\n        return expected.clone();\n    }\n    async getFeeData() {\n        const { block, gasPrice } = await resolveProperties({\n            block: this.getBlock(\"latest\"),\n            gasPrice: ((async () => {\n                try {\n                    const gasPrice = await this.#perform({ method: \"getGasPrice\" });\n                    return getBigInt(gasPrice, \"%response\");\n                }\n                catch (error) { }\n                return null;\n            })())\n        });\n        let maxFeePerGas = null, maxPriorityFeePerGas = null;\n        if (block && block.baseFeePerGas) {\n            // We may want to compute this more accurately in the future,\n            // using the formula \"check if the base fee is correct\".\n            // See: https://eips.ethereum.org/EIPS/eip-1559\n            maxPriorityFeePerGas = BigInt(\"1000000000\");\n            // Allow a network to override their maximum priority fee per gas\n            //const priorityFeePlugin = (await this.getNetwork()).getPlugin<MaxPriorityFeePlugin>(\"org.ethers.plugins.max-priority-fee\");\n            //if (priorityFeePlugin) {\n            //    maxPriorityFeePerGas = await priorityFeePlugin.getPriorityFee(this);\n            //}\n            maxFeePerGas = (block.baseFeePerGas * BN_2) + maxPriorityFeePerGas;\n        }\n        return new FeeData(gasPrice, maxFeePerGas, maxPriorityFeePerGas);\n    }\n    async estimateGas(_tx) {\n        let tx = this._getTransactionRequest(_tx);\n        if (isPromise(tx)) {\n            tx = await tx;\n        }\n        return getBigInt(await this.#perform({\n            method: \"estimateGas\", transaction: tx\n        }), \"%response\");\n    }\n    async #call(tx, blockTag, attempt) {\n        assert(attempt < MAX_CCIP_REDIRECTS, \"CCIP read exceeded maximum redirections\", \"OFFCHAIN_FAULT\", {\n            reason: \"TOO_MANY_REDIRECTS\",\n            transaction: Object.assign({}, tx, { blockTag, enableCcipRead: true })\n        });\n        // This came in as a PerformActionTransaction, so to/from are safe; we can cast\n        const transaction = copyRequest(tx);\n        try {\n            return hexlify(await this._perform({ method: \"call\", transaction, blockTag }));\n        }\n        catch (error) {\n            // CCIP Read OffchainLookup\n            if (!this.disableCcipRead && isCallException(error) && error.data && attempt >= 0 && blockTag === \"latest\" && transaction.to != null && dataSlice(error.data, 0, 4) === \"0x556f1830\") {\n                const data = error.data;\n                const txSender = await resolveAddress(transaction.to, this);\n                // Parse the CCIP Read Arguments\n                let ccipArgs;\n                try {\n                    ccipArgs = parseOffchainLookup(dataSlice(error.data, 4));\n                }\n                catch (error) {\n                    assert(false, error.message, \"OFFCHAIN_FAULT\", {\n                        reason: \"BAD_DATA\", transaction, info: { data }\n                    });\n                }\n                // Check the sender of the OffchainLookup matches the transaction\n                assert(ccipArgs.sender.toLowerCase() === txSender.toLowerCase(), \"CCIP Read sender mismatch\", \"CALL_EXCEPTION\", {\n                    action: \"call\",\n                    data,\n                    reason: \"OffchainLookup\",\n                    transaction: transaction,\n                    invocation: null,\n                    revert: {\n                        signature: \"OffchainLookup(address,string[],bytes,bytes4,bytes)\",\n                        name: \"OffchainLookup\",\n                        args: ccipArgs.errorArgs\n                    }\n                });\n                const ccipResult = await this.ccipReadFetch(transaction, ccipArgs.calldata, ccipArgs.urls);\n                assert(ccipResult != null, \"CCIP Read failed to fetch data\", \"OFFCHAIN_FAULT\", {\n                    reason: \"FETCH_FAILED\", transaction, info: { data: error.data, errorArgs: ccipArgs.errorArgs }\n                });\n                const tx = {\n                    to: txSender,\n                    data: concat([ccipArgs.selector, encodeBytes([ccipResult, ccipArgs.extraData])])\n                };\n                this.emit(\"debug\", { action: \"sendCcipReadCall\", transaction: tx });\n                try {\n                    const result = await this.#call(tx, blockTag, attempt + 1);\n                    this.emit(\"debug\", { action: \"receiveCcipReadCallResult\", transaction: Object.assign({}, tx), result });\n                    return result;\n                }\n                catch (error) {\n                    this.emit(\"debug\", { action: \"receiveCcipReadCallError\", transaction: Object.assign({}, tx), error });\n                    throw error;\n                }\n            }\n            throw error;\n        }\n    }\n    async #checkNetwork(promise) {\n        const { value } = await resolveProperties({\n            network: this.getNetwork(),\n            value: promise\n        });\n        return value;\n    }\n    async call(_tx) {\n        const { tx, blockTag } = await resolveProperties({\n            tx: this._getTransactionRequest(_tx),\n            blockTag: this._getBlockTag(_tx.blockTag)\n        });\n        return await this.#checkNetwork(this.#call(tx, blockTag, _tx.enableCcipRead ? 0 : -1));\n    }\n    // Account\n    async #getAccountValue(request, _address, _blockTag) {\n        let address = this._getAddress(_address);\n        let blockTag = this._getBlockTag(_blockTag);\n        if (typeof (address) !== \"string\" || typeof (blockTag) !== \"string\") {\n            [address, blockTag] = await Promise.all([address, blockTag]);\n        }\n        return await this.#checkNetwork(this.#perform(Object.assign(request, { address, blockTag })));\n    }\n    async getBalance(address, blockTag) {\n        return getBigInt(await this.#getAccountValue({ method: \"getBalance\" }, address, blockTag), \"%response\");\n    }\n    async getTransactionCount(address, blockTag) {\n        return getNumber(await this.#getAccountValue({ method: \"getTransactionCount\" }, address, blockTag), \"%response\");\n    }\n    async getCode(address, blockTag) {\n        return hexlify(await this.#getAccountValue({ method: \"getCode\" }, address, blockTag));\n    }\n    async getStorage(address, _position, blockTag) {\n        const position = getBigInt(_position, \"position\");\n        return hexlify(await this.#getAccountValue({ method: \"getStorage\", position }, address, blockTag));\n    }\n    // Write\n    async broadcastTransaction(signedTx) {\n        const { blockNumber, hash, network } = await resolveProperties({\n            blockNumber: this.getBlockNumber(),\n            hash: this._perform({\n                method: \"broadcastTransaction\",\n                signedTransaction: signedTx\n            }),\n            network: this.getNetwork()\n        });\n        const tx = Transaction.from(signedTx);\n        if (tx.hash !== hash) {\n            throw new Error(\"@TODO: the returned hash did not match\");\n        }\n        return this._wrapTransactionResponse(tx, network).replaceableTransaction(blockNumber);\n    }\n    async #getBlock(block, includeTransactions) {\n        // @TODO: Add CustomBlockPlugin check\n        if (isHexString(block, 32)) {\n            return await this.#perform({\n                method: \"getBlock\", blockHash: block, includeTransactions\n            });\n        }\n        let blockTag = this._getBlockTag(block);\n        if (typeof (blockTag) !== \"string\") {\n            blockTag = await blockTag;\n        }\n        return await this.#perform({\n            method: \"getBlock\", blockTag, includeTransactions\n        });\n    }\n    // Queries\n    async getBlock(block, prefetchTxs) {\n        const { network, params } = await resolveProperties({\n            network: this.getNetwork(),\n            params: this.#getBlock(block, !!prefetchTxs)\n        });\n        if (params == null) {\n            return null;\n        }\n        return this._wrapBlock(formatBlock(params), network);\n    }\n    async getTransaction(hash) {\n        const { network, params } = await resolveProperties({\n            network: this.getNetwork(),\n            params: this.#perform({ method: \"getTransaction\", hash })\n        });\n        if (params == null) {\n            return null;\n        }\n        return this._wrapTransactionResponse(formatTransactionResponse(params), network);\n    }\n    async getTransactionReceipt(hash) {\n        const { network, params } = await resolveProperties({\n            network: this.getNetwork(),\n            params: this.#perform({ method: \"getTransactionReceipt\", hash })\n        });\n        if (params == null) {\n            return null;\n        }\n        // Some backends did not backfill the effectiveGasPrice into old transactions\n        // in the receipt, so we look it up manually and inject it.\n        if (params.gasPrice == null && params.effectiveGasPrice == null) {\n            const tx = await this.#perform({ method: \"getTransaction\", hash });\n            if (tx == null) {\n                throw new Error(\"report this; could not find tx or effectiveGasPrice\");\n            }\n            params.effectiveGasPrice = tx.gasPrice;\n        }\n        return this._wrapTransactionReceipt(formatTransactionReceipt(params), network);\n    }\n    async getTransactionResult(hash) {\n        const { result } = await resolveProperties({\n            network: this.getNetwork(),\n            result: this.#perform({ method: \"getTransactionResult\", hash })\n        });\n        if (result == null) {\n            return null;\n        }\n        return hexlify(result);\n    }\n    // Bloom-filter Queries\n    async getLogs(_filter) {\n        let filter = this._getFilter(_filter);\n        if (isPromise(filter)) {\n            filter = await filter;\n        }\n        const { network, params } = await resolveProperties({\n            network: this.getNetwork(),\n            params: this.#perform({ method: \"getLogs\", filter })\n        });\n        return params.map((p) => this._wrapLog(formatLog(p), network));\n    }\n    // ENS\n    _getProvider(chainId) {\n        assert(false, \"provider cannot connect to target network\", \"UNSUPPORTED_OPERATION\", {\n            operation: \"_getProvider()\"\n        });\n    }\n    async getResolver(name) {\n        return await EnsResolver.fromName(this, name);\n    }\n    async getAvatar(name) {\n        const resolver = await this.getResolver(name);\n        if (resolver) {\n            return await resolver.getAvatar();\n        }\n        return null;\n    }\n    async resolveName(name) {\n        const resolver = await this.getResolver(name);\n        if (resolver) {\n            return await resolver.getAddress();\n        }\n        return null;\n    }\n    async lookupAddress(address) {\n        address = getAddress(address);\n        const node = namehash(address.substring(2).toLowerCase() + \".addr.reverse\");\n        try {\n            const ensAddr = await EnsResolver.getEnsAddress(this);\n            const ensContract = new Contract(ensAddr, [\n                \"function resolver(bytes32) view returns (address)\"\n            ], this);\n            const resolver = await ensContract.resolver(node);\n            if (resolver == null || resolver === ZeroHash) {\n                return null;\n            }\n            const resolverContract = new Contract(resolver, [\n                \"function name(bytes32) view returns (string)\"\n            ], this);\n            const name = await resolverContract.name(node);\n            const check = await this.resolveName(name);\n            if (check !== address) {\n                console.log(\"FAIL\", address, check);\n            }\n            return name;\n        }\n        catch (error) {\n            console.log(\"TEMP\", error);\n        }\n        return null;\n    }\n    async waitForTransaction(hash, _confirms, timeout) {\n        const confirms = (_confirms != null) ? _confirms : 1;\n        if (confirms === 0) {\n            return this.getTransactionReceipt(hash);\n        }\n        return new Promise(async (resolve, reject) => {\n            let timer = null;\n            const listener = (async (blockNumber) => {\n                try {\n                    const receipt = await this.getTransactionReceipt(hash);\n                    if (receipt != null) {\n                        if (blockNumber - receipt.blockNumber + 1 >= confirms) {\n                            resolve(receipt);\n                            //this.off(\"block\", listener);\n                            if (timer) {\n                                clearTimeout(timer);\n                                timer = null;\n                            }\n                            return;\n                        }\n                    }\n                }\n                catch (error) {\n                    console.log(\"EEE\", error);\n                }\n                this.once(\"block\", listener);\n            });\n            if (timeout != null) {\n                timer = setTimeout(() => {\n                    if (timer == null) {\n                        return;\n                    }\n                    timer = null;\n                    this.off(\"block\", listener);\n                    reject(makeError(\"timeout\", \"TIMEOUT\", { reason: \"timeout\" }));\n                }, timeout);\n            }\n            listener(await this.getBlockNumber());\n        });\n    }\n    async waitForBlock(blockTag) {\n        assert(false, \"not implemented yet\", \"NOT_IMPLEMENTED\", {\n            operation: \"waitForBlock\"\n        });\n    }\n    _clearTimeout(timerId) {\n        const timer = this.#timers.get(timerId);\n        if (!timer) {\n            return;\n        }\n        if (timer.timer) {\n            clearTimeout(timer.timer);\n        }\n        this.#timers.delete(timerId);\n    }\n    _setTimeout(_func, timeout) {\n        if (timeout == null) {\n            timeout = 0;\n        }\n        const timerId = this.#nextTimer++;\n        const func = () => {\n            this.#timers.delete(timerId);\n            _func();\n        };\n        if (this.paused) {\n            this.#timers.set(timerId, { timer: null, func, time: timeout });\n        }\n        else {\n            const timer = setTimeout(func, timeout);\n            this.#timers.set(timerId, { timer, func, time: getTime() });\n        }\n        return timerId;\n    }\n    _forEachSubscriber(func) {\n        for (const sub of this.#subs.values()) {\n            func(sub.subscriber);\n        }\n    }\n    // Event API; sub-classes should override this; any supported\n    // event filter will have been munged into an EventFilter\n    _getSubscriber(sub) {\n        switch (sub.type) {\n            case \"debug\":\n            case \"network\":\n                return new UnmanagedSubscriber(sub.type);\n            case \"block\":\n                return new PollingBlockSubscriber(this);\n            case \"event\":\n                return new PollingEventSubscriber(this, sub.filter);\n            case \"transaction\":\n                return new PollingTransactionSubscriber(this, sub.hash);\n            case \"orphan\":\n                return new PollingOrphanSubscriber(this, sub.filter);\n        }\n        throw new Error(`unsupported event: ${sub.type}`);\n    }\n    _recoverSubscriber(oldSub, newSub) {\n        for (const sub of this.#subs.values()) {\n            if (sub.subscriber === oldSub) {\n                if (sub.started) {\n                    sub.subscriber.stop();\n                }\n                sub.subscriber = newSub;\n                if (sub.started) {\n                    newSub.start();\n                }\n                if (this.#pausedState != null) {\n                    newSub.pause(this.#pausedState);\n                }\n                break;\n            }\n        }\n    }\n    async #hasSub(event, emitArgs) {\n        let sub = await getSubscription(event, this);\n        // This is a log that is removing an existing log; we actually want\n        // to emit an orphan event for the removed log\n        if (sub.type === \"event\" && emitArgs && emitArgs.length > 0 && emitArgs[0].removed === true) {\n            sub = await getSubscription({ orphan: \"drop-log\", log: emitArgs[0] }, this);\n        }\n        return this.#subs.get(sub.tag) || null;\n    }\n    async #getSub(event) {\n        const subscription = await getSubscription(event, this);\n        // Prevent tampering with our tag in any subclass' _getSubscriber\n        const tag = subscription.tag;\n        let sub = this.#subs.get(tag);\n        if (!sub) {\n            const subscriber = this._getSubscriber(subscription);\n            const addressableMap = new WeakMap();\n            const nameMap = new Map();\n            sub = { subscriber, tag, addressableMap, nameMap, started: false, listeners: [] };\n            this.#subs.set(tag, sub);\n        }\n        return sub;\n    }\n    async on(event, listener) {\n        const sub = await this.#getSub(event);\n        sub.listeners.push({ listener, once: false });\n        if (!sub.started) {\n            sub.subscriber.start();\n            sub.started = true;\n            if (this.#pausedState != null) {\n                sub.subscriber.pause(this.#pausedState);\n            }\n        }\n        return this;\n    }\n    async once(event, listener) {\n        const sub = await this.#getSub(event);\n        sub.listeners.push({ listener, once: true });\n        if (!sub.started) {\n            sub.subscriber.start();\n            sub.started = true;\n            if (this.#pausedState != null) {\n                sub.subscriber.pause(this.#pausedState);\n            }\n        }\n        return this;\n    }\n    async emit(event, ...args) {\n        const sub = await this.#hasSub(event, args);\n        // If there is not subscription or if a recent emit removed\n        // the last of them (which also deleted the sub) do nothing\n        if (!sub || sub.listeners.length === 0) {\n            return false;\n        }\n        ;\n        const count = sub.listeners.length;\n        sub.listeners = sub.listeners.filter(({ listener, once }) => {\n            const payload = new EventPayload(this, (once ? null : listener), event);\n            try {\n                listener.call(this, ...args, payload);\n            }\n            catch (error) { }\n            return !once;\n        });\n        if (sub.listeners.length === 0) {\n            if (sub.started) {\n                sub.subscriber.stop();\n            }\n            this.#subs.delete(sub.tag);\n        }\n        return (count > 0);\n    }\n    async listenerCount(event) {\n        if (event) {\n            const sub = await this.#hasSub(event);\n            if (!sub) {\n                return 0;\n            }\n            return sub.listeners.length;\n        }\n        let total = 0;\n        for (const { listeners } of this.#subs.values()) {\n            total += listeners.length;\n        }\n        return total;\n    }\n    async listeners(event) {\n        if (event) {\n            const sub = await this.#hasSub(event);\n            if (!sub) {\n                return [];\n            }\n            return sub.listeners.map(({ listener }) => listener);\n        }\n        let result = [];\n        for (const { listeners } of this.#subs.values()) {\n            result = result.concat(listeners.map(({ listener }) => listener));\n        }\n        return result;\n    }\n    async off(event, listener) {\n        const sub = await this.#hasSub(event);\n        if (!sub) {\n            return this;\n        }\n        if (listener) {\n            const index = sub.listeners.map(({ listener }) => listener).indexOf(listener);\n            if (index >= 0) {\n                sub.listeners.splice(index, 1);\n            }\n        }\n        if (!listener || sub.listeners.length === 0) {\n            if (sub.started) {\n                sub.subscriber.stop();\n            }\n            this.#subs.delete(sub.tag);\n        }\n        return this;\n    }\n    async removeAllListeners(event) {\n        if (event) {\n            const { tag, started, subscriber } = await this.#getSub(event);\n            if (started) {\n                subscriber.stop();\n            }\n            this.#subs.delete(tag);\n        }\n        else {\n            for (const [tag, { started, subscriber }] of this.#subs) {\n                if (started) {\n                    subscriber.stop();\n                }\n                this.#subs.delete(tag);\n            }\n        }\n        return this;\n    }\n    // Alias for \"on\"\n    async addListener(event, listener) {\n        return await this.on(event, listener);\n    }\n    // Alias for \"off\"\n    async removeListener(event, listener) {\n        return this.off(event, listener);\n    }\n    // Sub-classes should override this to shutdown any sockets, etc.\n    // but MUST call this super.shutdown.\n    destroy() {\n        // Stop all listeners\n        this.removeAllListeners();\n        // Shut down all tiemrs\n        for (const timerId of this.#timers.keys()) {\n            this._clearTimeout(timerId);\n        }\n    }\n    get paused() { return (this.#pausedState != null); }\n    set paused(pause) {\n        if (!!pause === this.paused) {\n            return;\n        }\n        if (this.paused) {\n            this.resume();\n        }\n        else {\n            this.pause(false);\n        }\n    }\n    pause(dropWhilePaused) {\n        this.#lastBlockNumber = -1;\n        if (this.#pausedState != null) {\n            if (this.#pausedState == !!dropWhilePaused) {\n                return;\n            }\n            assert(false, \"cannot change pause type; resume first\", \"UNSUPPORTED_OPERATION\", {\n                operation: \"pause\"\n            });\n        }\n        this._forEachSubscriber((s) => s.pause(dropWhilePaused));\n        this.#pausedState = !!dropWhilePaused;\n        for (const timer of this.#timers.values()) {\n            // Clear the timer\n            if (timer.timer) {\n                clearTimeout(timer.timer);\n            }\n            // Remaining time needed for when we become unpaused\n            timer.time = getTime() - timer.time;\n        }\n    }\n    resume() {\n        if (this.#pausedState == null) {\n            return;\n        }\n        this._forEachSubscriber((s) => s.resume());\n        this.#pausedState = null;\n        for (const timer of this.#timers.values()) {\n            // Remaining time when we were paused\n            let timeout = timer.time;\n            if (timeout < 0) {\n                timeout = 0;\n            }\n            // Start time (in cause paused, so we con compute remaininf time)\n            timer.time = getTime();\n            // Start the timer\n            setTimeout(timer.func, timeout);\n        }\n    }\n}\nfunction _parseString(result, start) {\n    try {\n        const bytes = _parseBytes(result, start);\n        if (bytes) {\n            return toUtf8String(bytes);\n        }\n    }\n    catch (error) { }\n    return null;\n}\nfunction _parseBytes(result, start) {\n    if (result === \"0x\") {\n        return null;\n    }\n    try {\n        const offset = getNumber(dataSlice(result, start, start + 32));\n        const length = getNumber(dataSlice(result, offset, offset + 32));\n        return dataSlice(result, offset + 32, offset + 32 + length);\n    }\n    catch (error) { }\n    return null;\n}\nfunction numPad(value) {\n    const result = toBeArray(value);\n    if (result.length > 32) {\n        throw new Error(\"internal; should not happen\");\n    }\n    const padded = new Uint8Array(32);\n    padded.set(result, 32 - result.length);\n    return padded;\n}\nfunction bytesPad(value) {\n    if ((value.length % 32) === 0) {\n        return value;\n    }\n    const result = new Uint8Array(Math.ceil(value.length / 32) * 32);\n    result.set(value);\n    return result;\n}\nconst empty = new Uint8Array([]);\n// ABI Encodes a series of (bytes, bytes, ...)\nfunction encodeBytes(datas) {\n    const result = [];\n    let byteCount = 0;\n    // Add place-holders for pointers as we add items\n    for (let i = 0; i < datas.length; i++) {\n        result.push(empty);\n        byteCount += 32;\n    }\n    for (let i = 0; i < datas.length; i++) {\n        const data = getBytes(datas[i]);\n        // Update the bytes offset\n        result[i] = numPad(byteCount);\n        // The length and padded value of data\n        result.push(numPad(data.length));\n        result.push(bytesPad(data));\n        byteCount += 32 + Math.ceil(data.length / 32) * 32;\n    }\n    return concat(result);\n}\nconst zeros = \"0x0000000000000000000000000000000000000000000000000000000000000000\";\nfunction parseOffchainLookup(data) {\n    const result = {\n        sender: \"\", urls: [], calldata: \"\", selector: \"\", extraData: \"\", errorArgs: []\n    };\n    assert(dataLength(data) >= 5 * 32, \"insufficient OffchainLookup data\", \"OFFCHAIN_FAULT\", {\n        reason: \"insufficient OffchainLookup data\"\n    });\n    const sender = dataSlice(data, 0, 32);\n    assert(dataSlice(sender, 0, 12) === dataSlice(zeros, 0, 12), \"corrupt OffchainLookup sender\", \"OFFCHAIN_FAULT\", {\n        reason: \"corrupt OffchainLookup sender\"\n    });\n    result.sender = dataSlice(sender, 12);\n    // Read the URLs from the response\n    try {\n        const urls = [];\n        const urlsOffset = getNumber(dataSlice(data, 32, 64));\n        const urlsLength = getNumber(dataSlice(data, urlsOffset, urlsOffset + 32));\n        const urlsData = dataSlice(data, urlsOffset + 32);\n        for (let u = 0; u < urlsLength; u++) {\n            const url = _parseString(urlsData, u * 32);\n            if (url == null) {\n                throw new Error(\"abort\");\n            }\n            urls.push(url);\n        }\n        result.urls = urls;\n    }\n    catch (error) {\n        assert(false, \"corrupt OffchainLookup urls\", \"OFFCHAIN_FAULT\", {\n            reason: \"corrupt OffchainLookup urls\"\n        });\n    }\n    // Get the CCIP calldata to forward\n    try {\n        const calldata = _parseBytes(data, 64);\n        if (calldata == null) {\n            throw new Error(\"abort\");\n        }\n        result.calldata = calldata;\n    }\n    catch (error) {\n        assert(false, \"corrupt OffchainLookup calldata\", \"OFFCHAIN_FAULT\", {\n            reason: \"corrupt OffchainLookup calldata\"\n        });\n    }\n    // Get the callbackSelector (bytes4)\n    assert(dataSlice(data, 100, 128) === dataSlice(zeros, 0, 28), \"corrupt OffchainLookup callbaackSelector\", \"OFFCHAIN_FAULT\", {\n        reason: \"corrupt OffchainLookup callbaackSelector\"\n    });\n    result.selector = dataSlice(data, 96, 100);\n    // Get the extra data to send back to the contract as context\n    try {\n        const extraData = _parseBytes(data, 128);\n        if (extraData == null) {\n            throw new Error(\"abort\");\n        }\n        result.extraData = extraData;\n    }\n    catch (error) {\n        assert(false, \"corrupt OffchainLookup extraData\", \"OFFCHAIN_FAULT\", {\n            reason: \"corrupt OffchainLookup extraData\"\n        });\n    }\n    result.errorArgs = \"sender,urls,calldata,selector,extraData\".split(/,/).map((k) => result[k]);\n    return result;\n}\n//# sourceMappingURL=abstract-provider.js.map","/**\n *  About Abstract Signer and subclassing\n *\n *  @_section: api/providers/abstract-signer: Subclassing Signer [abstract-signer]\n */\nimport { resolveAddress } from \"../address/index.js\";\nimport { Transaction } from \"../transaction/index.js\";\nimport { defineProperties, getBigInt, resolveProperties, assert, assertArgument } from \"../utils/index.js\";\nimport { copyRequest } from \"./provider.js\";\nfunction checkProvider(signer, operation) {\n    if (signer.provider) {\n        return signer.provider;\n    }\n    assert(false, \"missing provider\", \"UNSUPPORTED_OPERATION\", { operation });\n}\nasync function populate(signer, tx) {\n    let pop = copyRequest(tx);\n    if (pop.to != null) {\n        pop.to = resolveAddress(pop.to, signer);\n    }\n    if (pop.from != null) {\n        const from = pop.from;\n        pop.from = Promise.all([\n            signer.getAddress(),\n            resolveAddress(from, signer)\n        ]).then(([address, from]) => {\n            assertArgument(address.toLowerCase() === from.toLowerCase(), \"transaction from mismatch\", \"tx.from\", from);\n            return address;\n        });\n    }\n    else {\n        pop.from = signer.getAddress();\n    }\n    return await resolveProperties(pop);\n}\nexport class AbstractSigner {\n    provider;\n    constructor(provider) {\n        defineProperties(this, { provider: (provider || null) });\n    }\n    async getNonce(blockTag) {\n        return checkProvider(this, \"getTransactionCount\").getTransactionCount(await this.getAddress(), blockTag);\n    }\n    async populateCall(tx) {\n        const pop = await populate(this, tx);\n        return pop;\n    }\n    async populateTransaction(tx) {\n        const provider = checkProvider(this, \"populateTransaction\");\n        const pop = await populate(this, tx);\n        if (pop.nonce == null) {\n            pop.nonce = await this.getNonce(\"pending\");\n        }\n        if (pop.gasLimit == null) {\n            pop.gasLimit = await this.estimateGas(pop);\n        }\n        // Populate the chain ID\n        const network = await (this.provider).getNetwork();\n        if (pop.chainId != null) {\n            const chainId = getBigInt(pop.chainId);\n            assertArgument(chainId === network.chainId, \"transaction chainId mismatch\", \"tx.chainId\", tx.chainId);\n        }\n        else {\n            pop.chainId = network.chainId;\n        }\n        // Do not allow mixing pre-eip-1559 and eip-1559 properties\n        const hasEip1559 = (pop.maxFeePerGas != null || pop.maxPriorityFeePerGas != null);\n        if (pop.gasPrice != null && (pop.type === 2 || hasEip1559)) {\n            assertArgument(false, \"eip-1559 transaction do not support gasPrice\", \"tx\", tx);\n        }\n        else if ((pop.type === 0 || pop.type === 1) && hasEip1559) {\n            assertArgument(false, \"pre-eip-1559 transaction do not support maxFeePerGas/maxPriorityFeePerGas\", \"tx\", tx);\n        }\n        if ((pop.type === 2 || pop.type == null) && (pop.maxFeePerGas != null && pop.maxPriorityFeePerGas != null)) {\n            // Fully-formed EIP-1559 transaction (skip getFeeData)\n            pop.type = 2;\n        }\n        else if (pop.type === 0 || pop.type === 1) {\n            // Explicit Legacy or EIP-2930 transaction\n            // We need to get fee data to determine things\n            const feeData = await provider.getFeeData();\n            assert(feeData.gasPrice != null, \"network does not support gasPrice\", \"UNSUPPORTED_OPERATION\", {\n                operation: \"getGasPrice\"\n            });\n            // Populate missing gasPrice\n            if (pop.gasPrice == null) {\n                pop.gasPrice = feeData.gasPrice;\n            }\n        }\n        else {\n            // We need to get fee data to determine things\n            const feeData = await provider.getFeeData();\n            if (pop.type == null) {\n                // We need to auto-detect the intended type of this transaction...\n                if (feeData.maxFeePerGas != null && feeData.maxPriorityFeePerGas != null) {\n                    // The network supports EIP-1559!\n                    // Upgrade transaction from null to eip-1559\n                    pop.type = 2;\n                    if (pop.gasPrice != null) {\n                        // Using legacy gasPrice property on an eip-1559 network,\n                        // so use gasPrice as both fee properties\n                        const gasPrice = pop.gasPrice;\n                        delete pop.gasPrice;\n                        pop.maxFeePerGas = gasPrice;\n                        pop.maxPriorityFeePerGas = gasPrice;\n                    }\n                    else {\n                        // Populate missing fee data\n                        if (pop.maxFeePerGas == null) {\n                            pop.maxFeePerGas = feeData.maxFeePerGas;\n                        }\n                        if (pop.maxPriorityFeePerGas == null) {\n                            pop.maxPriorityFeePerGas = feeData.maxPriorityFeePerGas;\n                        }\n                    }\n                }\n                else if (feeData.gasPrice != null) {\n                    // Network doesn't support EIP-1559...\n                    // ...but they are trying to use EIP-1559 properties\n                    assert(!hasEip1559, \"network does not support EIP-1559\", \"UNSUPPORTED_OPERATION\", {\n                        operation: \"populateTransaction\"\n                    });\n                    // Populate missing fee data\n                    if (pop.gasPrice == null) {\n                        pop.gasPrice = feeData.gasPrice;\n                    }\n                    // Explicitly set untyped transaction to legacy\n                    // @TODO: Maybe this shold allow type 1?\n                    pop.type = 0;\n                }\n                else {\n                    // getFeeData has failed us.\n                    assert(false, \"failed to get consistent fee data\", \"UNSUPPORTED_OPERATION\", {\n                        operation: \"signer.getFeeData\"\n                    });\n                }\n            }\n            else if (pop.type === 2) {\n                // Explicitly using EIP-1559\n                // Populate missing fee data\n                if (pop.maxFeePerGas == null) {\n                    pop.maxFeePerGas = feeData.maxFeePerGas;\n                }\n                if (pop.maxPriorityFeePerGas == null) {\n                    pop.maxPriorityFeePerGas = feeData.maxPriorityFeePerGas;\n                }\n            }\n        }\n        //@TOOD: Don't await all over the place; save them up for\n        // the end for better batching\n        return await resolveProperties(pop);\n    }\n    async estimateGas(tx) {\n        return checkProvider(this, \"estimateGas\").estimateGas(await this.populateCall(tx));\n    }\n    async call(tx) {\n        return checkProvider(this, \"call\").call(await this.populateCall(tx));\n    }\n    async resolveName(name) {\n        const provider = checkProvider(this, \"resolveName\");\n        return await provider.resolveName(name);\n    }\n    async sendTransaction(tx) {\n        const provider = checkProvider(this, \"sendTransaction\");\n        const pop = await this.populateTransaction(tx);\n        delete pop.from;\n        const txObj = Transaction.from(pop);\n        return await provider.broadcastTransaction(await this.signTransaction(txObj));\n    }\n}\nexport class VoidSigner extends AbstractSigner {\n    address;\n    constructor(address, provider) {\n        super(provider);\n        defineProperties(this, { address });\n    }\n    async getAddress() { return this.address; }\n    connect(provider) {\n        return new VoidSigner(this.address, provider);\n    }\n    #throwUnsupported(suffix, operation) {\n        assert(false, `VoidSigner cannot sign ${suffix}`, \"UNSUPPORTED_OPERATION\", { operation });\n    }\n    async signTransaction(tx) {\n        this.#throwUnsupported(\"transactions\", \"signTransaction\");\n    }\n    async signMessage(message) {\n        this.#throwUnsupported(\"messages\", \"signMessage\");\n    }\n    async signTypedData(domain, types, value) {\n        this.#throwUnsupported(\"typed-data\", \"signTypedData\");\n    }\n}\n//# sourceMappingURL=abstract-signer.js.map","import { PollingEventSubscriber } from \"./subscriber-polling.js\";\nfunction copy(obj) {\n    return JSON.parse(JSON.stringify(obj));\n}\n/**\n *  Some backends support subscribing to events using a Filter ID.\n *\n *  When subscribing with this technique, the node issues a unique\n *  //Filter ID//. At this point the node dedicates resources to\n *  the filter, so that periodic calls to follow up on the //Filter ID//\n *  will receive any events since the last call.\n *\n *  @_docloc: api/providers/abstract-provider\n */\nexport class FilterIdSubscriber {\n    #provider;\n    #filterIdPromise;\n    #poller;\n    #running;\n    #network;\n    #hault;\n    constructor(provider) {\n        this.#provider = provider;\n        this.#filterIdPromise = null;\n        this.#poller = this.#poll.bind(this);\n        this.#running = false;\n        this.#network = null;\n        this.#hault = false;\n    }\n    _subscribe(provider) {\n        throw new Error(\"subclasses must override this\");\n    }\n    _emitResults(provider, result) {\n        throw new Error(\"subclasses must override this\");\n    }\n    _recover(provider) {\n        throw new Error(\"subclasses must override this\");\n    }\n    async #poll(blockNumber) {\n        try {\n            if (this.#filterIdPromise == null) {\n                this.#filterIdPromise = this._subscribe(this.#provider);\n            }\n            const filterId = await this.#filterIdPromise;\n            if (filterId == null) {\n                this.#provider._recoverSubscriber(this, this._recover(this.#provider));\n                return;\n            }\n            const network = await this.#provider.getNetwork();\n            if (!this.#network) {\n                this.#network = network;\n            }\n            if (this.#network.chainId !== network.chainId) {\n                throw new Error(\"chaid changed\");\n            }\n            if (this.#hault) {\n                return;\n            }\n            const result = await this.#provider.send(\"eth_getFilterChanges\", [filterId]);\n            await this._emitResults(this.#provider, result);\n        }\n        catch (error) {\n            console.log(\"@TODO\", error);\n        }\n        this.#provider.once(\"block\", this.#poller);\n    }\n    #teardown() {\n        const filterIdPromise = this.#filterIdPromise;\n        if (filterIdPromise) {\n            this.#filterIdPromise = null;\n            filterIdPromise.then((filterId) => {\n                this.#provider.send(\"eth_uninstallFilter\", [filterId]);\n            });\n        }\n    }\n    start() {\n        if (this.#running) {\n            return;\n        }\n        this.#running = true;\n        this.#poll(-2);\n    }\n    stop() {\n        if (!this.#running) {\n            return;\n        }\n        this.#running = false;\n        this.#hault = true;\n        this.#teardown();\n        this.#provider.off(\"block\", this.#poller);\n    }\n    pause(dropWhilePaused) {\n        if (dropWhilePaused) {\n            this.#teardown();\n        }\n        this.#provider.off(\"block\", this.#poller);\n    }\n    resume() { this.start(); }\n}\n/**\n *  A **FilterIdSubscriber** for receiving contract events.\n *\n *  @_docloc: api/providers/abstract-provider\n */\nexport class FilterIdEventSubscriber extends FilterIdSubscriber {\n    #event;\n    constructor(provider, filter) {\n        super(provider);\n        this.#event = copy(filter);\n    }\n    _recover(provider) {\n        return new PollingEventSubscriber(provider, this.#event);\n    }\n    async _subscribe(provider) {\n        const filterId = await provider.send(\"eth_newFilter\", [this.#event]);\n        return filterId;\n    }\n    async _emitResults(provider, results) {\n        for (const result of results) {\n            provider.emit(this.#event, provider._wrapLog(result, provider._network));\n        }\n    }\n}\n/**\n *  A **FilterIdSubscriber** for receiving pending transactions events.\n *\n *  @_docloc: api/providers/abstract-provider\n */\nexport class FilterIdPendingSubscriber extends FilterIdSubscriber {\n    async _subscribe(provider) {\n        return await provider.send(\"eth_newPendingTransactionFilter\", []);\n    }\n    async _emitResults(provider, results) {\n        for (const result of results) {\n            provider.emit(\"pending\", result);\n        }\n    }\n}\n//# sourceMappingURL=subscriber-filterid.js.map","/**\n *  About JSON-RPC...\n *\n * @_section: api/providers/jsonrpc:JSON-RPC Provider  [about-jsonrpcProvider]\n */\n// @TODO:\n// - Add the batching API\n// https://playground.open-rpc.org/?schemaUrl=https://raw.githubusercontent.com/ethereum/eth1.0-apis/assembled-spec/openrpc.json&uiSchema%5BappBar%5D%5Bui:splitView%5D=true&uiSchema%5BappBar%5D%5Bui:input%5D=false&uiSchema%5BappBar%5D%5Bui:examplesDropdown%5D=false\nimport { AbiCoder } from \"../abi/index.js\";\nimport { getAddress, resolveAddress } from \"../address/index.js\";\nimport { TypedDataEncoder } from \"../hash/index.js\";\nimport { accessListify } from \"../transaction/index.js\";\nimport { defineProperties, getBigInt, hexlify, isHexString, toQuantity, toUtf8Bytes, makeError, assert, assertArgument, FetchRequest, resolveProperties } from \"../utils/index.js\";\nimport { AbstractProvider, UnmanagedSubscriber } from \"./abstract-provider.js\";\nimport { AbstractSigner } from \"./abstract-signer.js\";\nimport { Network } from \"./network.js\";\nimport { FilterIdEventSubscriber, FilterIdPendingSubscriber } from \"./subscriber-filterid.js\";\nconst Primitive = \"bigint,boolean,function,number,string,symbol\".split(/,/g);\n//const Methods = \"getAddress,then\".split(/,/g);\nfunction deepCopy(value) {\n    if (value == null || Primitive.indexOf(typeof (value)) >= 0) {\n        return value;\n    }\n    // Keep any Addressable\n    if (typeof (value.getAddress) === \"function\") {\n        return value;\n    }\n    if (Array.isArray(value)) {\n        return (value.map(deepCopy));\n    }\n    if (typeof (value) === \"object\") {\n        return Object.keys(value).reduce((accum, key) => {\n            accum[key] = value[key];\n            return accum;\n        }, {});\n    }\n    throw new Error(`should not happen: ${value} (${typeof (value)})`);\n}\nfunction stall(duration) {\n    return new Promise((resolve) => { setTimeout(resolve, duration); });\n}\nfunction getLowerCase(value) {\n    if (value) {\n        return value.toLowerCase();\n    }\n    return value;\n}\nfunction isPollable(value) {\n    return (value && typeof (value.pollingInterval) === \"number\");\n}\nconst defaultOptions = {\n    polling: false,\n    staticNetwork: null,\n    batchStallTime: 10,\n    batchMaxSize: (1 << 20),\n    batchMaxCount: 100 // 100 requests\n};\n// @TODO: Unchecked Signers\nexport class JsonRpcSigner extends AbstractSigner {\n    address;\n    constructor(provider, address) {\n        super(provider);\n        defineProperties(this, { address });\n    }\n    connect(provider) {\n        assert(false, \"cannot reconnect JsonRpcSigner\", \"UNSUPPORTED_OPERATION\", {\n            operation: \"signer.connect\"\n        });\n    }\n    async getAddress() {\n        return this.address;\n    }\n    // JSON-RPC will automatially fill in nonce, etc. so we just check from\n    async populateTransaction(tx) {\n        return await this.populateCall(tx);\n    }\n    // Returns just the hash of the transaction after sent, which is what\n    // the bare JSON-RPC API does;\n    async sendUncheckedTransaction(_tx) {\n        const tx = deepCopy(_tx);\n        const promises = [];\n        // Make sure the from matches the sender\n        if (tx.from) {\n            const _from = tx.from;\n            promises.push((async () => {\n                const from = await resolveAddress(_from, this.provider);\n                assertArgument(from != null && from.toLowerCase() === this.address.toLowerCase(), \"from address mismatch\", \"transaction\", _tx);\n                tx.from = from;\n            })());\n        }\n        else {\n            tx.from = this.address;\n        }\n        // The JSON-RPC for eth_sendTransaction uses 90000 gas; if the user\n        // wishes to use this, it is easy to specify explicitly, otherwise\n        // we look it up for them.\n        if (tx.gasLimit == null) {\n            promises.push((async () => {\n                tx.gasLimit = await this.provider.estimateGas({ ...tx, from: this.address });\n            })());\n        }\n        // The address may be an ENS name or Addressable\n        if (tx.to != null) {\n            const _to = tx.to;\n            promises.push((async () => {\n                tx.to = await resolveAddress(_to, this.provider);\n            })());\n        }\n        // Wait until all of our properties are filled in\n        if (promises.length) {\n            await Promise.all(promises);\n        }\n        const hexTx = this.provider.getRpcTransaction(tx);\n        return this.provider.send(\"eth_sendTransaction\", [hexTx]);\n    }\n    async sendTransaction(tx) {\n        // This cannot be mined any earlier than any recent block\n        const blockNumber = await this.provider.getBlockNumber();\n        // Send the transaction\n        const hash = await this.sendUncheckedTransaction(tx);\n        // Unfortunately, JSON-RPC only provides and opaque transaction hash\n        // for a response, and we need the actual transaction, so we poll\n        // for it; it should show up very quickly\n        return await (new Promise((resolve, reject) => {\n            const timeouts = [1000, 100];\n            const checkTx = async () => {\n                // Try getting the transaction\n                const tx = await this.provider.getTransaction(hash);\n                if (tx != null) {\n                    resolve(tx.replaceableTransaction(blockNumber));\n                    return;\n                }\n                // Wait another 4 seconds\n                this.provider._setTimeout(() => { checkTx(); }, timeouts.pop() || 4000);\n            };\n            checkTx();\n        }));\n    }\n    async signTransaction(_tx) {\n        const tx = deepCopy(_tx);\n        // Make sure the from matches the sender\n        if (tx.from) {\n            const from = await resolveAddress(tx.from, this.provider);\n            assertArgument(from != null && from.toLowerCase() === this.address.toLowerCase(), \"from address mismatch\", \"transaction\", _tx);\n            tx.from = from;\n        }\n        else {\n            tx.from = this.address;\n        }\n        const hexTx = this.provider.getRpcTransaction(tx);\n        return await this.provider.send(\"eth_signTransaction\", [hexTx]);\n    }\n    async signMessage(_message) {\n        const message = ((typeof (_message) === \"string\") ? toUtf8Bytes(_message) : _message);\n        return await this.provider.send(\"personal_sign\", [\n            hexlify(message), this.address.toLowerCase()\n        ]);\n    }\n    async signTypedData(domain, types, _value) {\n        const value = deepCopy(_value);\n        // Populate any ENS names (in-place)\n        const populated = await TypedDataEncoder.resolveNames(domain, types, value, async (value) => {\n            const address = await resolveAddress(value);\n            assertArgument(address != null, \"TypedData does not support null address\", \"value\", value);\n            return address;\n        });\n        return await this.provider.send(\"eth_signTypedData_v4\", [\n            this.address.toLowerCase(),\n            JSON.stringify(TypedDataEncoder.getPayload(populated.domain, types, populated.value))\n        ]);\n    }\n    async unlock(password) {\n        return this.provider.send(\"personal_unlockAccount\", [\n            this.address.toLowerCase(), password, null\n        ]);\n    }\n    // https://github.com/ethereum/wiki/wiki/JSON-RPC#eth_sign\n    async _legacySignMessage(_message) {\n        const message = ((typeof (_message) === \"string\") ? toUtf8Bytes(_message) : _message);\n        return await this.provider.send(\"eth_sign\", [\n            this.address.toLowerCase(), hexlify(message)\n        ]);\n    }\n}\n/**\n *  The JsonRpcApiProvider is an abstract class and **MUST** be\n *  sub-classed.\n *\n *  It provides the base for all JSON-RPC-based Provider interaction.\n *\n *  Sub-classing Notes:\n *  - a sub-class MUST override _send\n *  - a sub-class MUST call the `_start()` method once connected\n */\nexport class JsonRpcApiProvider extends AbstractProvider {\n    #options;\n    // The next ID to use for the JSON-RPC ID field\n    #nextId;\n    // Payloads are queued and triggered in batches using the drainTimer\n    #payloads;\n    #drainTimer;\n    #notReady;\n    #network;\n    #scheduleDrain() {\n        if (this.#drainTimer) {\n            return;\n        }\n        // If we aren't using batching, no hard in sending it immeidately\n        const stallTime = (this._getOption(\"batchMaxCount\") === 1) ? 0 : this._getOption(\"batchStallTime\");\n        this.#drainTimer = setTimeout(() => {\n            this.#drainTimer = null;\n            const payloads = this.#payloads;\n            this.#payloads = [];\n            while (payloads.length) {\n                // Create payload batches that satisfy our batch constraints\n                const batch = [(payloads.shift())];\n                while (payloads.length) {\n                    if (batch.length === this.#options.batchMaxCount) {\n                        break;\n                    }\n                    batch.push((payloads.shift()));\n                    const bytes = JSON.stringify(batch.map((p) => p.payload));\n                    if (bytes.length > this.#options.batchMaxSize) {\n                        payloads.unshift((batch.pop()));\n                        break;\n                    }\n                }\n                // Process the result to each payload\n                (async () => {\n                    const payload = ((batch.length === 1) ? batch[0].payload : batch.map((p) => p.payload));\n                    this.emit(\"debug\", { action: \"sendRpcPayload\", payload });\n                    try {\n                        const result = await this._send(payload);\n                        this.emit(\"debug\", { action: \"receiveRpcResult\", result });\n                        // Process results in batch order\n                        for (const { resolve, reject, payload } of batch) {\n                            // Find the matching result\n                            const resp = result.filter((r) => (r.id === payload.id))[0];\n                            // No result; the node failed us in unexpected ways\n                            if (resp == null) {\n                                return reject(new Error(\"@TODO: no result\"));\n                            }\n                            // The response is an error\n                            if (\"error\" in resp) {\n                                return reject(this.getRpcError(payload, resp));\n                            }\n                            // All good; send the result\n                            resolve(resp.result);\n                        }\n                    }\n                    catch (error) {\n                        this.emit(\"debug\", { action: \"receiveRpcError\", error });\n                        for (const { reject } of batch) {\n                            // @TODO: augment the error with the payload\n                            reject(error);\n                        }\n                    }\n                })();\n            }\n        }, stallTime);\n    }\n    constructor(network, options) {\n        super(network);\n        this.#nextId = 1;\n        this.#options = Object.assign({}, defaultOptions, options || {});\n        this.#payloads = [];\n        this.#drainTimer = null;\n        this.#network = null;\n        {\n            let resolve = null;\n            const promise = new Promise((_resolve) => {\n                resolve = _resolve;\n            });\n            this.#notReady = { promise, resolve };\n        }\n        // This could be relaxed in the future to just check equivalent networks\n        const staticNetwork = this._getOption(\"staticNetwork\");\n        if (staticNetwork) {\n            assertArgument(staticNetwork === network, \"staticNetwork MUST match network object\", \"options\", options);\n            this.#network = staticNetwork;\n        }\n    }\n    /**\n     *  Returns the value associated with the option %%key%%.\n     *\n     *  Sub-classes can use this to inquire about configuration options.\n     */\n    _getOption(key) {\n        return this.#options[key];\n    }\n    /**\n     *  Gets the [[Network]] this provider has committed to. On each call, the network\n     *  is detected, and if it has changed, the call will reject.\n     */\n    get _network() {\n        assert(this.#network, \"network is not available yet\", \"NETWORK_ERROR\");\n        return this.#network;\n    }\n    /*\n     {\n        assert(false, \"sub-classes must override _send\", \"UNSUPPORTED_OPERATION\", {\n            operation: \"jsonRpcApiProvider._send\"\n        });\n    }\n    */\n    /**\n     *  Resolves to the non-normalized value by performing %%req%%.\n     *\n     *  Sub-classes may override this to modify behavior of actions,\n     *  and should generally call ``super._perform`` as a fallback.\n     */\n    async _perform(req) {\n        // Legacy networks do not like the type field being passed along (which\n        // is fair), so we delete type if it is 0 and a non-EIP-1559 network\n        if (req.method === \"call\" || req.method === \"estimateGas\") {\n            let tx = req.transaction;\n            if (tx && tx.type != null && getBigInt(tx.type)) {\n                // If there are no EIP-1559 properties, it might be non-EIP-a559\n                if (tx.maxFeePerGas == null && tx.maxPriorityFeePerGas == null) {\n                    const feeData = await this.getFeeData();\n                    if (feeData.maxFeePerGas == null && feeData.maxPriorityFeePerGas == null) {\n                        // Network doesn't know about EIP-1559 (and hence type)\n                        req = Object.assign({}, req, {\n                            transaction: Object.assign({}, tx, { type: undefined })\n                        });\n                    }\n                }\n            }\n        }\n        const request = this.getRpcRequest(req);\n        if (request != null) {\n            return await this.send(request.method, request.args);\n        }\n        return super._perform(req);\n    }\n    /**\n     *  Sub-classes may override this; it detects the *actual* network that\n     *  we are **currently** connected to.\n     *\n     *  Keep in mind that [[send]] may only be used once [[ready]], otherwise the\n     *  _send primitive must be used instead.\n     */\n    async _detectNetwork() {\n        const network = this._getOption(\"staticNetwork\");\n        if (network) {\n            return network;\n        }\n        // If we are ready, use ``send``, which enabled requests to be batched\n        if (this.ready) {\n            return Network.from(getBigInt(await this.send(\"eth_chainId\", [])));\n        }\n        // We are not ready yet; use the primitive _send\n        const payload = {\n            id: this.#nextId++, method: \"eth_chainId\", params: [], jsonrpc: \"2.0\"\n        };\n        this.emit(\"debug\", { action: \"sendRpcPayload\", payload });\n        let result;\n        try {\n            result = (await this._send(payload))[0];\n        }\n        catch (error) {\n            this.emit(\"debug\", { action: \"receiveRpcError\", error });\n            throw error;\n        }\n        this.emit(\"debug\", { action: \"receiveRpcResult\", result });\n        if (\"result\" in result) {\n            return Network.from(getBigInt(result.result));\n        }\n        throw this.getRpcError(payload, result);\n    }\n    /**\n     *  Sub-classes **MUST** call this. Until [[_start]] has been called, no calls\n     *  will be passed to [[_send]] from [[send]]. If it is overridden, then\n     *  ``super._start()`` **MUST** be called.\n     *\n     *  Calling it multiple times is safe and has no effect.\n     */\n    _start() {\n        if (this.#notReady == null || this.#notReady.resolve == null) {\n            return;\n        }\n        this.#notReady.resolve();\n        this.#notReady = null;\n        (async () => {\n            // Bootstrap the network\n            while (this.#network == null) {\n                try {\n                    this.#network = await this._detectNetwork();\n                }\n                catch (error) {\n                    console.log(\"JsonRpcProvider failed to startup; retry in 1s\");\n                    await stall(1000);\n                }\n            }\n            // Start dispatching requests\n            this.#scheduleDrain();\n        })();\n    }\n    /**\n     *  Resolves once the [[_start]] has been called. This can be used in\n     *  sub-classes to defer sending data until the connection has been\n     *  established.\n     */\n    async _waitUntilReady() {\n        if (this.#notReady == null) {\n            return;\n        }\n        return await this.#notReady.promise;\n    }\n    /**\n     *  Return a Subscriber that will manage the %%sub%%.\n     *\n     *  Sub-classes may override this to modify the behavior of\n     *  subscription management.\n     */\n    _getSubscriber(sub) {\n        // Pending Filters aren't availble via polling\n        if (sub.type === \"pending\") {\n            return new FilterIdPendingSubscriber(this);\n        }\n        if (sub.type === \"event\") {\n            return new FilterIdEventSubscriber(this, sub.filter);\n        }\n        // Orphaned Logs are handled automatically, by the filter, since\n        // logs with removed are emitted by it\n        if (sub.type === \"orphan\" && sub.filter.orphan === \"drop-log\") {\n            return new UnmanagedSubscriber(\"orphan\");\n        }\n        return super._getSubscriber(sub);\n    }\n    /**\n     *  Returns true only if the [[_start]] has been called.\n     */\n    get ready() { return this.#notReady == null; }\n    /**\n     *  Returns %%tx%% as a normalized JSON-RPC transaction request,\n     *  which has all values hexlified and any numeric values converted\n     *  to Quantity values.\n     */\n    getRpcTransaction(tx) {\n        const result = {};\n        // JSON-RPC now requires numeric values to be \"quantity\" values\n        [\"chainId\", \"gasLimit\", \"gasPrice\", \"type\", \"maxFeePerGas\", \"maxPriorityFeePerGas\", \"nonce\", \"value\"].forEach((key) => {\n            if (tx[key] == null) {\n                return;\n            }\n            let dstKey = key;\n            if (key === \"gasLimit\") {\n                dstKey = \"gas\";\n            }\n            result[dstKey] = toQuantity(getBigInt(tx[key], `tx.${key}`));\n        });\n        // Make sure addresses and data are lowercase\n        [\"from\", \"to\", \"data\"].forEach((key) => {\n            if (tx[key] == null) {\n                return;\n            }\n            result[key] = hexlify(tx[key]);\n        });\n        // Normalize the access list object\n        if (tx.accessList) {\n            result[\"accessList\"] = accessListify(tx.accessList);\n        }\n        return result;\n    }\n    /**\n     *  Returns the request method and arguments required to perform\n     *  %%req%%.\n     */\n    getRpcRequest(req) {\n        switch (req.method) {\n            case \"chainId\":\n                return { method: \"eth_chainId\", args: [] };\n            case \"getBlockNumber\":\n                return { method: \"eth_blockNumber\", args: [] };\n            case \"getGasPrice\":\n                return { method: \"eth_gasPrice\", args: [] };\n            case \"getBalance\":\n                return {\n                    method: \"eth_getBalance\",\n                    args: [getLowerCase(req.address), req.blockTag]\n                };\n            case \"getTransactionCount\":\n                return {\n                    method: \"eth_getTransactionCount\",\n                    args: [getLowerCase(req.address), req.blockTag]\n                };\n            case \"getCode\":\n                return {\n                    method: \"eth_getCode\",\n                    args: [getLowerCase(req.address), req.blockTag]\n                };\n            case \"getStorage\":\n                return {\n                    method: \"eth_getStorageAt\",\n                    args: [\n                        getLowerCase(req.address),\n                        (\"0x\" + req.position.toString(16)),\n                        req.blockTag\n                    ]\n                };\n            case \"broadcastTransaction\":\n                return {\n                    method: \"eth_sendRawTransaction\",\n                    args: [req.signedTransaction]\n                };\n            case \"getBlock\":\n                if (\"blockTag\" in req) {\n                    return {\n                        method: \"eth_getBlockByNumber\",\n                        args: [req.blockTag, !!req.includeTransactions]\n                    };\n                }\n                else if (\"blockHash\" in req) {\n                    return {\n                        method: \"eth_getBlockByHash\",\n                        args: [req.blockHash, !!req.includeTransactions]\n                    };\n                }\n                break;\n            case \"getTransaction\":\n                return {\n                    method: \"eth_getTransactionByHash\",\n                    args: [req.hash]\n                };\n            case \"getTransactionReceipt\":\n                return {\n                    method: \"eth_getTransactionReceipt\",\n                    args: [req.hash]\n                };\n            case \"call\":\n                return {\n                    method: \"eth_call\",\n                    args: [this.getRpcTransaction(req.transaction), req.blockTag]\n                };\n            case \"estimateGas\": {\n                return {\n                    method: \"eth_estimateGas\",\n                    args: [this.getRpcTransaction(req.transaction)]\n                };\n            }\n            case \"getLogs\":\n                if (req.filter && req.filter.address != null) {\n                    if (Array.isArray(req.filter.address)) {\n                        req.filter.address = req.filter.address.map(getLowerCase);\n                    }\n                    else {\n                        req.filter.address = getLowerCase(req.filter.address);\n                    }\n                }\n                return { method: \"eth_getLogs\", args: [req.filter] };\n        }\n        return null;\n    }\n    /**\n     *  Returns an ethers-style Error for the given JSON-RPC error\n     *  %%payload%%, coalescing the various strings and error shapes\n     *  that different nodes return, coercing them into a machine-readable\n     *  standardized error.\n     */\n    getRpcError(payload, _error) {\n        const { method } = payload;\n        const { error } = _error;\n        if (method === \"eth_estimateGas\" && error.message) {\n            const msg = error.message;\n            if (!msg.match(/revert/i) && msg.match(/insufficient funds/i)) {\n                return makeError(\"insufficient funds\", \"INSUFFICIENT_FUNDS\", {\n                    transaction: (payload.params[0]),\n                });\n            }\n        }\n        if (method === \"eth_call\" || method === \"eth_estimateGas\") {\n            const result = spelunkData(error);\n            const e = AbiCoder.getBuiltinCallException((method === \"eth_call\") ? \"call\" : \"estimateGas\", (payload.params[0]), (result ? result.data : null));\n            e.info = { error, payload };\n            return e;\n            /*\n                        let message = \"missing revert data during JSON-RPC call\";\n            \n                        const action = <\"call\" | \"estimateGas\" | \"unknown\">(({ eth_call: \"call\", eth_estimateGas: \"estimateGas\" })[method] || \"unknown\");\n                        let data: null | string = null;\n                        let reason: null | string = null;\n                        const transaction = <{ from: string, to: string, data: string }>((<any>payload).params[0]);\n                        const invocation = null;\n                        let revert: null | { signature: string, name: string, args: Array<any> } = null;\n            \n                        if (result) {\n                            // @TODO: Extract errorSignature, errorName, errorArgs, reason if\n                            //        it is Error(string) or Panic(uint25)\n                            message = \"execution reverted during JSON-RPC call\";\n                            data = result.data;\n            \n                            let bytes = getBytes(data);\n                            if (bytes.length % 32 !== 4) {\n                                message += \" (could not parse reason; invalid data length)\";\n            \n                            } else if (data.substring(0, 10) === \"0x08c379a0\") {\n                                // Error(string)\n                                try {\n                                    if (bytes.length < 68) { throw new Error(\"bad length\"); }\n                                    bytes = bytes.slice(4);\n                                    const pointer = getNumber(hexlify(bytes.slice(0, 32)));\n                                    bytes = bytes.slice(pointer);\n                                    if (bytes.length < 32) { throw new Error(\"overrun\"); }\n                                    const length = getNumber(hexlify(bytes.slice(0, 32)));\n                                    bytes = bytes.slice(32);\n                                    if (bytes.length < length) { throw new Error(\"overrun\"); }\n                                    reason = toUtf8String(bytes.slice(0, length));\n                                    revert = {\n                                        signature: \"Error(string)\",\n                                        name: \"Error\",\n                                        args: [ reason ]\n                                    };\n                                    message += `: ${ JSON.stringify(reason) }`;\n            \n                                } catch (error) {\n                                    console.log(error);\n                                    message += \" (could not parse reason; invalid data length)\";\n                                }\n            \n                            } else if (data.substring(0, 10) === \"0x4e487b71\") {\n                                // Panic(uint256)\n                                try {\n                                    if (bytes.length !== 36) { throw new Error(\"bad length\"); }\n                                    const arg = getNumber(hexlify(bytes.slice(4)));\n                                    revert = {\n                                        signature: \"Panic(uint256)\",\n                                        name: \"Panic\",\n                                        args: [ arg ]\n                                    };\n                                    reason = `Panic due to ${ PanicReasons.get(Number(arg)) || \"UNKNOWN\" }(${ arg })`;\n                                    message += `: ${ reason }`;\n                                } catch (error) {\n                                    console.log(error);\n                                    message += \" (could not parse panic reason)\";\n                                }\n                            }\n                        }\n            \n                        return makeError(message, \"CALL_EXCEPTION\", {\n                            action, data, reason, transaction, invocation, revert,\n                            info: { payload, error }\n                        });\n                        */\n        }\n        // Only estimateGas and call can return arbitrary contract-defined text, so now we\n        // we can process text safely.\n        const message = JSON.stringify(spelunkMessage(error));\n        if (typeof (error.message) === \"string\" && error.message.match(/user denied|ethers-user-denied/i)) {\n            const actionMap = {\n                eth_sign: \"signMessage\",\n                personal_sign: \"signMessage\",\n                eth_signTypedData_v4: \"signTypedData\",\n                eth_signTransaction: \"signTransaction\",\n                eth_sendTransaction: \"sendTransaction\",\n                eth_requestAccounts: \"requestAccess\",\n                wallet_requestAccounts: \"requestAccess\",\n            };\n            return makeError(`user rejected action`, \"ACTION_REJECTED\", {\n                action: (actionMap[method] || \"unknown\"),\n                reason: \"rejected\",\n                info: { payload, error }\n            });\n        }\n        if (method === \"eth_sendRawTransaction\" || method === \"eth_sendTransaction\") {\n            const transaction = (payload.params[0]);\n            if (message.match(/insufficient funds|base fee exceeds gas limit/i)) {\n                return makeError(\"insufficient funds for intrinsic transaction cost\", \"INSUFFICIENT_FUNDS\", {\n                    transaction\n                });\n            }\n            if (message.match(/nonce/i) && message.match(/too low/i)) {\n                return makeError(\"nonce has already been used\", \"NONCE_EXPIRED\", { transaction });\n            }\n            // \"replacement transaction underpriced\"\n            if (message.match(/replacement transaction/i) && message.match(/underpriced/i)) {\n                return makeError(\"replacement fee too low\", \"REPLACEMENT_UNDERPRICED\", { transaction });\n            }\n            if (message.match(/only replay-protected/i)) {\n                return makeError(\"legacy pre-eip-155 transactions not supported\", \"UNSUPPORTED_OPERATION\", {\n                    operation: method, info: { transaction }\n                });\n            }\n        }\n        if (message.match(/the method .* does not exist/i)) {\n            return makeError(\"unsupported operation\", \"UNSUPPORTED_OPERATION\", {\n                operation: payload.method\n            });\n        }\n        return makeError(\"could not coalesce error\", \"UNKNOWN_ERROR\", { error });\n    }\n    /**\n     *  Requests the %%method%% with %%params%% via the JSON-RPC protocol\n     *  over the underlying channel. This can be used to call methods\n     *  on the backend that do not have a high-level API within the Provider\n     *  API.\n     *\n     *  This method queues requests according to the batch constraints\n     *  in the options, assigns the request a unique ID.\n     *\n     *  **Do NOT override** this method in sub-classes; instead\n     *  override [[_send]] or force the options values in the\n     *  call to the constructor to modify this method's behavior.\n     */\n    send(method, params) {\n        // @TODO: cache chainId?? purge on switch_networks\n        const id = this.#nextId++;\n        const promise = new Promise((resolve, reject) => {\n            this.#payloads.push({\n                resolve, reject,\n                payload: { method, params, id, jsonrpc: \"2.0\" }\n            });\n        });\n        // If there is not a pending drainTimer, set one\n        this.#scheduleDrain();\n        return promise;\n    }\n    /**\n     *  Resolves to the [[Signer]] account for  %%address%% managed by\n     *  the client.\n     *\n     *  If the %%address%% is a number, it is used as an index in the\n     *  the accounts from [[listAccounts]].\n     *\n     *  This can only be used on clients which manage accounts (such as\n     *  Geth with imported account or MetaMask).\n     *\n     *  Throws if the account doesn't exist.\n     */\n    async getSigner(address) {\n        if (address == null) {\n            address = 0;\n        }\n        const accountsPromise = this.send(\"eth_accounts\", []);\n        // Account index\n        if (typeof (address) === \"number\") {\n            const accounts = (await accountsPromise);\n            if (address >= accounts.length) {\n                throw new Error(\"no such account\");\n            }\n            return new JsonRpcSigner(this, accounts[address]);\n        }\n        const { accounts } = await resolveProperties({\n            network: this.getNetwork(),\n            accounts: accountsPromise\n        });\n        // Account address\n        address = getAddress(address);\n        for (const account of accounts) {\n            if (getAddress(account) === account) {\n                return new JsonRpcSigner(this, account);\n            }\n        }\n        throw new Error(\"invalid account\");\n    }\n}\nexport class JsonRpcApiPollingProvider extends JsonRpcApiProvider {\n    #pollingInterval;\n    constructor(network, options) {\n        super(network, options);\n        this.#pollingInterval = 4000;\n    }\n    _getSubscriber(sub) {\n        const subscriber = super._getSubscriber(sub);\n        if (isPollable(subscriber)) {\n            subscriber.pollingInterval = this.#pollingInterval;\n        }\n        return subscriber;\n    }\n    /**\n     *  The polling interval (default: 4000 ms)\n     */\n    get pollingInterval() { return this.#pollingInterval; }\n    set pollingInterval(value) {\n        if (!Number.isInteger(value) || value < 0) {\n            throw new Error(\"invalid interval\");\n        }\n        this.#pollingInterval = value;\n        this._forEachSubscriber((sub) => {\n            if (isPollable(sub)) {\n                sub.pollingInterval = this.#pollingInterval;\n            }\n        });\n    }\n}\n/**\n *  The JsonRpcProvider is one of the most common Providers,\n *  which performs all operations over HTTP (or HTTPS) requests.\n *\n *  Events are processed by polling the backend for the current block\n *  number; when it advances, all block-base events are then checked\n *  for updates.\n */\nexport class JsonRpcProvider extends JsonRpcApiPollingProvider {\n    #connect;\n    constructor(url, network, options) {\n        if (url == null) {\n            url = \"http:/\\/localhost:8545\";\n        }\n        super(network, options);\n        if (typeof (url) === \"string\") {\n            this.#connect = new FetchRequest(url);\n        }\n        else {\n            this.#connect = url.clone();\n        }\n    }\n    _getConnection() {\n        return this.#connect.clone();\n    }\n    async send(method, params) {\n        // All requests are over HTTP, so we can just start handling requests\n        // We do this here rather than the constructor so that we don't send any\n        // requests to the network (i.e. eth_chainId) until we absolutely have to.\n        await this._start();\n        return await super.send(method, params);\n    }\n    async _send(payload) {\n        // Configure a POST connection for the requested method\n        const request = this._getConnection();\n        request.body = JSON.stringify(payload);\n        request.setHeader(\"content-type\", \"application/json\");\n        const response = await request.send();\n        response.assertOk();\n        let resp = response.bodyJson;\n        if (!Array.isArray(resp)) {\n            resp = [resp];\n        }\n        return resp;\n    }\n}\nfunction spelunkData(value) {\n    if (value == null) {\n        return null;\n    }\n    // These *are* the droids we're looking for.\n    if (typeof (value.message) === \"string\" && value.message.match(\"reverted\") && isHexString(value.data)) {\n        return { message: value.message, data: value.data };\n    }\n    // Spelunk further...\n    if (typeof (value) === \"object\") {\n        for (const key in value) {\n            const result = spelunkData(value[key]);\n            if (result) {\n                return result;\n            }\n        }\n        return null;\n    }\n    // Might be a JSON string we can further descend...\n    if (typeof (value) === \"string\") {\n        try {\n            return spelunkData(JSON.parse(value));\n        }\n        catch (error) { }\n    }\n    return null;\n}\nfunction _spelunkMessage(value, result) {\n    if (value == null) {\n        return;\n    }\n    // These *are* the droids we're looking for.\n    if (typeof (value.message) === \"string\") {\n        result.push(value.message);\n    }\n    // Spelunk further...\n    if (typeof (value) === \"object\") {\n        for (const key in value) {\n            _spelunkMessage(value[key], result);\n        }\n    }\n    // Might be a JSON string we can further descend...\n    if (typeof (value) === \"string\") {\n        try {\n            return _spelunkMessage(JSON.parse(value), result);\n        }\n        catch (error) { }\n    }\n}\nfunction spelunkMessage(value) {\n    const result = [];\n    _spelunkMessage(value, result);\n    return result;\n}\n//# sourceMappingURL=provider-jsonrpc.js.map","import { ChainSyncer } from \".\";\nimport * as Ethers from \"ethers\";\n\nexport const scannerTick = async function(\n  this: ChainSyncer,\n) {\n\n  let max_block = 0;\n\n  this._is_scanner_busy = true;\n\n  try {\n    max_block = await this.rpcHandle(async (rpc_url) => {\n      const provider = new Ethers.JsonRpcProvider(rpc_url, undefined, {\n        polling: false\n      });\n      return await provider.getBlockNumber();\n    }, false);\n  } catch (error) {\n    this.logger.error('Error while fetchaing max_block, will try again anyway:', error);\n  }\n\n  if(max_block >= 0) {\n    try {\n\n      const { scans, events } = await this.scanContracts(max_block);\n\n      if(!scans.length) {\n        \n        if(this.verbose) {\n          this.logger.log(`[MAXBLOCK: ${max_block}] No scans executed`);\n        }\n      } else {\n    \n        await this.saveLatestBlocks(scans);\n    \n        if(this.verbose) {\n          this.logger.log(`[MAXBLOCK: ${max_block}] ${events.length} events added`);\n        }\n\n        await this.safeRescan(max_block);\n      }\n\n    } catch (error) {\n      this.logger.error('Error in scanner', error);\n    }\n  }\n\n  this._is_scanner_busy = false;\n\n  if(this._is_started) {\n    setTimeout(() => this.scannerTick(), this.block_time * 1.5)\n  }\n}","import { ChainSyncer } from \".\";\n\nexport const syncSubscribers = async function(\n  this: ChainSyncer,\n): Promise<void> {\n  this.subscribers = await this.adapter.selectAllSubscribers();\n\n  const events = this.subscribers.reduce((acc, subscriber) => {\n    return acc.concat(subscriber.events);\n  }, [] as string[]);\n\n  events.forEach(event => {\n    const { contract_name } = this._parseListenerName(event);\n  \n    if(!this.used_contracts.includes(contract_name)) {\n      this.used_contracts.push(contract_name);\n    }\n  });\n}","import { ethers as Ethers } from \"ethers\";\nimport { ChainSyncer } from \".\";\n\nexport function _uniq<T extends (string | number)>(a: T[]): T[] {\n\n  const seen: Record<T, boolean> = {} as Record<T, boolean>;\n  return a.filter(function(item) {\n    return seen[item] ? false : (seen[item] = true);\n  });\n}\n\nexport function _parseListenerName(this: ChainSyncer, event: string) {\n  const exploded = event.split('.')\n\n  const contract_name = exploded[0];\n  const event_name = exploded[1];\n\n  if(!(contract_name || '').length || !(event_name || '').length) {\n    throw new Error('Invalid listener format! Must be ContractName.EventName');\n  }\n\n  return { contract_name, event_name }\n}\n\nexport function _parseEventId(this: ChainSyncer, event: Ethers.EventLog) {\n  return event.transactionHash + '_' + event.index\n}\n\nexport async function _loadUsedBlocks(this: ChainSyncer, events: Ethers.EventLog[]) {\n  const used_blocks = this._uniq(events.map(n => n.blockNumber));\n\n  return await Promise.all(\n    used_blocks.map(n => {\n\n      return this.rpcHandle(async (rpc_url) => {\n        const provider = new Ethers.JsonRpcProvider(rpc_url, undefined, {\n          polling: false\n        });\n        return await provider.getBlock(n).catch((err: any) => {\n          this.logger.error(`getBlock error in ${n} block`);\n          return null;\n        })\n      }, false);\n      \n    }).filter(n => n !== null)\n  ).then(res => res.filter(n => n !== null) as Ethers.Block[]);\n}\n\nexport async function _loadUsedTxs(this: ChainSyncer, events: Ethers.EventLog[]) {\n  const used_txs = this._uniq(events.map(n => n.transactionHash));\n\n  return await Promise.all(\n    used_txs.map(n => {\n      return this.rpcHandle(async (rpc_url) => {\n        const provider = new Ethers.JsonRpcProvider(rpc_url, undefined, {\n          polling: false\n        });\n        return await provider.getTransaction(n).catch((err: any) => {\n          this.logger.error(`getTransaction error in ${n} tx`);\n          return null;\n        })\n      }, false);\n    }).filter(n => n !== null)\n  ).then(res => res.filter(n => n !== null) as Ethers.TransactionResponse[]);\n}","import { IChainSyncerEvent, IChainSyncerScanResult } from \"@/types\";\nimport * as Ethers from \"ethers\";\nimport { ChainSyncer } from \".\";\n\nexport const rpcHandle = async function<T>(\n  this: ChainSyncer,\n  handler: (rpc_url: string) => Promise<T>,\n  archive_preferred = false\n): Promise<T> {\n \n  if(archive_preferred && !this.archive_rpc_url.length) {\n    archive_preferred = false;\n  }\n\n  let index = 0;\n  \n  const rpc_urls = archive_preferred ? this.archive_rpc_url : this.rpc_url;\n\n  let handler_res: T;\n\n  for (const rpc_url of rpc_urls) {\n    try {\n      handler_res = await handler(rpc_url);\n      break;\n    } catch (error) {\n      index++;\n      if(index === rpc_urls.length) {\n        throw error;\n      }\n    }\n  }\n\n  // @ts-ignore\n  return handler_res;\n}","import { IChainSyncerEvent, IChainSyncerScanResult } from \"@/types\";\nimport * as Ethers from \"ethers\";\nimport { ChainSyncer } from \".\";\n\nexport const fillScansWithEvents = async function(\n  this: ChainSyncer,\n  scans: IChainSyncerScanResult[]\n): Promise<void> {\n\n  const aggregatedFilling = (scans: IChainSyncerScanResult[], from_block: number, to_block: number) => {\n\n    return this.rpcHandle(async (rpc_url: string) => {\n      const provider = new Ethers.JsonRpcProvider(rpc_url, undefined, {\n        polling: false\n      });\n  \n      const contract_names = scans.map(n => n.contract_name)\n  \n      // get event names from this.subscribers\n      const event_names = this.subscribers.map(n => n.events).reduce((acc, n) => {\n        return [ ...acc, ...n ]\n      }, [] as string[]).filter(n => {\n        return contract_names.includes(n.split(\".\")[0]);\n      });\n  \n      // get topics from event names\n      const topics = event_names.map(n => {\n        const contract_name = n.split(\".\")[0];\n        const event_name = n.split(\".\")[1];\n  \n        const result = scans.find(n => n.contract_name === contract_name)?.contract_getter_result;\n  \n        if(!result) {\n          throw new Error(`Internal. Contract ${contract_name} not found!`);\n        }\n        \n        const ethers_contract = new Ethers.Contract(\n          result.address,\n          result.contract_abi,\n          provider\n        );\n  \n        const e = ethers_contract.interface.getEvent(event_name);\n  \n        if(!e) {\n          throw new Error(`Internal. Event ${event_name} not found!`);\n        }\n  \n        return e.topicHash;\n      });\n  \n      const logs = await provider.getLogs({\n        address: grouped_scans.map(n => n.contract_getter_result.address),\n        // only unique topics\n        topics: topics.filter((n, i) => topics.indexOf(n) === i),\n        fromBlock: Ethers.toBeHex(from_block),\n        toBlock: Ethers.toBeHex(to_block),\n      }) || [];\n  \n      const event_logs = logs.filter(n => !n.removed).map(n => {\n\n        const scan = grouped_scans.find(z => z.contract_getter_result.address === n.address);\n\n        if(!scan) {\n          throw new Error(`Internal. Contract ${n.address} not found!`);\n        }\n\n        const contract = new Ethers.Contract(\n          scan?.contract_getter_result.address,\n          scan?.contract_getter_result.contract_abi,\n          provider\n        );\n\n        const description = contract.interface.parseLog({\n          topics: [ ...n.topics ],\n          data: n.data,\n        });\n\n        if(!description || !description.name) {\n          throw new Error(`Internal. Malformed description!`);\n        }\n        \n        const fragment = contract.interface.getEvent(description.name);\n\n        if(!fragment) {\n          throw new Error(`Internal. Malformed fragment!`);\n        }\n\n        const event = new Ethers.EventLog(\n          n,\n          contract.interface,\n          fragment\n        );\n\n        return event;\n\n      });\n\n      const event_ids = await this.adapter.filterExistingEvents(\n        event_logs.map(n => this._parseEventId(n))\n      );\n    \n      return event_logs.filter(n => {\n        const id = this._parseEventId(n);\n        return event_ids.includes(id);\n      });\n\n    }, false)\n  }\n\n  // get the highest to_block from scans\n  const highest_to_block = scans.reduce((acc, n) => {\n    return n.to_block > acc ? n.to_block : acc;\n  }, 0);\n \n  const grouped_scans = scans.filter(n => {\n    return n.to_block === highest_to_block && n.to_block - n.from_block <= this.archive_rpc_activator_edge;\n  });\n\n  // get lowest from_block from grouped_scans\n  const lowest_from_block_from_grouped_scans = grouped_scans.length ? grouped_scans.reduce((acc, n) => {\n    return n.from_block < acc ? n.from_block : acc;\n  }, Infinity) : highest_to_block;\n\n  const ungrouped_scans = scans.filter(n => {\n    return n.to_block !== highest_to_block || n.to_block - n.from_block > this.archive_rpc_activator_edge;\n  });  \n\n  const proms = [];\n\n  proms.push(aggregatedFilling(grouped_scans, lowest_from_block_from_grouped_scans, highest_to_block));\n\n  proms.push(...ungrouped_scans.map(n => {\n    return aggregatedFilling([ n ], n.from_block, n.to_block);\n  }));\n\n  const result = await Promise.all(proms);\n\n  const events = result.reduce((acc, n) => {\n    return [ ...acc, ...n ];\n  }, [] as Ethers.EventLog[]);\n  \n  // add events to scans\n  scans.forEach(n => {\n    n.events = events.filter(z => {\n      return z.address === n.contract_getter_result.address;\n    });\n  });\n  \n}","import { addEvents } from \"./add-events\";\nimport { addListener } from \"./add-listener\";\nimport { updateSubscriber } from \"./update-subscriber\";\nimport { resolveBlockRanges } from \"./resolve-block-ranges\";\n\nimport { parseEvent } from \"./parse-event\";\nimport { processSubscriberEvents } from \"./process-subscriber-events\";\nimport { processingTick } from \"./processing-tick\";\nimport { safeRescan } from \"./safe-rescan\";\nimport { saveLatestBlocks } from \"./save-latest-blocks\";\nimport { scanContractBlocks } from \"./scan-contract-blocks\";\nimport { scanContracts } from \"./scan-contracts\";\nimport { scannerTick } from \"./scanner-tick\";\nimport { syncSubscribers } from \"./sync-subscribers\";\nimport { IChainSyncerAdapter, TChainSyncerContractsResolverHook, IChainSyncerLogger, IChainSyncerOptions, IChainSyncerListener, IChainSyncerSubscriber } from \"@/types\";\nimport { ethers as Ethers } from \"ethers\";\nimport { _loadUsedBlocks, _loadUsedTxs, _parseEventId, _parseListenerName, _uniq } from \"./helpers\";\nimport { rpcHandle } from \"./rpc-handle\";\nimport { fillScansWithEvents } from \"./fill-scans-with-events\";\n\nexport class ChainSyncer {\n\n  listeners: Record<string, IChainSyncerListener> = {}\n  used_contracts: string[] = []\n  subscribers: IChainSyncerSubscriber[] = []\n\n  _next_safe_at = 0\n  _is_started = false\n  _is_scanner_busy = false;\n  _is_processor_busy = false;\n  _current_max_block = 0;\n\n  addEvents = addEvents;\n  parseEvent = parseEvent;\n  resolveBlockRanges = resolveBlockRanges;\n  saveLatestBlocks = saveLatestBlocks;\n  scanContracts = scanContracts;\n  scanContractBlocks = scanContractBlocks;\n  on = addListener;\n  updateSubscriber = updateSubscriber;\n  syncSubscribers = syncSubscribers;\n  scannerTick = scannerTick;\n  safeRescan = safeRescan;\n  processingTick = processingTick;\n  processSubscriberEvents = processSubscriberEvents;\n  rpcHandle = rpcHandle;\n  fillScansWithEvents = fillScansWithEvents;\n\n  _uniq = _uniq;\n  _parseListenerName = _parseListenerName;\n  _parseEventId = _parseEventId;\n  _loadUsedBlocks = _loadUsedBlocks;\n  _loadUsedTxs = _loadUsedTxs;\n\n  query_block_limit: number;\n  block_time: number;\n  tick_interval: number;\n  adapter: IChainSyncerAdapter;\n  mode: string;\n  rpc_url: string[];\n  contractsResolver: TChainSyncerContractsResolverHook;\n  verbose: boolean;\n  safe_rescan_every_n_block: number;\n  safe_rescans_to_repeat: number;\n  logger: IChainSyncerLogger;\n  archive_rpc_url: string[];\n  archive_rpc_activator_edge: number;\n\n  constructor(adapter: IChainSyncerAdapter, opts: IChainSyncerOptions) {\n\n    const {\n      tick_interval = 2000,\n      query_block_limit = 200,\n      safe_rescan_every_n_block = 5,\n      safe_rescans_to_repeat = 2,\n      mode = 'mono',\n      verbose = false,\n      contracts = [],\n      logger = console,\n      archive_rpc_url = [],\n      archive_rpc_activator_edge = 1000,\n\n      // required\n      block_time,\n      contractsResolver,\n      rpc_url,\n    } = opts;\n\n    if(query_block_limit < (safe_rescan_every_n_block * safe_rescans_to_repeat)) {\n      throw new Error('query_block_limit cannot be less than safe_rescan_every_n_block * safe_rescans_to_repeat');\n    }\n  \n    if(!contractsResolver) {\n      throw new Error('contractsResolver argument is required');\n    }\n  \n    if(!rpc_url) {\n      throw new Error('rpc_url argument is required');\n    }\n  \n    if(!block_time) {\n      throw new Error('block_time argument is required');\n    }\n\n    if(contracts.length && mode !== 'scanner') {\n      throw new Error('contracts argument are only available in scanner mode');\n    }\n\n    this.archive_rpc_url = Array.isArray(archive_rpc_url) ? archive_rpc_url : [ archive_rpc_url ];\n    this.archive_rpc_activator_edge = archive_rpc_activator_edge;\n    this.query_block_limit = query_block_limit;\n    this.block_time = block_time;\n    this.tick_interval = tick_interval;\n    this.adapter = adapter;\n    this.mode = mode;\n    this.rpc_url = !Array.isArray(rpc_url) ? [ rpc_url ] : rpc_url;\n    this.contractsResolver = contractsResolver;\n    this.verbose = verbose;\n    this.safe_rescan_every_n_block = safe_rescan_every_n_block;\n    this.safe_rescans_to_repeat = safe_rescans_to_repeat;\n    this.logger = logger;\n  }\n\n\n  async start() {\n\n    if(this._is_started) {\n      throw new Error('Already started');\n    }\n\n    await this.syncSubscribers();\n\n    if(this.mode === 'mono') {\n      await this.updateSubscriber('mono', Object.keys(this.listeners));\n    }\n    \n    this.scannerTick();\n\n    if(this.mode === 'mono') {\n      this.processingTick();\n    }\n\n    this._is_started = true;\n  }\n\n\n  async stop() {\n    this._is_started = false;\n\n    let interval: any;\n    await new Promise(resolve => {\n      interval = setInterval(() => {\n        if(!this._is_scanner_busy && !this._is_processor_busy) {\n          clearInterval(interval);\n          resolve(undefined);\n        }\n      }, 500);\n    })\n  }\n\n\n  async selectPendingEvents(subscriber: string) {\n    return this.adapter.selectAllUnprocessedEventsBySubscriber(subscriber);\n  }\n\n\n  async markEventsAsProcessed(subscriber: string, event_ids: string[]) {\n    await Promise.all(\n      event_ids.map(n => this.adapter.setEventProcessedForSubscriber(n, subscriber))\n    );\n  }\n}","import { IChainSyncerEvent } from \"@/types\"\n\nexport function toEvent(data: IChainSyncerEvent): IEvent {\n\n  return {\n    ...data,\n    processed_subscribers: {},\n  }\n}\n\nexport interface IEvent extends IChainSyncerEvent {\n  processed_subscribers: any;\n} ","import { IEvent } from \"./event\";\n\nexport function toQueueEvent(event: IEvent, subscriber: string): IQueueEvent {\n\n  return {\n    id: event.id + '_' + subscriber,\n    event_id: event.id,\n    event: event.event,\n    contract: event.contract,\n    subscriber: subscriber,\n  }\n}\n\nexport interface IQueueEvent {\n  id: string;\n  event_id: string;\n  event: string;\n  contract: string;\n  subscriber: string;\n} ","import { IChainSyncerAdapter, IChainSyncerEvent, IChainSyncerSubscriber } from \"@/types\";\nimport { IEvent, toEvent } from \"./event\";\nimport { IQueueEvent, toQueueEvent } from \"./queue-event\";\n\ninterface ISubscriber {\n  name: string;\n  events: string[];\n  added_at: Record<string, number>;\n}\n\nexport class InMemoryAdapter implements IChainSyncerAdapter {\n\n  latest_blocks: Record<string, number> = {}\n  events: IEvent[] = []\n  events_queue: IQueueEvent[] = []\n  subscribers: Record<string, ISubscriber> = {}\n\n  _is_chainsyncer_adapter = true\n  \n  constructor() {\n    // ...\n  }\n\n  async getLatestScannedBlockNumber(contract_name: string) {\n\n    const item = this.latest_blocks[contract_name];\n\n    if(item) {\n      return item;\n    }\n    \n    return 0;\n  }\n\n  async removeQueue(subscriber: string, events: string[]) {\n    \n    const indexes = events.map(n => {\n\n      const [ contract, event ] = n.split('.');\n\n      return this.events_queue.findIndex(z => {\n        return z.event === event && z.contract === contract && z.subscriber === subscriber\n      });\n    })\n\n    indexes.forEach(n => {\n      this.events_queue.splice(n, 1);\n    })\n  }\n\n  async addUnprocessedEventsToQueue(subscriber: string, events: string[]) {\n\n    events.forEach(e => {\n      const [ contract, event ] = e.split('.');\n\n      const unprocessed_events = this.events.filter(n => {\n        return !n.processed_subscribers[subscriber] && n.contract === contract && n.event === event\n      });\n\n      this.events_queue.push(\n        ...unprocessed_events.map(n => toQueueEvent(n, subscriber))\n      );\n    })\n  }\n\n  async selectAllSubscribers() {\n    return [ ...Object.values(this.subscribers) ];\n  }\n\n  async updateSubscriber(subscriber: string, events: string[]) {\n\n    events = [ ...events.sort() ];\n\n    if(!this.subscribers[subscriber]) {\n      this.subscribers[subscriber] = {\n        name: subscriber,\n        events: [],\n        added_at: {\n          ...this.latest_blocks\n        }\n      };\n    }\n\n    const events_added = events.filter(n => !this.subscribers[subscriber].events.includes(n));\n    const events_removed = this.subscribers[subscriber].events.filter(n => !events.includes(n));\n\n    this.subscribers[subscriber].events = events;\n\n    return { events_added, events_removed };\n  }\n\n  async saveLatestScannedBlockNumber(contract_name: string, block_number: number) {\n    this.latest_blocks[contract_name] = block_number;\n  }\n\n  async selectAllUnprocessedEventsBySubscriber(\n    subscriber: string\n  ) {\n\n    const from_queue = this.events_queue\n      .filter(n => n.subscriber === subscriber)\n      .map(n => n.event_id);\n\n    const events = this.events.filter(n => from_queue.includes(n.id))\n\n    return events;\n  }\n\n  async setEventProcessedForSubscriber(id: string, subscriber: string) {\n\n    const item = this.events.find(n => n.id === id);\n\n    if(item) {\n      item.processed_subscribers[subscriber] = true;\n\n      const __id = id + '_' + subscriber;\n\n      const index = this.events_queue.findIndex(n => n.id === __id)\n      \n      if(index !== -1) {\n        this.events_queue.splice(index, 1);\n      }\n    }\n  }\n\n  async filterExistingEvents(ids: string[]) {\n\n    const exist_ids = this.events.filter(n => {\n      return ids.includes(n.id)\n    }).map(n => n.id);\n\n    ids = ids.filter(n => !exist_ids.includes(n));\n\n    return ids;\n  }\n\n\n  async saveEvents(_events: IChainSyncerEvent[], subscribers: IChainSyncerSubscriber[]) {\n\n    if(!_events.length) {\n      return;\n    }\n\n    const events = _events.map(n => toEvent(n))\n\n    const non_exist_ids = await this.filterExistingEvents(events.map(n => n.id));\n    \n    if(non_exist_ids.length !== events.length) {\n      throw new Error('Some events already exist');\n    }\n\n    this.events.push(...events);\n    \n    for (const i in subscribers) {\n\n      const subs = subscribers[i];\n\n      const filtered_events = events.filter(n => {\n        const full = n.contract + '.' + n.event;\n        return subs.events.includes(full);\n      })\n\n      this.events_queue.push(\n        ...filtered_events.map(n => toQueueEvent(n, subs.name))\n      );\n    }\n  }\n}","// @ts-ignore\nimport { ChainSyncer } from './lib/chain-syncer';\n// @ts-ignore\nimport { InMemoryAdapter } from './lib/in-memory-adapter';\n\nexport default ChainSyncer;\nexport { ChainSyncer, InMemoryAdapter };","import './setPublicPath'\nimport mod from '~entry'\nexport default mod\nexport * from '~entry'\n"],"names":["root","factory","exports","module","define","amd","self","this","_typeof","obj","Symbol","iterator","constructor","prototype","_classCallCheck","instance","Constructor","TypeError","isDeepEqual","isDeepStrictEqual","_require","_require$codes","codes","ERR_AMBIGUOUS_ARGUMENT","ERR_INVALID_ARG_TYPE","ERR_INVALID_ARG_VALUE","ERR_INVALID_RETURN_VALUE","ERR_MISSING_ARGS","AssertionError","_require2","inspect","_require$types","isPromise","isRegExp","objectAssign","Object","assign","objectIs","is","Map","lazyLoadComparison","comparison","warned","assert","ok","NO_EXCEPTION_SENTINEL","innerFail","message","Error","fail","actual","expected","operator","stackStartFn","internalMessage","argsLen","arguments","length","undefined","warn","process","emitWarning","console","bind","errArgs","err","generatedMessage","innerOk","fn","argLen","value","_len","args","Array","_key","apply","concat","notDeepStrictEqual","equal","notEqual","deepEqual","notDeepEqual","deepStrictEqual","strictEqual","notStrictEqual","Comparison","keys","_this","forEach","key","test","compareExceptionKey","a","b","name","expectedException","msg","push","isPrototypeOf","call","getActual","e","checkIsPromise","then","catch","waitForActual","promiseFn","Promise","resolve","resultPromise","expectsError","error","details","fnType","expectsNoError","strict","_len6","_key6","throws","_len2","_key2","rejects","_len3","_key3","result","doesNotThrow","_len4","_key4","doesNotReject","_len5","_key5","ifError","newErr","origStack","stack","tmp2","split","shift","tmp1","i","pos","indexOf","slice","join","_objectSpread","target","source","ownKeys","getOwnPropertySymbols","filter","sym","getOwnPropertyDescriptor","enumerable","_defineProperty","defineProperty","configurable","writable","_defineProperties","props","descriptor","_createClass","protoProps","staticProps","_possibleConstructorReturn","_assertThisInitialized","ReferenceError","_inherits","subClass","superClass","create","_setPrototypeOf","_wrapNativeSuper","Class","_cache","_isNativeFunction","has","get","set","Wrapper","_construct","_getPrototypeOf","isNativeReflectConstruct","Reflect","construct","sham","Proxy","Date","toString","Parent","Function","o","p","setPrototypeOf","__proto__","getPrototypeOf","endsWith","str","search","this_len","substring","repeat","count","Math","floor","maxCount","log","blue","green","red","white","kReadableOperator","strictEqualObject","notStrictEqualObject","notIdentical","kMaxShortLength","copyError","inspectValue","val","compact","customInspect","depth","maxArrayLength","Infinity","showHidden","breakLength","showProxy","sorted","getters","createErrDiff","other","res","lastPos","end","skipped","actualInspected","actualLines","expectedLines","indicator","inputLength","maxLength","stderr","isTTY","columns","pop","maxLines","max","_actualLines","printedLines","skippedMsg","cur","expectedLine","actualLine","divergingLines","_Error","options","limit","stackTraceLimit","String","getColorDepth","base","_res","knownOperators","code","captureStackTrace","custom","recurseTimes","ctx","util","createErrorType","Base","getMessage","arg1","arg2","arg3","NodeError","_Base","oneOf","thing","isArray","len","map","startsWith","substr","includes","start","determiner","replace","type","reason","inspected","RangeError","input","_slicedToArray","arr","_arrayWithHoles","_iterableToArrayLimit","_nonIterableRest","_arr","_n","_d","_e","_s","_i","next","done","regexFlagsSupported","flags","arrayFromSet","array","arrayFromMap","objectGetOwnPropertySymbols","numberIsNaN","Number","isNaN","uncurryThis","f","hasOwnProperty","propertyIsEnumerable","objectToString","isAnyArrayBuffer","isArrayBufferView","isDate","isMap","isSet","isNativeError","isBoxedPrimitive","isNumberObject","isStringObject","isBooleanObject","isBigIntObject","isSymbolObject","isFloat32Array","isFloat64Array","isNonIndex","charCodeAt","pow","getOwnNonIndexProperties","compare","x","y","min","ONLY_ENUMERABLE","kStrict","kLoose","kNoIterator","kIsArray","kIsSet","kIsMap","areSimilarRegExps","RegExp","areSimilarFloatArrays","byteLength","offset","areSimilarTypedArrays","Uint8Array","buffer","byteOffset","areEqualArrayBuffers","buf1","buf2","isEqualBoxedPrimitive","val1","val2","valueOf","Boolean","BigInt","innerDeepEqual","memos","val1Tag","val2Tag","keys1","keys2","keyCheck","getTime","_keys","_keys2","size","getEnumerables","k","iterationType","aKeys","bKeys","symbolKeysA","symbolKeysB","_symbolKeysB","position","val2MemoA","val2MemoB","areEq","objEquiv","delete","setHasEqualElement","memo","setValues","findLooseMatchingPrimitives","prim","setMightHaveLoosePrim","altValue","mapMightHaveLoosePrim","item","curB","setEquiv","aValues","Set","add","bValues","_val","mapHasEqualEntry","key1","item1","key2","mapEquiv","aEntries","_aEntries$i","item2","bEntries","_i2","_bEntries$_i","keysA","GetIntrinsic","callBind","$indexOf","allowMissing","intrinsic","$apply","$call","$reflectApply","$gOPD","$defineProperty","$max","originalFunction","func","desc","applyBind","now","times","g","window","functions","info","time","timeEnd","trace","dir","consoleAssert","tuple","label","duration","format","object","expression","hasSymbols","toStr","origDefineProperty","isFunction","hasPropertyDescriptors","supportsDescriptors","predicate","defineProperties","predicates","firstSource","to","nextSource","keysArray","nextIndex","nextKey","polyfill","isCallable","forEachArray","receiver","forEachString","string","charAt","forEachObject","list","thisArg","ERROR_MESSAGE","funcType","that","bound","binder","boundLength","boundArgs","Empty","implementation","$SyntaxError","SyntaxError","$Function","$TypeError","getEvalledConstructor","expressionSyntax","throwTypeError","ThrowTypeError","calleeThrows","gOPDthrows","getProto","needsEval","TypedArray","INTRINSICS","AggregateError","ArrayBuffer","Atomics","DataView","decodeURI","decodeURIComponent","encodeURI","encodeURIComponent","eval","EvalError","Float32Array","Float64Array","FinalizationRegistry","Int8Array","Int16Array","Int32Array","isFinite","JSON","parseFloat","parseInt","SharedArrayBuffer","Uint8ClampedArray","Uint16Array","Uint32Array","URIError","WeakMap","WeakRef","WeakSet","doEval","gen","LEGACY_ALIASES","hasOwn","$concat","$spliceApply","splice","$replace","$strSlice","$exec","exec","rePropName","reEscapeChar","stringToPath","first","last","match","number","quote","subString","getBaseIntrinsic","alias","intrinsicName","parts","intrinsicBaseName","intrinsicRealName","skipFurtherCaching","isOwn","part","hasArrayLengthDefineBug","origSymbol","hasSymbolSham","symObj","symVal","getOwnPropertyNames","syms","toStringTag","ctor","superCtor","super_","TempCtor","hasToStringTag","callBound","$toString","isStandardArguments","isLegacyArguments","callee","supportsStandardArguments","badArrayLike","isCallableMarker","fnToStr","reflectApply","_","constructorRegex","isES6ClassFn","fnStr","tryFunctionObject","objectClass","fnClass","genClass","ddaClass","ddaClass2","ddaClass3","isIE68","isDDA","document","all","strClass","GeneratorFunction","isFnRegex","getGeneratorFunc","generatorFunc","getPolyfill","shim","NaN","availableTypedArrays","gOPD","globalThis","typedArrays","$slice","toStrTags","typedArray","proto","superProto","tryTypedArrays","anyTrue","getter","tag","keysShim","isArgs","isEnumerable","hasDontEnumBug","hasProtoEnumBug","dontEnums","equalsConstructorPrototype","excludedKeys","$applicationCache","$console","$external","$frame","$frameElement","$frames","$innerHeight","$innerWidth","$onmozfullscreenchange","$onmozfullscreenerror","$outerHeight","$outerWidth","$pageXOffset","$pageYOffset","$parent","$scrollLeft","$scrollTop","$scrollX","$scrollY","$self","$webkitIndexedDB","$webkitStorageInfo","$window","hasAutomationEqualityBug","equalsConstructorPrototypeIfNotBuggy","isObject","isArguments","isString","theKeys","skipProto","j","skipConstructor","origKeys","originalKeys","keysWorksWithArguments","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","defaultClearTimeout","runTimeout","fun","setTimeout","runClearTimeout","marker","clearTimeout","currentQueue","queue","draining","queueIndex","cleanUpNextTick","drainQueue","timeout","run","Item","noop","nextTick","title","browser","env","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","binding","cwd","chdir","umask","arg","copy","fill","readUInt8","isArgumentsObject","isGeneratorFunction","whichTypedArray","isTypedArray","BigIntSupported","SymbolSupported","ObjectToString","numberValue","stringValue","booleanValue","bigIntValue","symbolValue","checkBoxedPrimitive","prototypeValueOf","isView","isDataView","isUint8Array","isUint8ClampedArray","isUint16Array","isUint32Array","isInt8Array","isInt16Array","isInt32Array","isBigInt64Array","isBigUint64Array","isMapToString","working","isSetToString","isWeakMapToString","isWeakMap","isWeakSetToString","isWeakSet","isArrayBufferToString","isArrayBuffer","isDataViewToString","SharedArrayBufferCopy","isSharedArrayBufferToString","isSharedArrayBuffer","isAsyncFunction","isMapIterator","isSetIterator","isGeneratorObject","isWebAssemblyCompiledModule","method","getOwnPropertyDescriptors","descriptors","formatRegExp","objects","stringify","isNull","deprecate","noDeprecation","deprecated","throwDeprecation","traceDeprecation","debugs","debugEnvRegex","NODE_DEBUG","debugEnv","toUpperCase","opts","seen","stylize","stylizeNoColor","colors","isBoolean","_extend","isUndefined","stylizeWithColor","formatValue","styleType","style","styles","arrayToHash","hash","idx","ret","primitive","formatPrimitive","visibleKeys","isError","formatError","output","braces","n","toUTCString","formatArray","formatProperty","reduceToSingleString","simple","isNumber","l","line","reduce","prev","numLinesEst","ar","isNullOrUndefined","isSymbol","re","d","isPrimitive","pad","debuglog","pid","types","isBuffer","months","timestamp","getHours","getMinutes","getSeconds","getDate","getMonth","prop","inherits","origin","kCustomPromisifiedSymbol","callbackifyOnRejected","cb","newReason","callbackify","original","callbackified","maybeCb","rej","promisify","promiseResolve","promiseReject","promise","reject","foundName","possibleNames","out","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","leafPrototypes","t","mode","__esModule","ns","r","def","current","definition","currentScript","src","__awaiter","_arguments","P","generator","adopt","fulfilled","step","rejected","addEvents","scans","merged_events","acc","events","used_blocks","_loadUsedBlocks","used_txs","_loadUsedTxs","process_events","event","block","find","blockNumber","tx","transactionHash","parseEvent","contract_name","adapter","saveEvents","subscribers","listener","_is_started","event_name","_parseListenerName","used_contracts","full_event","updateSubscriber","subscriber","events_added","events_removed","addUnprocessedEventsToQueue","removeQueue","syncSubscribers","resolveBlockRanges","max_block","from_block","getLatestScannedBlockNumber","contract","contractsResolver","start_block","to_block","query_block_limit","force_rescan_till","contract_getter_result","padIndex","num","padStart","id","_parseEventId","eventName","transaction_hash","block_number","log_index","index","tx_index","transactionIndex","from_address","from","global_index","traverseParse","z","_isBigNumber","block_timestamp","parseListenerName","processSubscriberEvents","selectAllUnprocessedEventsBySubscriber","listener_name","verbose","logger","setEventProcessedForSubscriber","processingTick","proms","_is_processor_busy","subs","tick_interval","safeRescan","_next_safe_at","safe_rescan_every_n_block","safe_rescans_to_repeat","scanContracts","saveLatestBlocks","saveLatestScannedBlockNumber","scanContractBlocks","event_ids","filterExistingEvents","_contracts","prom","data","fillScansWithEvents","checkType","trim","argument","async","resolveProperties","results","accum","v","values","HEX","toJSON","sort","isCallException","makeError","check","assertArgumentCount","expectedCount","_normalizeForms","form","normalize","fromCharCode","assertNormalize","operation","assertPrivate","givenGuard","guard","className","_getBytes","getBytesCopy","isBytesLike","HexCharacters","hexlify","bytes","datas","dataLength","zeroPad","left","BN_0","BN_1","maxValue","fromTwos","_value","_width","getUint","width","getNumber","fault","mask","toTwos","getBigInt","_bits","bits","isInteger","Nibbles","toBigInt","toNumber","toBeHex","toBeArray","hex","toQuantity","WordSize","Padding","passProperties","_guard","throwError","wrapped","Result","items","names","wrap","super","nameCounts","freeze","getValue","toArray","of","toObject","callback","static","Coder","localName","dynamic","_throwError","Writer","appendWriter","writer","writeBytes","paddingOffset","writeValue","writeUpdatableValue","Reader","allowLoose","consumed","loose","alignedLength","ceil","subReader","readBytes","readValue","readIndex","isSafeInteger","bool","lengths","outputLen","blockLen","exists","checkFinished","destroyed","finished","U32_MASK64","_32n","fromBig","le","h","lst","Ah","Al","toBig","shrSH","s","shrSL","rotrSH","rotrSL","rotrBH","rotrBL","rotr32H","rotr32L","rotlSH","rotlSL","rotlBH","rotlBL","Bh","Bl","add3L","Cl","add3H","low","Ch","add4L","Dl","add4H","Dh","add5L","El","add5H","Eh","u64","crypto","u32","rotr","word","isLE","utf8ToBytes","TextEncoder","encode","Hash","clone","_cloneInto","wrapConstructor","hashConstructor","hashC","update","digest","tmp","wrapConstructorWithOpts","hashCons","SHA3_PI","SHA3_ROTL","_SHA3_IOTA","_0n","_1n","_2n","_7n","_256n","_0x71n","round","R","SHA3_IOTA_H","SHA3_IOTA_L","rotlH","rotlL","keccakP","rounds","B","idx1","idx0","B0","B1","Th","Tl","curH","curL","PI","Keccak","suffix","enableXOF","posOut","state","state32","keccak","take","finish","writeInto","bufferOut","subarray","xofInto","xof","digestInto","destroy","keccak_256","genShake","dkLen","locked","_keccak256","__keccak256","_data","lock","register","BN_36","getChecksumAddress","address","toLowerCase","chars","expanded","hashed","ibanLookup","safeDigits","ibanChecksum","c","checksum","Base36","fromBase36","_gaurd","signed","Typed","_typedSymbol","for","gaurd","defaultValue","minValue","isBigInt","isData","tupleName","arrayLength","isTyped","AddressCoder","dereference","decode","reader","AnonymousCoder","coder","pack","coders","arrayValues","unique","staticWriter","dynamicWriter","updateFuncs","dynamicOffset","updateFunc","baseOffset","unpack","baseReader","offsetReader","baseType","fromItems","ArrayCoder","defaultChild","BooleanCoder","DynamicBytesCoder","BytesCoder","FixedBytesCoder","NullCoder","BN_MAX_UINT256","NumberCoder","maxUintValue","bounds","errorFunc","badCodepoint","ignoreFunc","replaceFunc","Utf8ErrorFuncs","ignore","getUtf8CodePoints","_bytes","onError","extraLength","overlongMask","nextChar","toUtf8Bytes","c2","pair","_toUtf8String","codePoints","codePoint","toUtf8String","StringCoder","TupleCoder","uniqueNames","setify","_kwVisib","KwVisib","_kwTypes","KwTypes","_kwModifiers","KwModifiers","_kwOther","_keywords","Keywords","SimpleTokens","regexWhitespacePrefix","regexNumberPrefix","regexIdPrefix","regexId","regexType","TokenString","tokens","reset","linkBack","linkNext","popKeyword","allowed","top","peek","text","popType","popParen","popParams","link","peekKeyword","peekType","token","lex","brackets","commas","allowSingle","included","consumeName","keyword","consumeKeywords","keywords","consumeMutability","modifiers","consumeParams","allowIndexed","ParamType","consumeGas","consumeEoi","regexArrayType","verifyBasicType","internal","ParamTypeInternal","ErrorFragmentInternal","EventFragmentInternal","ConstructorFragmentInternal","FallbackFragmentInternal","FunctionFragmentInternal","StructFragmentInternal","indexed","components","arrayChildren","isTuple","parse","comp","isIndexable","walk","promises","setValue","childType","param","isParamType","comps","bracket","arrayMatch","Fragment","inputs","ConstructorFragment","ErrorFragment","EventFragment","FallbackFragment","FunctionFragment","StructFragment","isFragment","NamedFragment","joinParams","params","selector","anonymous","topicHash","fragment","payable","gas","stateMutability","errorObj","topIsValid","mutability","outputs","constant","PanicReasons","paramTypeBytes","paramTypeNumber","defaultCoder","getBuiltinCallException","action","abiCoder","invocation","revert","signature","transaction","AbiCoder","getDefaultValue","defaultAbiCoder","isAddressable","checkAddress","resolveAddress","resolver","resolveName","getAddress","padding","BN__1","hexPadRight","padOffset","hexTrue","hexFalse","domainFieldTypes","chainId","verifyingContract","salt","domainFieldNames","checkString","domainChecks","getBaseEncoder","boundsUpper","boundsLower","encodeType","fields","TypedDataEncoder","primaryType","links","parents","subtypes","field","encoder","primaryTypes","checkCircular","found","child","subtype","st","getEncoder","subEncoder","encodedType","unshift","encodeData","hashStruct","_visit","visit","domain","domainFields","EIP712Domain","hashDomain","ensCache","domainValues","domainTypes","typesWithDomain","accessSetify","addr","storageKeys","storageKey","accessListify","localeCompare","decodeBase64","textData","atob","encodeBase64","btoa","getUrl","req","_signal","protocol","url","signal","credentials","allowInsecureAuthentication","controller","AbortController","abort","init","headers","Headers","body","resp","fetch","respBody","arrayBuffer","statusCode","status","statusMessage","statusText","MAX_ATTEMPTS","SLOT_INTERVAL","getUrlFunc","reData","reIpfs","dataGatewayFunc","FetchResponse","unpercent","FetchRequest","getIpfsGatewayFunc","baseUrl","gatewayIpfs","Gateways","fetchSignals","FetchCancelSignal","request","cancelled","checkSignal","hasBody","allowGzip","getHeader","setHeader","clearHeaders","setCredentials","username","password","preflightFunc","preflight","processFunc","retryFunc","retry","slotInterval","maxAttempts","setThrottleParams","attempt","expires","delay","_request","_response","makeServerError","wait","scheme","response","throttle","assertOk","location","redirect","retryAfter","trunc","random","stall","send","cancel","bodyText","bodyJson","throwThrottleError","ZeroHash","LogDescription","topic","TransactionDescription","ErrorDescription","Indexed","_isIndexed","BuiltinErrors","Interface","fragments","deploy","fallback","receive","abi","frags","getAbiCoder","bucket","minimal","formatJson","forceUnique","matching","lastValue","valueLength","allowOptions","lastArg","matchStr","m","getFunctionName","getFunction","forEachFunction","eventTopic","getEventName","getEvent","forEachEvent","getError","forEachError","_decodeParams","_encodeParams","encodeDeploy","decodeErrorResult","encodeErrorResult","decodeFunctionData","encodeFunctionData","decodeFunctionResult","ef","parsed","parseTransaction","encodeFunctionResult","encodeFilterTopics","topics","encodeTopic","encodeEventLog","dataTypes","dataValues","decodeEventLog","nonIndexed","resultIndexed","resultNonIndexed","nonIndexedIndex","indexedIndex","parseCallResult","parseLog","parseError","hexData","toJson","FeeData","gasPrice","maxFeePerGas","maxPriorityFeePerGas","_type","copyRequest","bigIntKeys","numberKeys","accessList","blockTag","enableCcipReadEnabled","enableCcipRead","customData","Block","provider","parentHash","nonce","difficulty","gasLimit","gasUsed","miner","extraData","baseFeePerGas","transactions","TransactionResponse","prefetchedTransactions","txs","date","indexOrHash","getTransaction","getPrefetchedTransaction","isMined","isLondon","orphanedEvent","createOrphanedBlockFilter","Log","blockHash","removed","getBlock","receipt","getTransactionReceipt","removedEvent","createRemovedLogFilter","TransactionReceipt","contractAddress","logsBloom","cumulativeGasUsed","logs","effectiveGasPrice","fee","getTransactionResult","getBlockNumber","createRemovedTransactionFilter","reorderedEvent","createReorderedTransactionFilter","_confirms","_timeout","confirms","startBlock","nextScan","stopScanning","checkReplacement","getTransactionCount","mined","replacement","replaceableTransaction","confirmations","waiter","cancellers","timer","txListener","replaceListener","isLegacy","isBerlin","orphan","EventPayload","emitter","EventLog","interface","iface","eventSignature","ContractTransactionReceipt","ContractTransactionResponse","ContractUnknownEventPayload","ContractEventPayload","_log","canCall","canEstimate","canResolve","canSend","PreparedTopicFilter","runner","getRunner","resolvedArgs","walkAsync","getTopicFilter","_WrappedMethodBase","feature","getProvider","copyOverrides","overrides","resolveArgs","_runner","WrappedFallback","_contract","proxy","populateTransaction","sendTransaction","estimateGas","WrappedMethod","getFragment","staticCall","staticCallResult","_WrappedEventBase","WrappedEvent","internalValues","setInternal","getInternal","isDeferred","getSubInfo","topicHashify","hasSub","getSub","sub","foundFragment","_foundFragment","starting","stop","started","lastEmit","_emit","payloadFunc","passArgs","BaseContract","filters","_deployTx","addrPromise","deployTx","_prop","connect","getCode","deploymentTransaction","getDeployedCode","checkCode","fromBlock","toBlock","getLogs","total","CustomContract","_ContractBase","Contract","decode_arithmetic","u16","symbol_count","skip","pos_payload","read_width","read_buffer","read_bit","N","FULL","HALF","QRTR","MASK","symbols","range","mid","read_payload","read_compressed_payload","unsafe_atob","lookup","carry","read_deltas","read_sorted","read_sorted_arrays","read_array_while","read_mapped","w","read_linear_table","read_replacement_table","flat","read_transposed","dx","dy","vN","flatMap","ys","j_dy","FENCED","hex_cp","cp","quote_cp","explode_cp","cps","codePointAt","str_from_cps","chunk","fromCodePoint","buf","nf","nfc","nfd","FE0F","STOP_CH","UNIQUE_PH","HYPHEN","read_set","MAPPED","IGNORED","CM","ESCAPE","CHUNKS","read_chunked","UNRESTRICTED","GROUPS","Q","V","M","WHOLE_VALID","WHOLE_MAP","recs","gs","rec","G","some","union","complement","multi","VALID","EMOJI_SORTED","EMOJI_ROOT","read_emoji_trie","temp","F","S","C","Emoji","is_emoji","safe_str_from_cps","quoter","is_combining_mark","should_escape","quoted_cp","check_label_extension","check_leading_underscore","UNDERSCORE","lastIndexOf","check_fenced","error_placement","ens_normalize","flatten","ens_split","preserve_emoji","norm","token_count","emoji","every","filter_fe0f","determine_group","check_group","check_whole","group","maker","shared","whole","groups","error_disallowed","error_group_member","quoted","gg","where","decomposed","reverse","consume_emoji_reversed","eaten","saved","node","conform_emoji_copy","Zeros","checkComponent","ensNameSplit","ensNormalize","namehash","dnsEncode","BN_2","BN_27","BN_28","BN_35","toUint256","Signature","networkV","legacyChainId","getChainId","yParity","yParityAndS","compactSerialized","serialized","bv","sig","assertError","getNormalizedV","_r","_v","_3n","_8n","CURVE","Gx","Gy","beta","divNearest","endo","splitScalar","a1","b1","a2","b2","POW_2_128","c1","k1","mod","k2","k1neg","k2neg","fieldLen","groupLen","hashLen","compressedLen","uncompressedLen","weierstrass","x2","x3","USE_ENDOMORPHISM","ShaError","assertJacPoint","JacobianPoint","Point","equals","ZERO","points","toInv","invertBatch","toAffine","toAffineBatch","fromAffine","X1","Y1","Z1","X2","Y2","Z2","Z1Z1","Z2Z2","U1","U2","S1","S2","negate","double","A","x1b","D","E","X3","Y3","Z3","H","HH","HHH","subtract","multiplyUnsafe","scalar","P0","normalizeScalar","k1p","k2p","precomputeWindow","W","windows","wNAF","affinePoint","BASE","_WINDOW_SIZE","precomputes","pointPrecomputes","normalizeZ","windowSize","maxNumber","shiftBy","wbits","offset1","offset2","abs","cond1","cond2","constTimeNegate","multiply","point","fake","f1p","f2p","invZ","is0","invert","iz1","iz2","iz3","ax","ay","zz","condition","neg","_setWindowSize","hasEvenY","isShort","bytesToNumber","isValidFieldElement","y2","sqrtMod","isYOdd","isFirstByteOdd","assertValidity","ensureBytes","header","fromCompressedHex","fromUncompressedHex","privateKey","normalizePrivateKey","msgHash","recovery","normalizeSignature","truncateHash","radj","rinv","u1","u2","prefix","fromHex","numTo32bStr","multiplyAndAddUnsafe","toRawBytes","isCompressed","toHex","toHexX","toRawX","right","aP","bQ","sum","sliceDER","parseDERInt","parseDERSignature","sBytes","rBytesLeft","hexToNumber","fromDER","isWithinCurveOrder","hasHighS","normalizeS","toDERRawBytes","toDERHex","sHex","numberToHexUnpadded","rHex","sHexL","rHexL","sLen","rLen","toCompactRawBytes","toCompactHex","arrays","uint8a","POW_2_256","numTo32b","hexByte","byte","pow2","power","_6n","_11n","_22n","_23n","_44n","_88n","b3","b6","b9","b11","b22","b44","b88","b176","b220","b223","t1","t2","rt","xc","modulo","u","q","gcd","nums","scratch","lastMultiplied","inverted","reduceRight","bits2int_2","delta","truncateOnly","_sha256Sync","_hmacSha256Sync","HmacDrbg","qByteLen","counter","hmac","utils","hmacSha256","hmacSync","checkSync","incr","seed","reseedSync","sl","generateSync","kmdToSig","kBytes","lowS","kinv","normalizePublicKey","publicKey","fromCompact","getPublicKey","fromPrivateKey","recoverPublicKey","fromSignature","isProbPub","getSharedSecret","privateA","publicB","bits2int","bits2octets","z1","z2","int2octets","initSigArgs","extraEntropy","h1","seedArgs","randomBytes","finalizeSig","recSig","der","recovered","canonical","signSync","privKey","drbg","web","TAGGED_HASH_PREFIXES","bytesToHex","hexToBytes","concatBytes","isValidPrivateKey","_bigintTo32Bytes","_normalizePrivateKey","hashToPrivateKey","minLen","bytesLength","getRandomValues","randomPrivateKey","precompute","cached","sha256","messages","subtle","createHash","ckey","importKey","sign","createHmac","sha256Sync","hmacSha256Sync","taggedHash","tagP","tagH","taggedHashSync","_JacobianPoint","HMAC","iHash","oHash","setBigUint64","view","_u32_max","wh","wl","setUint32","SHA2","dataView","roundClean","oview","Chi","Maj","SHA256_K","IV","SHA256_W","SHA256","getUint32","W15","W2","s0","s1","sigma1","T1","sigma0","T2","SHA512_Kh","SHA512_Kl","SHA512_W_H","SHA512_W_L","SHA512","Fh","Fl","Gh","Gl","Hh","Hl","W15h","W15l","s0h","s0l","W2h","W2l","s1h","s1l","SUMl","SUMh","sigma1h","sigma1l","CHIh","CHIl","T1ll","T1h","T1l","sigma0h","sigma0l","MAJh","MAJl","All","SHA512_256","SHA384","getGlobal","global","anyGlobal","msCrypto","_algo","algo","_computeHmac","algorithm","__computeHmac","computeHmac","SigningKey","computePublicKey","compressedPublicKey","sigDer","recid","computeSharedSecret","pubKey","compressed","pub","p0","p1","pub0","pub1","hexlifyByte","unarrayifyInteger","_decodeChildren","childOffset","decoded","_decode","checkOffset","lengthLength","decodeRlp","arrayifyInteger","_encode","payload","nibbles","encodeRlp","computeAddress","pubkey","recoverAddress","BN_MAX_UINT","handleAddress","handleAccessList","handleNumber","handleUint","formatNumber","formatAccessList","_parseLegacy","_serializeLegacy","legacy","getChainIdV","_parseEipSignature","serialize","_parseEip1559","_serializeEip1559","_parseEip2930","_serializeEip2930","Transaction","typeName","unsignedHash","unsignedSerialized","fromPublicKey","isSigned","inferType","inferTypes","hasGasPrice","hasFee","hasAccessList","ZeroAddress","Alphabet","BN_58","encodeBase58","getIpfsLink","MulticoinProviderPlugin","proivder","supportsCoinType","coinType","matcherIpfs","matchers","EnsResolver","supportsInterface","funcName","supportsWildcard","ccipReadEnable","coinPlugin","plugin","plugins","encodeAddress","ipfs","swarm","avatar","_getAvatar","linkage","getText","owner","tokenId","tokenOwner","ownerOf","balance","balanceOf","metadataUrl","metadata","imageUrl","image","network","getNetwork","ensPlugin","getPlugin","ensAddr","getEnsAddress","currentName","getCreateAddress","nonceHex","allowNull","nullValue","arrayOf","altNames","srcKey","altKey","nv","formatBoolean","formatData","formatHash","_formatLog","formatLog","_formatBlock","formatBlock","formatTransactionResponse","_formatReceiptLog","formatReceiptLog","_formatTransactionReceipt","formatTransactionReceipt","creates","EnsAddress","NetworkPlugin","GasCostPlugin","effectiveBlock","txBase","txCreate","txDataZero","txDataNonzero","txAccessListStorageKey","txAccessListAddress","costs","nullish","EnsPlugin","targetNetwork","Networks","Network","attachPlugin","getPlugins","basename","computeIntrinsicGas","injectCommonNetworks","networkFunc","ensAddress","ensNetwork","nameOrChainId","existing","injected","registerEth","priorityFee","etherscan","apiKey","PollingBlockSubscriber","pollingInterval","_setTimeout","_clearTimeout","pause","dropWhilePaused","resume","OnBlockSubscriber","_poll","PollingOrphanSubscriber","PollingTransactionSubscriber","PollingEventSubscriber","MAX_CCIP_REDIRECTS","getTag","UnmanagedSubscriber","concisify","getSubscription","_event","addresses","addAddress","AbstractProvider","_network","disableCcipRead","perform","_perform","calldata","urls","sender","errorMessages","href","errorMessage","_wrapBlock","_wrapLog","_wrapTransactionReceipt","_wrapTransactionResponse","_detectNetwork","_getAddress","_getBlockTag","_getFilter","_address","_getTransactionRequest","detectNetwork","networkPromise","_tx","txSender","ccipArgs","parseOffchainLookup","errorArgs","ccipResult","ccipReadFetch","encodeBytes","_blockTag","_position","signedTx","signedTransaction","includeTransactions","prefetchTxs","_filter","_getProvider","fromName","getResolver","getAvatar","ensContract","resolverContract","timerId","_func","paused","_forEachSubscriber","_getSubscriber","_recoverSubscriber","oldSub","newSub","emitArgs","subscription","addressableMap","nameMap","_parseString","_parseBytes","numPad","padded","bytesPad","empty","byteCount","zeros","urlsOffset","urlsLength","urlsData","checkProvider","signer","populate","AbstractSigner","getNonce","hasEip1559","feeData","getFeeData","populateCall","txObj","broadcastTransaction","signTransaction","FilterIdSubscriber","_subscribe","_emitResults","_recover","filterId","filterIdPromise","FilterIdEventSubscriber","FilterIdPendingSubscriber","Primitive","deepCopy","getLowerCase","isPollable","defaultOptions","polling","staticNetwork","batchStallTime","batchMaxSize","batchMaxCount","JsonRpcSigner","_from","_to","hexTx","getRpcTransaction","sendUncheckedTransaction","timeouts","checkTx","_message","populated","resolveNames","getPayload","JsonRpcApiProvider","stallTime","_getOption","payloads","batch","_send","getRpcError","_resolve","getRpcRequest","ready","jsonrpc","_start","dstKey","_error","spelunkData","spelunkMessage","actionMap","eth_sign","personal_sign","eth_signTypedData_v4","eth_signTransaction","eth_sendTransaction","eth_requestAccounts","wallet_requestAccounts","accountsPromise","accounts","account","JsonRpcApiPollingProvider","JsonRpcProvider","_getConnection","_spelunkMessage","scannerTick","_is_scanner_busy","rpcHandle","rpc_url","block_time","selectAllSubscribers","_uniq","exploded","handler","archive_preferred","archive_rpc_url","rpc_urls","handler_res","aggregatedFilling","contract_names","event_names","ethers_contract","contract_abi","grouped_scans","event_logs","scan","description","highest_to_block","archive_rpc_activator_edge","lowest_from_block_from_grouped_scans","ungrouped_scans","ChainSyncer","contracts","interval","setInterval","clearInterval","selectPendingEvents","markEventsAsProcessed","toEvent","processed_subscribers","toQueueEvent","event_id","InMemoryAdapter","latest_blocks","indexes","events_queue","findIndex","unprocessed_events","added_at","from_queue","__id","ids","exist_ids","_events","non_exist_ids","filtered_events","full"],"sourceRoot":""}